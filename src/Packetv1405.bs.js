// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Core__Option = require("@rescript/core/src/Core__Option.bs.js");
var CamlinternalLazy = require("rescript/lib/js/camlinternalLazy.js");
var Packet_Status$TerrariaPacket = require("./packet/Packet_Status.bs.js");
var Packet_NpcUpdate$TerrariaPacket = require("./packet/Packet_NpcUpdate.bs.js");
var Packet_Disconnect$TerrariaPacket = require("./packet/Packet_Disconnect.bs.js");
var Packet_PlayerInfo$TerrariaPacket = require("./packet/Packet_PlayerInfo.bs.js");
var Packet_PlayerMana$TerrariaPacket = require("./packet/Packet_PlayerMana.bs.js");
var Packet_PlayerSpawn$TerrariaPacket = require("./packet/Packet_PlayerSpawn.bs.js");
var Packet_PlayerActive$TerrariaPacket = require("./packet/Packet_PlayerActive.bs.js");
var Packet_PlayerHealth$TerrariaPacket = require("./packet/Packet_PlayerHealth.bs.js");
var Packet_NetModuleLoad$TerrariaPacket = require("./packet/Packet_NetModuleLoad.bs.js");
var Packet_PlayerSlotSet$TerrariaPacket = require("./packet/Packet_PlayerSlotSet.bs.js");
var Packet_ItemDropUpdate$TerrariaPacket = require("./packet/Packet_ItemDropUpdate.bs.js");
var Packetv1405_WorldInfo$TerrariaPacket = require("./packet/v1405/Packetv1405_WorldInfo.bs.js");
var Packet_DimensionsUpdate$TerrariaPacket = require("./packet/Packet_DimensionsUpdate.bs.js");
var Packet_WorldDataRequest$TerrariaPacket = require("./packet/Packet_WorldDataRequest.bs.js");
var Packet_ProjectileDestroy$TerrariaPacket = require("./packet/Packet_ProjectileDestroy.bs.js");
var Packet_PlayerInventorySlot$TerrariaPacket = require("./packet/Packet_PlayerInventorySlot.bs.js");
var Packetv1405_ConnectRequest$TerrariaPacket = require("./packet/v1405/Packetv1405_ConnectRequest.bs.js");
var Packetv1405_ProjectileSync$TerrariaPacket = require("./packet/v1405/Packetv1405_ProjectileSync.bs.js");
var Packetv1405_TileSquareSend$TerrariaPacket = require("./packet/v1405/Packetv1405_TileSquareSend.bs.js");
var Packetv1405_TileSectionSend$TerrariaPacket = require("./packet/v1405/Packetv1405_TileSectionSend.bs.js");
var Packet_InitialTileSectionsRequest$TerrariaPacket = require("./packet/Packet_InitialTileSectionsRequest.bs.js");

function connectRequest(param_0) {
  return {
          TAG: "ConnectRequest",
          _0: param_0
        };
}

function disconnect(param_0) {
  return {
          TAG: "Disconnect",
          _0: param_0
        };
}

function playerSlotSet(param_0) {
  return {
          TAG: "PlayerSlotSet",
          _0: param_0
        };
}

function playerInfo(param_0) {
  return {
          TAG: "PlayerInfo",
          _0: param_0
        };
}

function playerInventorySlot(param_0) {
  return {
          TAG: "PlayerInventorySlot",
          _0: param_0
        };
}

function worldDataRequest(param_0) {
  return {
          TAG: "WorldDataRequest",
          _0: param_0
        };
}

function worldInfo(param_0) {
  return {
          TAG: "WorldInfo",
          _0: param_0
        };
}

function initialTileSectionsRequest(param_0) {
  return {
          TAG: "InitialTileSectionsRequest",
          _0: param_0
        };
}

function status(param_0) {
  return {
          TAG: "Status",
          _0: param_0
        };
}

function tileSectionSend(param_0) {
  return {
          TAG: "TileSectionSend",
          _0: param_0
        };
}

function tileSectionFrame(param_0) {
  return {
          TAG: "TileSectionFrame",
          _0: param_0
        };
}

function playerSpawn(param_0) {
  return {
          TAG: "PlayerSpawn",
          _0: param_0
        };
}

function playerUpdate(param_0) {
  return {
          TAG: "PlayerUpdate",
          _0: param_0
        };
}

function playerActive(param_0) {
  return {
          TAG: "PlayerActive",
          _0: param_0
        };
}

function playerHealth(param_0) {
  return {
          TAG: "PlayerHealth",
          _0: param_0
        };
}

function tileModify(param_0) {
  return {
          TAG: "TileModify",
          _0: param_0
        };
}

function timeSet(param_0) {
  return {
          TAG: "TimeSet",
          _0: param_0
        };
}

function doorUse(param_0) {
  return {
          TAG: "DoorUse",
          _0: param_0
        };
}

function tileSquareSend(param_0) {
  return {
          TAG: "TileSquareSend",
          _0: param_0
        };
}

function itemDropUpdate(param_0) {
  return {
          TAG: "ItemDropUpdate",
          _0: param_0
        };
}

function itemOwner(param_0) {
  return {
          TAG: "ItemOwner",
          _0: param_0
        };
}

function npcUpdate(param_0) {
  return {
          TAG: "NpcUpdate",
          _0: param_0
        };
}

function npcItemStrike(param_0) {
  return {
          TAG: "NpcItemStrike",
          _0: param_0
        };
}

function projectileSync(param_0) {
  return {
          TAG: "ProjectileSync",
          _0: param_0
        };
}

function npcStrike(param_0) {
  return {
          TAG: "NpcStrike",
          _0: param_0
        };
}

function projectileDestroy(param_0) {
  return {
          TAG: "ProjectileDestroy",
          _0: param_0
        };
}

function pvpToggle(param_0) {
  return {
          TAG: "PvpToggle",
          _0: param_0
        };
}

function chestOpen(param_0) {
  return {
          TAG: "ChestOpen",
          _0: param_0
        };
}

function chestItem(param_0) {
  return {
          TAG: "ChestItem",
          _0: param_0
        };
}

function activeContainerSync(param_0) {
  return {
          TAG: "ActiveContainerSync",
          _0: param_0
        };
}

function chestPlace(param_0) {
  return {
          TAG: "ChestPlace",
          _0: param_0
        };
}

function healEffect(param_0) {
  return {
          TAG: "HealEffect",
          _0: param_0
        };
}

function zones(param_0) {
  return {
          TAG: "Zones",
          _0: param_0
        };
}

function passwordRequired(param_0) {
  return {
          TAG: "PasswordRequired",
          _0: param_0
        };
}

function passwordSend(param_0) {
  return {
          TAG: "PasswordSend",
          _0: param_0
        };
}

function itemOwnerRemove(param_0) {
  return {
          TAG: "ItemOwnerRemove",
          _0: param_0
        };
}

function npcTalk(param_0) {
  return {
          TAG: "NpcTalk",
          _0: param_0
        };
}

function playerAnimation(param_0) {
  return {
          TAG: "PlayerAnimation",
          _0: param_0
        };
}

function playerMana(param_0) {
  return {
          TAG: "PlayerMana",
          _0: param_0
        };
}

function manaEffect(param_0) {
  return {
          TAG: "ManaEffect",
          _0: param_0
        };
}

function playerTeam(param_0) {
  return {
          TAG: "PlayerTeam",
          _0: param_0
        };
}

function signRead(param_0) {
  return {
          TAG: "SignRead",
          _0: param_0
        };
}

function signNew(param_0) {
  return {
          TAG: "SignNew",
          _0: param_0
        };
}

function liquidSet(param_0) {
  return {
          TAG: "LiquidSet",
          _0: param_0
        };
}

function playerSpawnSelf(param_0) {
  return {
          TAG: "PlayerSpawnSelf",
          _0: param_0
        };
}

function playerBuffsSet(param_0) {
  return {
          TAG: "PlayerBuffsSet",
          _0: param_0
        };
}

function npcSpecialEffect(param_0) {
  return {
          TAG: "NpcSpecialEffect",
          _0: param_0
        };
}

function chestOrTempleUnlock(param_0) {
  return {
          TAG: "ChestOrTempleUnlock",
          _0: param_0
        };
}

function npcBuffAdd(param_0) {
  return {
          TAG: "NpcBuffAdd",
          _0: param_0
        };
}

function npcBuffUpdate(param_0) {
  return {
          TAG: "NpcBuffUpdate",
          _0: param_0
        };
}

function playerBuffAdd(param_0) {
  return {
          TAG: "PlayerBuffAdd",
          _0: param_0
        };
}

function npcNameUpdate(param_0) {
  return {
          TAG: "NpcNameUpdate",
          _0: param_0
        };
}

function goodEvilUpdate(param_0) {
  return {
          TAG: "GoodEvilUpdate",
          _0: param_0
        };
}

function harpPlay(param_0) {
  return {
          TAG: "HarpPlay",
          _0: param_0
        };
}

function switchHit(param_0) {
  return {
          TAG: "SwitchHit",
          _0: param_0
        };
}

function npcHomeUpdate(param_0) {
  return {
          TAG: "NpcHomeUpdate",
          _0: param_0
        };
}

function bossOrInvasionSpawn(param_0) {
  return {
          TAG: "BossOrInvasionSpawn",
          _0: param_0
        };
}

function playerDodge(param_0) {
  return {
          TAG: "PlayerDodge",
          _0: param_0
        };
}

function tilePaint(param_0) {
  return {
          TAG: "TilePaint",
          _0: param_0
        };
}

function wallPaint(param_0) {
  return {
          TAG: "WallPaint",
          _0: param_0
        };
}

function teleport(param_0) {
  return {
          TAG: "Teleport",
          _0: param_0
        };
}

function playerHealOther(param_0) {
  return {
          TAG: "PlayerHealOther",
          _0: param_0
        };
}

function dimensionsUpdate(param_0) {
  return {
          TAG: "DimensionsUpdate",
          _0: param_0
        };
}

function clientUuid(param_0) {
  return {
          TAG: "ClientUuid",
          _0: param_0
        };
}

function chestName(param_0) {
  return {
          TAG: "ChestName",
          _0: param_0
        };
}

function catchNpc(param_0) {
  return {
          TAG: "CatchNpc",
          _0: param_0
        };
}

function releaseNpc(param_0) {
  return {
          TAG: "ReleaseNpc",
          _0: param_0
        };
}

function travellingMerchantInventory(param_0) {
  return {
          TAG: "TravellingMerchantInventory",
          _0: param_0
        };
}

function teleportationPotion(param_0) {
  return {
          TAG: "TeleportationPotion",
          _0: param_0
        };
}

function anglerQuest(param_0) {
  return {
          TAG: "AnglerQuest",
          _0: param_0
        };
}

function anglerQuestComplete(param_0) {
  return {
          TAG: "AnglerQuestComplete",
          _0: param_0
        };
}

function anglerQuestsCompletedAmount(param_0) {
  return {
          TAG: "AnglerQuestsCompletedAmount",
          _0: param_0
        };
}

function temporaryAnimationCreate(param_0) {
  return {
          TAG: "TemporaryAnimationCreate",
          _0: param_0
        };
}

function invasionProgressReport(param_0) {
  return {
          TAG: "InvasionProgressReport",
          _0: param_0
        };
}

function objectPlace(param_0) {
  return {
          TAG: "ObjectPlace",
          _0: param_0
        };
}

function playerChestIndexSync(param_0) {
  return {
          TAG: "PlayerChestIndexSync",
          _0: param_0
        };
}

function combatNumberCreate(param_0) {
  return {
          TAG: "CombatNumberCreate",
          _0: param_0
        };
}

function netModuleLoad(param_0) {
  return {
          TAG: "NetModuleLoad",
          _0: param_0
        };
}

function npcKillCount(param_0) {
  return {
          TAG: "NpcKillCount",
          _0: param_0
        };
}

function playerStealth(param_0) {
  return {
          TAG: "PlayerStealth",
          _0: param_0
        };
}

function itemForceIntoNearestChest(param_0) {
  return {
          TAG: "ItemForceIntoNearestChest",
          _0: param_0
        };
}

function tileEntityUpdate(param_0) {
  return {
          TAG: "TileEntityUpdate",
          _0: param_0
        };
}

function tileEntityPlace(param_0) {
  return {
          TAG: "TileEntityPlace",
          _0: param_0
        };
}

function itemDropModify(param_0) {
  return {
          TAG: "ItemDropModify",
          _0: param_0
        };
}

function itemFramePlace(param_0) {
  return {
          TAG: "ItemFramePlace",
          _0: param_0
        };
}

function itemDropInstancedUpdate(param_0) {
  return {
          TAG: "ItemDropInstancedUpdate",
          _0: param_0
        };
}

function emoteBubble(param_0) {
  return {
          TAG: "EmoteBubble",
          _0: param_0
        };
}

function extraValueSync(param_0) {
  return {
          TAG: "ExtraValueSync",
          _0: param_0
        };
}

function socialHandshake(param_0) {
  return {
          TAG: "SocialHandshake",
          _0: param_0
        };
}

function unused(param_0) {
  return {
          TAG: "Unused",
          _0: param_0
        };
}

function portalKill(param_0) {
  return {
          TAG: "PortalKill",
          _0: param_0
        };
}

function playerTeleportPortal(param_0) {
  return {
          TAG: "PlayerTeleportPortal",
          _0: param_0
        };
}

function npcKilledNotification(param_0) {
  return {
          TAG: "NpcKilledNotification",
          _0: param_0
        };
}

function eventNotification(param_0) {
  return {
          TAG: "EventNotification",
          _0: param_0
        };
}

function minionTargetUpdate(param_0) {
  return {
          TAG: "MinionTargetUpdate",
          _0: param_0
        };
}

function npcTeleportPortal(param_0) {
  return {
          TAG: "NpcTeleportPortal",
          _0: param_0
        };
}

function shieldStrengthsUpdate(param_0) {
  return {
          TAG: "ShieldStrengthsUpdate",
          _0: param_0
        };
}

function nebulaLevelUp(param_0) {
  return {
          TAG: "NebulaLevelUp",
          _0: param_0
        };
}

function moonLordCountdown(param_0) {
  return {
          TAG: "MoonLordCountdown",
          _0: param_0
        };
}

function npcShopItem(param_0) {
  return {
          TAG: "NpcShopItem",
          _0: param_0
        };
}

function gemLockToggle(param_0) {
  return {
          TAG: "GemLockToggle",
          _0: param_0
        };
}

function smokePoof(param_0) {
  return {
          TAG: "SmokePoof",
          _0: param_0
        };
}

function chatMessageSmart(param_0) {
  return {
          TAG: "ChatMessageSmart",
          _0: param_0
        };
}

function wiredCannonShot(param_0) {
  return {
          TAG: "WiredCannonShot",
          _0: param_0
        };
}

function massWireOperation(param_0) {
  return {
          TAG: "MassWireOperation",
          _0: param_0
        };
}

function massWireOperationPay(param_0) {
  return {
          TAG: "MassWireOperationPay",
          _0: param_0
        };
}

function partyToggle(param_0) {
  return {
          TAG: "PartyToggle",
          _0: param_0
        };
}

function treeGrowFx(param_0) {
  return {
          TAG: "TreeGrowFx",
          _0: param_0
        };
}

function crystalInvasionStart(param_0) {
  return {
          TAG: "CrystalInvasionStart",
          _0: param_0
        };
}

function crystalInvasionWipeAll(param_0) {
  return {
          TAG: "CrystalInvasionWipeAll",
          _0: param_0
        };
}

function minionAttackTargetUpdate(param_0) {
  return {
          TAG: "MinionAttackTargetUpdate",
          _0: param_0
        };
}

function crystalInvasionSendWaitTime(param_0) {
  return {
          TAG: "CrystalInvasionSendWaitTime",
          _0: param_0
        };
}

function playerDamage(param_0) {
  return {
          TAG: "PlayerDamage",
          _0: param_0
        };
}

function playerDeath(param_0) {
  return {
          TAG: "PlayerDeath",
          _0: param_0
        };
}

function combatTextCreate(param_0) {
  return {
          TAG: "CombatTextCreate",
          _0: param_0
        };
}

function emoji(param_0) {
  return {
          TAG: "Emoji",
          _0: param_0
        };
}

function tileEntityDisplayDollItemSync(param_0) {
  return {
          TAG: "TileEntityDisplayDollItemSync",
          _0: param_0
        };
}

function tileEntityInteractionRequest(param_0) {
  return {
          TAG: "TileEntityInteractionRequest",
          _0: param_0
        };
}

function weaponsRackTryPlacing(param_0) {
  return {
          TAG: "WeaponsRackTryPlacing",
          _0: param_0
        };
}

function tileEntityHatRackItemSync(param_0) {
  return {
          TAG: "TileEntityHatRackItemSync",
          _0: param_0
        };
}

function tilePickingSync(param_0) {
  return {
          TAG: "TilePickingSync",
          _0: param_0
        };
}

function revengeMarkerSync(param_0) {
  return {
          TAG: "RevengeMarkerSync",
          _0: param_0
        };
}

function revengeMarkerRemove(param_0) {
  return {
          TAG: "RevengeMarkerRemove",
          _0: param_0
        };
}

function golfBallLandInCup(param_0) {
  return {
          TAG: "GolfBallLandInCup",
          _0: param_0
        };
}

function clientFinishConnectingToServer(param_0) {
  return {
          TAG: "ClientFinishConnectingToServer",
          _0: param_0
        };
}

function npcFishOut(param_0) {
  return {
          TAG: "NpcFishOut",
          _0: param_0
        };
}

function npcTamper(param_0) {
  return {
          TAG: "NpcTamper",
          _0: param_0
        };
}

function legacySoundPlay(param_0) {
  return {
          TAG: "LegacySoundPlay",
          _0: param_0
        };
}

function foodPlatterTryPlacing(param_0) {
  return {
          TAG: "FoodPlatterTryPlacing",
          _0: param_0
        };
}

function playerLuckFactorsUpdate(param_0) {
  return {
          TAG: "PlayerLuckFactorsUpdate",
          _0: param_0
        };
}

function playerDead(param_0) {
  return {
          TAG: "PlayerDead",
          _0: param_0
        };
}

function cavernMonsterTypeSync(param_0) {
  return {
          TAG: "CavernMonsterTypeSync",
          _0: param_0
        };
}

function npcBuffRemovalRequest(param_0) {
  return {
          TAG: "NpcBuffRemovalRequest",
          _0: param_0
        };
}

function clientSyncedInventory(param_0) {
  return {
          TAG: "ClientSyncedInventory",
          _0: param_0
        };
}

function countsAsHostForGameplaySet(param_0) {
  return {
          TAG: "CountsAsHostForGameplaySet",
          _0: param_0
        };
}

function toLatest(packet, _fromServer) {
  switch (packet.TAG) {
    case "ConnectRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ConnectRequest",
                  _0: packet._0
                }
              };
    case "Disconnect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Disconnect",
                  _0: packet._0
                }
              };
    case "PlayerSlotSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSlotSet",
                  _0: packet._0
                }
              };
    case "PlayerInfo" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerInfo",
                  _0: packet._0
                }
              };
    case "PlayerInventorySlot" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerInventorySlot",
                  _0: packet._0
                }
              };
    case "WorldDataRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WorldDataRequest",
                  _0: packet._0
                }
              };
    case "WorldInfo" :
        return {
                TAG: "NotSame",
                _0: {
                  TAG: "WorldInfo",
                  _0: Packetv1405_WorldInfo$TerrariaPacket.toLatest(packet._0)
                }
              };
    case "InitialTileSectionsRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "InitialTileSectionsRequest",
                  _0: packet._0
                }
              };
    case "Status" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Status",
                  _0: packet._0
                }
              };
    case "TileSectionSend" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileSectionSend",
                  _0: Packetv1405_TileSectionSend$TerrariaPacket.toLatest(packet._0)
                }
              };
    case "TileSectionFrame" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileSectionFrame",
                  _0: packet._0
                }
              };
    case "PlayerSpawn" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSpawn",
                  _0: packet._0
                }
              };
    case "PlayerUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerUpdate",
                  _0: packet._0
                }
              };
    case "PlayerActive" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerActive",
                  _0: packet._0
                }
              };
    case "PlayerHealth" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerHealth",
                  _0: packet._0
                }
              };
    case "TileModify" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileModify",
                  _0: packet._0
                }
              };
    case "TimeSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TimeSet",
                  _0: packet._0
                }
              };
    case "DoorUse" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "DoorUse",
                  _0: packet._0
                }
              };
    case "TileSquareSend" :
        return {
                TAG: "NotSame",
                _0: {
                  TAG: "TileSquareSend",
                  _0: Packetv1405_TileSquareSend$TerrariaPacket.toLatest(packet._0)
                }
              };
    case "ItemDropUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropUpdate",
                  _0: packet._0
                }
              };
    case "ItemOwner" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemOwner",
                  _0: packet._0
                }
              };
    case "NpcUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcUpdate",
                  _0: packet._0
                }
              };
    case "NpcItemStrike" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcItemStrike",
                  _0: packet._0
                }
              };
    case "ProjectileSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ProjectileSync",
                  _0: packet._0
                }
              };
    case "NpcStrike" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcStrike",
                  _0: packet._0
                }
              };
    case "ProjectileDestroy" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ProjectileDestroy",
                  _0: packet._0
                }
              };
    case "PvpToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PvpToggle",
                  _0: packet._0
                }
              };
    case "ChestOpen" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestOpen",
                  _0: packet._0
                }
              };
    case "ChestItem" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestItem",
                  _0: packet._0
                }
              };
    case "ActiveContainerSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ActiveContainerSync",
                  _0: packet._0
                }
              };
    case "ChestPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestPlace",
                  _0: packet._0
                }
              };
    case "HealEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "HealEffect",
                  _0: packet._0
                }
              };
    case "Zones" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Zones",
                  _0: packet._0
                }
              };
    case "PasswordRequired" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PasswordRequired",
                  _0: packet._0
                }
              };
    case "PasswordSend" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PasswordSend",
                  _0: packet._0
                }
              };
    case "ItemOwnerRemove" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemOwnerRemove",
                  _0: packet._0
                }
              };
    case "NpcTalk" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTalk",
                  _0: packet._0
                }
              };
    case "PlayerAnimation" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerAnimation",
                  _0: packet._0
                }
              };
    case "PlayerMana" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerMana",
                  _0: packet._0
                }
              };
    case "ManaEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ManaEffect",
                  _0: packet._0
                }
              };
    case "PlayerTeam" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerTeam",
                  _0: packet._0
                }
              };
    case "SignRead" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SignRead",
                  _0: packet._0
                }
              };
    case "SignNew" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SignNew",
                  _0: packet._0
                }
              };
    case "LiquidSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "LiquidSet",
                  _0: packet._0
                }
              };
    case "PlayerSpawnSelf" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSpawnSelf",
                  _0: packet._0
                }
              };
    case "PlayerBuffsSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerBuffsSet",
                  _0: packet._0
                }
              };
    case "NpcSpecialEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcSpecialEffect",
                  _0: packet._0
                }
              };
    case "ChestOrTempleUnlock" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestOrTempleUnlock",
                  _0: packet._0
                }
              };
    case "NpcBuffAdd" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffAdd",
                  _0: packet._0
                }
              };
    case "NpcBuffUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffUpdate",
                  _0: packet._0
                }
              };
    case "PlayerBuffAdd" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerBuffAdd",
                  _0: packet._0
                }
              };
    case "NpcNameUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcNameUpdate",
                  _0: packet._0
                }
              };
    case "GoodEvilUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GoodEvilUpdate",
                  _0: packet._0
                }
              };
    case "HarpPlay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "HarpPlay",
                  _0: packet._0
                }
              };
    case "SwitchHit" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SwitchHit",
                  _0: packet._0
                }
              };
    case "NpcHomeUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcHomeUpdate",
                  _0: packet._0
                }
              };
    case "BossOrInvasionSpawn" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "BossOrInvasionSpawn",
                  _0: packet._0
                }
              };
    case "PlayerDodge" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDodge",
                  _0: packet._0
                }
              };
    case "TilePaint" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TilePaint",
                  _0: packet._0
                }
              };
    case "WallPaint" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WallPaint",
                  _0: packet._0
                }
              };
    case "Teleport" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Teleport",
                  _0: packet._0
                }
              };
    case "PlayerHealOther" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerHealOther",
                  _0: packet._0
                }
              };
    case "DimensionsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "DimensionsUpdate",
                  _0: packet._0
                }
              };
    case "ClientUuid" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientUuid",
                  _0: packet._0
                }
              };
    case "ChestName" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestName",
                  _0: packet._0
                }
              };
    case "CatchNpc" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CatchNpc",
                  _0: packet._0
                }
              };
    case "ReleaseNpc" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ReleaseNpc",
                  _0: packet._0
                }
              };
    case "TravellingMerchantInventory" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TravellingMerchantInventory",
                  _0: packet._0
                }
              };
    case "TeleportationPotion" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TeleportationPotion",
                  _0: packet._0
                }
              };
    case "AnglerQuest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuest",
                  _0: packet._0
                }
              };
    case "AnglerQuestComplete" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuestComplete",
                  _0: packet._0
                }
              };
    case "AnglerQuestsCompletedAmount" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuestsCompletedAmount",
                  _0: packet._0
                }
              };
    case "TemporaryAnimationCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TemporaryAnimationCreate",
                  _0: packet._0
                }
              };
    case "InvasionProgressReport" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "InvasionProgressReport",
                  _0: packet._0
                }
              };
    case "ObjectPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ObjectPlace",
                  _0: packet._0
                }
              };
    case "PlayerChestIndexSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerChestIndexSync",
                  _0: packet._0
                }
              };
    case "CombatNumberCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CombatNumberCreate",
                  _0: packet._0
                }
              };
    case "NetModuleLoad" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NetModuleLoad",
                  _0: packet._0
                }
              };
    case "NpcKillCount" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcKillCount",
                  _0: packet._0
                }
              };
    case "PlayerStealth" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerStealth",
                  _0: packet._0
                }
              };
    case "ItemForceIntoNearestChest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemForceIntoNearestChest",
                  _0: packet._0
                }
              };
    case "TileEntityUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityUpdate",
                  _0: packet._0
                }
              };
    case "TileEntityPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityPlace",
                  _0: packet._0
                }
              };
    case "ItemDropModify" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropModify",
                  _0: packet._0
                }
              };
    case "ItemFramePlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemFramePlace",
                  _0: packet._0
                }
              };
    case "ItemDropInstancedUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropInstancedUpdate",
                  _0: packet._0
                }
              };
    case "EmoteBubble" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "EmoteBubble",
                  _0: packet._0
                }
              };
    case "ExtraValueSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ExtraValueSync",
                  _0: packet._0
                }
              };
    case "SocialHandshake" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SocialHandshake",
                  _0: packet._0
                }
              };
    case "Unused" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Unused",
                  _0: packet._0
                }
              };
    case "PortalKill" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PortalKill",
                  _0: packet._0
                }
              };
    case "PlayerTeleportPortal" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerTeleportPortal",
                  _0: packet._0
                }
              };
    case "NpcKilledNotification" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcKilledNotification",
                  _0: packet._0
                }
              };
    case "EventNotification" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "EventNotification",
                  _0: packet._0
                }
              };
    case "MinionTargetUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MinionTargetUpdate",
                  _0: packet._0
                }
              };
    case "NpcTeleportPortal" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTeleportPortal",
                  _0: packet._0
                }
              };
    case "ShieldStrengthsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ShieldStrengthsUpdate",
                  _0: packet._0
                }
              };
    case "NebulaLevelUp" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NebulaLevelUp",
                  _0: packet._0
                }
              };
    case "MoonLordCountdown" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MoonLordCountdown",
                  _0: packet._0
                }
              };
    case "NpcShopItem" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcShopItem",
                  _0: packet._0
                }
              };
    case "GemLockToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GemLockToggle",
                  _0: packet._0
                }
              };
    case "SmokePoof" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SmokePoof",
                  _0: packet._0
                }
              };
    case "ChatMessageSmart" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChatMessageSmart",
                  _0: packet._0
                }
              };
    case "WiredCannonShot" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WiredCannonShot",
                  _0: packet._0
                }
              };
    case "MassWireOperation" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MassWireOperation",
                  _0: packet._0
                }
              };
    case "MassWireOperationPay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MassWireOperationPay",
                  _0: packet._0
                }
              };
    case "PartyToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PartyToggle",
                  _0: packet._0
                }
              };
    case "TreeGrowFx" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TreeGrowFx",
                  _0: packet._0
                }
              };
    case "CrystalInvasionStart" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionStart",
                  _0: packet._0
                }
              };
    case "CrystalInvasionWipeAll" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionWipeAll",
                  _0: packet._0
                }
              };
    case "MinionAttackTargetUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MinionAttackTargetUpdate",
                  _0: packet._0
                }
              };
    case "CrystalInvasionSendWaitTime" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionSendWaitTime",
                  _0: packet._0
                }
              };
    case "PlayerDamage" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDamage",
                  _0: packet._0
                }
              };
    case "PlayerDeath" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDeath",
                  _0: packet._0
                }
              };
    case "CombatTextCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CombatTextCreate",
                  _0: packet._0
                }
              };
    case "Emoji" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Emoji",
                  _0: packet._0
                }
              };
    case "TileEntityDisplayDollItemSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityDisplayDollItemSync",
                  _0: packet._0
                }
              };
    case "TileEntityInteractionRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityInteractionRequest",
                  _0: packet._0
                }
              };
    case "WeaponsRackTryPlacing" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WeaponsRackTryPlacing",
                  _0: packet._0
                }
              };
    case "TileEntityHatRackItemSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityHatRackItemSync",
                  _0: packet._0
                }
              };
    case "TilePickingSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TilePickingSync",
                  _0: packet._0
                }
              };
    case "RevengeMarkerSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "RevengeMarkerSync",
                  _0: packet._0
                }
              };
    case "RevengeMarkerRemove" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "RevengeMarkerRemove",
                  _0: packet._0
                }
              };
    case "GolfBallLandInCup" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GolfBallLandInCup",
                  _0: packet._0
                }
              };
    case "ClientFinishConnectingToServer" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientFinishConnectingToServer",
                  _0: packet._0
                }
              };
    case "NpcFishOut" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcFishOut",
                  _0: packet._0
                }
              };
    case "NpcTamper" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTamper",
                  _0: packet._0
                }
              };
    case "LegacySoundPlay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "LegacySoundPlay",
                  _0: packet._0
                }
              };
    case "FoodPlatterTryPlacing" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "FoodPlatterTryPlacing",
                  _0: packet._0
                }
              };
    case "PlayerLuckFactorsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerLuckFactorsUpdate",
                  _0: packet._0
                }
              };
    case "PlayerDead" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDead",
                  _0: packet._0
                }
              };
    case "CavernMonsterTypeSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CavernMonsterTypeSync",
                  _0: packet._0
                }
              };
    case "NpcBuffRemovalRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffRemovalRequest",
                  _0: packet._0
                }
              };
    case "ClientSyncedInventory" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientSyncedInventory",
                  _0: packet._0
                }
              };
    case "CountsAsHostForGameplaySet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CountsAsHostForGameplaySet",
                  _0: packet._0
                }
              };
    
  }
}

function fromLatest(packet, _fromServer) {
  switch (packet.TAG) {
    case "ConnectRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ConnectRequest",
                  _0: packet._0
                }
              };
    case "Disconnect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Disconnect",
                  _0: packet._0
                }
              };
    case "PlayerSlotSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSlotSet",
                  _0: packet._0
                }
              };
    case "PlayerInfo" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerInfo",
                  _0: packet._0
                }
              };
    case "PlayerInventorySlot" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerInventorySlot",
                  _0: packet._0
                }
              };
    case "WorldDataRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WorldDataRequest",
                  _0: packet._0
                }
              };
    case "WorldInfo" :
        return Core__Option.map(Packetv1405_WorldInfo$TerrariaPacket.fromLatest(packet._0), (function (p) {
                      return {
                              TAG: "NotSame",
                              _0: {
                                TAG: "WorldInfo",
                                _0: p
                              }
                            };
                    }));
    case "InitialTileSectionsRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "InitialTileSectionsRequest",
                  _0: packet._0
                }
              };
    case "Status" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Status",
                  _0: packet._0
                }
              };
    case "TileSectionSend" :
        return Core__Option.map(Packetv1405_TileSectionSend$TerrariaPacket.fromLatest(packet._0), (function (p) {
                      return {
                              TAG: "Same",
                              _0: {
                                TAG: "TileSectionSend",
                                _0: p
                              }
                            };
                    }));
    case "TileSectionFrame" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileSectionFrame",
                  _0: packet._0
                }
              };
    case "PlayerSpawn" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSpawn",
                  _0: packet._0
                }
              };
    case "PlayerUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerUpdate",
                  _0: packet._0
                }
              };
    case "PlayerActive" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerActive",
                  _0: packet._0
                }
              };
    case "PlayerHealth" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerHealth",
                  _0: packet._0
                }
              };
    case "TileModify" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileModify",
                  _0: packet._0
                }
              };
    case "TimeSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TimeSet",
                  _0: packet._0
                }
              };
    case "DoorUse" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "DoorUse",
                  _0: packet._0
                }
              };
    case "TileSquareSend" :
        return Core__Option.map(Packetv1405_TileSquareSend$TerrariaPacket.fromLatest(packet._0), (function (p) {
                      return {
                              TAG: "NotSame",
                              _0: {
                                TAG: "TileSquareSend",
                                _0: p
                              }
                            };
                    }));
    case "ItemDropUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropUpdate",
                  _0: packet._0
                }
              };
    case "ItemOwner" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemOwner",
                  _0: packet._0
                }
              };
    case "NpcUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcUpdate",
                  _0: packet._0
                }
              };
    case "NpcItemStrike" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcItemStrike",
                  _0: packet._0
                }
              };
    case "ProjectileSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ProjectileSync",
                  _0: packet._0
                }
              };
    case "NpcStrike" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcStrike",
                  _0: packet._0
                }
              };
    case "ProjectileDestroy" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ProjectileDestroy",
                  _0: packet._0
                }
              };
    case "PvpToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PvpToggle",
                  _0: packet._0
                }
              };
    case "ChestOpen" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestOpen",
                  _0: packet._0
                }
              };
    case "ChestItem" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestItem",
                  _0: packet._0
                }
              };
    case "ActiveContainerSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ActiveContainerSync",
                  _0: packet._0
                }
              };
    case "ChestPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestPlace",
                  _0: packet._0
                }
              };
    case "HealEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "HealEffect",
                  _0: packet._0
                }
              };
    case "Zones" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Zones",
                  _0: packet._0
                }
              };
    case "PasswordRequired" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PasswordRequired",
                  _0: packet._0
                }
              };
    case "PasswordSend" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PasswordSend",
                  _0: packet._0
                }
              };
    case "ItemOwnerRemove" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemOwnerRemove",
                  _0: packet._0
                }
              };
    case "NpcTalk" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTalk",
                  _0: packet._0
                }
              };
    case "PlayerAnimation" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerAnimation",
                  _0: packet._0
                }
              };
    case "PlayerMana" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerMana",
                  _0: packet._0
                }
              };
    case "ManaEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ManaEffect",
                  _0: packet._0
                }
              };
    case "PlayerTeam" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerTeam",
                  _0: packet._0
                }
              };
    case "SignRead" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SignRead",
                  _0: packet._0
                }
              };
    case "SignNew" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SignNew",
                  _0: packet._0
                }
              };
    case "LiquidSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "LiquidSet",
                  _0: packet._0
                }
              };
    case "PlayerSpawnSelf" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerSpawnSelf",
                  _0: packet._0
                }
              };
    case "PlayerBuffsSet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerBuffsSet",
                  _0: packet._0
                }
              };
    case "NpcSpecialEffect" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcSpecialEffect",
                  _0: packet._0
                }
              };
    case "ChestOrTempleUnlock" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestOrTempleUnlock",
                  _0: packet._0
                }
              };
    case "NpcBuffAdd" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffAdd",
                  _0: packet._0
                }
              };
    case "NpcBuffUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffUpdate",
                  _0: packet._0
                }
              };
    case "PlayerBuffAdd" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerBuffAdd",
                  _0: packet._0
                }
              };
    case "NpcNameUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcNameUpdate",
                  _0: packet._0
                }
              };
    case "GoodEvilUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GoodEvilUpdate",
                  _0: packet._0
                }
              };
    case "HarpPlay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "HarpPlay",
                  _0: packet._0
                }
              };
    case "SwitchHit" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SwitchHit",
                  _0: packet._0
                }
              };
    case "NpcHomeUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcHomeUpdate",
                  _0: packet._0
                }
              };
    case "BossOrInvasionSpawn" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "BossOrInvasionSpawn",
                  _0: packet._0
                }
              };
    case "PlayerDodge" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDodge",
                  _0: packet._0
                }
              };
    case "TilePaint" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TilePaint",
                  _0: packet._0
                }
              };
    case "WallPaint" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WallPaint",
                  _0: packet._0
                }
              };
    case "Teleport" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Teleport",
                  _0: packet._0
                }
              };
    case "PlayerHealOther" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerHealOther",
                  _0: packet._0
                }
              };
    case "DimensionsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "DimensionsUpdate",
                  _0: packet._0
                }
              };
    case "ClientUuid" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientUuid",
                  _0: packet._0
                }
              };
    case "ChestName" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChestName",
                  _0: packet._0
                }
              };
    case "CatchNpc" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CatchNpc",
                  _0: packet._0
                }
              };
    case "ReleaseNpc" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ReleaseNpc",
                  _0: packet._0
                }
              };
    case "TravellingMerchantInventory" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TravellingMerchantInventory",
                  _0: packet._0
                }
              };
    case "TeleportationPotion" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TeleportationPotion",
                  _0: packet._0
                }
              };
    case "AnglerQuest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuest",
                  _0: packet._0
                }
              };
    case "AnglerQuestComplete" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuestComplete",
                  _0: packet._0
                }
              };
    case "AnglerQuestsCompletedAmount" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "AnglerQuestsCompletedAmount",
                  _0: packet._0
                }
              };
    case "TemporaryAnimationCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TemporaryAnimationCreate",
                  _0: packet._0
                }
              };
    case "InvasionProgressReport" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "InvasionProgressReport",
                  _0: packet._0
                }
              };
    case "ObjectPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ObjectPlace",
                  _0: packet._0
                }
              };
    case "PlayerChestIndexSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerChestIndexSync",
                  _0: packet._0
                }
              };
    case "CombatNumberCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CombatNumberCreate",
                  _0: packet._0
                }
              };
    case "NetModuleLoad" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NetModuleLoad",
                  _0: packet._0
                }
              };
    case "NpcKillCount" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcKillCount",
                  _0: packet._0
                }
              };
    case "PlayerStealth" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerStealth",
                  _0: packet._0
                }
              };
    case "ItemForceIntoNearestChest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemForceIntoNearestChest",
                  _0: packet._0
                }
              };
    case "TileEntityUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityUpdate",
                  _0: packet._0
                }
              };
    case "TileEntityPlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityPlace",
                  _0: packet._0
                }
              };
    case "ItemDropModify" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropModify",
                  _0: packet._0
                }
              };
    case "ItemFramePlace" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemFramePlace",
                  _0: packet._0
                }
              };
    case "ItemDropInstancedUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ItemDropInstancedUpdate",
                  _0: packet._0
                }
              };
    case "EmoteBubble" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "EmoteBubble",
                  _0: packet._0
                }
              };
    case "ExtraValueSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ExtraValueSync",
                  _0: packet._0
                }
              };
    case "SocialHandshake" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SocialHandshake",
                  _0: packet._0
                }
              };
    case "Unused" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Unused",
                  _0: packet._0
                }
              };
    case "PortalKill" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PortalKill",
                  _0: packet._0
                }
              };
    case "PlayerTeleportPortal" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerTeleportPortal",
                  _0: packet._0
                }
              };
    case "NpcKilledNotification" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcKilledNotification",
                  _0: packet._0
                }
              };
    case "EventNotification" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "EventNotification",
                  _0: packet._0
                }
              };
    case "MinionTargetUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MinionTargetUpdate",
                  _0: packet._0
                }
              };
    case "NpcTeleportPortal" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTeleportPortal",
                  _0: packet._0
                }
              };
    case "ShieldStrengthsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ShieldStrengthsUpdate",
                  _0: packet._0
                }
              };
    case "NebulaLevelUp" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NebulaLevelUp",
                  _0: packet._0
                }
              };
    case "MoonLordCountdown" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MoonLordCountdown",
                  _0: packet._0
                }
              };
    case "NpcShopItem" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcShopItem",
                  _0: packet._0
                }
              };
    case "GemLockToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GemLockToggle",
                  _0: packet._0
                }
              };
    case "SmokePoof" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "SmokePoof",
                  _0: packet._0
                }
              };
    case "ChatMessageSmart" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ChatMessageSmart",
                  _0: packet._0
                }
              };
    case "WiredCannonShot" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WiredCannonShot",
                  _0: packet._0
                }
              };
    case "MassWireOperation" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MassWireOperation",
                  _0: packet._0
                }
              };
    case "MassWireOperationPay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MassWireOperationPay",
                  _0: packet._0
                }
              };
    case "PartyToggle" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PartyToggle",
                  _0: packet._0
                }
              };
    case "TreeGrowFx" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TreeGrowFx",
                  _0: packet._0
                }
              };
    case "CrystalInvasionStart" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionStart",
                  _0: packet._0
                }
              };
    case "CrystalInvasionWipeAll" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionWipeAll",
                  _0: packet._0
                }
              };
    case "MinionAttackTargetUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "MinionAttackTargetUpdate",
                  _0: packet._0
                }
              };
    case "CrystalInvasionSendWaitTime" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CrystalInvasionSendWaitTime",
                  _0: packet._0
                }
              };
    case "PlayerDamage" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDamage",
                  _0: packet._0
                }
              };
    case "PlayerDeath" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDeath",
                  _0: packet._0
                }
              };
    case "CombatTextCreate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CombatTextCreate",
                  _0: packet._0
                }
              };
    case "Emoji" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "Emoji",
                  _0: packet._0
                }
              };
    case "TileEntityDisplayDollItemSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityDisplayDollItemSync",
                  _0: packet._0
                }
              };
    case "TileEntityInteractionRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityInteractionRequest",
                  _0: packet._0
                }
              };
    case "WeaponsRackTryPlacing" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "WeaponsRackTryPlacing",
                  _0: packet._0
                }
              };
    case "TileEntityHatRackItemSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TileEntityHatRackItemSync",
                  _0: packet._0
                }
              };
    case "TilePickingSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "TilePickingSync",
                  _0: packet._0
                }
              };
    case "RevengeMarkerSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "RevengeMarkerSync",
                  _0: packet._0
                }
              };
    case "RevengeMarkerRemove" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "RevengeMarkerRemove",
                  _0: packet._0
                }
              };
    case "GolfBallLandInCup" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "GolfBallLandInCup",
                  _0: packet._0
                }
              };
    case "ClientFinishConnectingToServer" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientFinishConnectingToServer",
                  _0: packet._0
                }
              };
    case "NpcFishOut" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcFishOut",
                  _0: packet._0
                }
              };
    case "NpcTamper" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcTamper",
                  _0: packet._0
                }
              };
    case "LegacySoundPlay" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "LegacySoundPlay",
                  _0: packet._0
                }
              };
    case "FoodPlatterTryPlacing" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "FoodPlatterTryPlacing",
                  _0: packet._0
                }
              };
    case "PlayerLuckFactorsUpdate" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerLuckFactorsUpdate",
                  _0: packet._0
                }
              };
    case "PlayerDead" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "PlayerDead",
                  _0: packet._0
                }
              };
    case "CavernMonsterTypeSync" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CavernMonsterTypeSync",
                  _0: packet._0
                }
              };
    case "NpcBuffRemovalRequest" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "NpcBuffRemovalRequest",
                  _0: packet._0
                }
              };
    case "ClientSyncedInventory" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "ClientSyncedInventory",
                  _0: packet._0
                }
              };
    case "CountsAsHostForGameplaySet" :
        return {
                TAG: "Same",
                _0: {
                  TAG: "CountsAsHostForGameplaySet",
                  _0: packet._0
                }
              };
    default:
      return ;
  }
}

function toLatest$1(packet, _fromServer) {
  switch (packet.TAG) {
    case "ConnectRequest" :
        return {
                TAG: "ConnectRequest",
                _0: packet._0
              };
    case "Disconnect" :
        return {
                TAG: "Disconnect",
                _0: packet._0
              };
    case "PlayerSlotSet" :
        return {
                TAG: "PlayerSlotSet",
                _0: packet._0
              };
    case "PlayerInfo" :
        return {
                TAG: "PlayerInfo",
                _0: packet._0
              };
    case "PlayerInventorySlot" :
        return {
                TAG: "PlayerInventorySlot",
                _0: packet._0
              };
    case "WorldDataRequest" :
        return {
                TAG: "WorldDataRequest",
                _0: packet._0
              };
    case "WorldInfo" :
        var worldInfo = packet._0;
        return {
                TAG: "WorldInfo",
                _0: {
                  LAZY_DONE: false,
                  VAL: (function () {
                      return Core__Option.map(CamlinternalLazy.force(worldInfo), (function (worldInfo) {
                                    return Packetv1405_WorldInfo$TerrariaPacket.toLatest(worldInfo);
                                  }));
                    })
                }
              };
    case "InitialTileSectionsRequest" :
        return {
                TAG: "InitialTileSectionsRequest",
                _0: packet._0
              };
    case "Status" :
        return {
                TAG: "Status",
                _0: packet._0
              };
    case "TileSectionSend" :
        var tileSectionSend = packet._0;
        return {
                TAG: "TileSectionSend",
                _0: {
                  LAZY_DONE: false,
                  VAL: (function () {
                      return Core__Option.map(CamlinternalLazy.force(tileSectionSend), (function (tileSectionSend) {
                                    return Packetv1405_TileSectionSend$TerrariaPacket.toLatest(tileSectionSend);
                                  }));
                    })
                }
              };
    case "TileSectionFrame" :
        return {
                TAG: "TileSectionFrame",
                _0: packet._0
              };
    case "PlayerSpawn" :
        return {
                TAG: "PlayerSpawn",
                _0: packet._0
              };
    case "PlayerUpdate" :
        return {
                TAG: "PlayerUpdate",
                _0: packet._0
              };
    case "PlayerActive" :
        return {
                TAG: "PlayerActive",
                _0: packet._0
              };
    case "PlayerHealth" :
        return {
                TAG: "PlayerHealth",
                _0: packet._0
              };
    case "TileModify" :
        return {
                TAG: "TileModify",
                _0: packet._0
              };
    case "TimeSet" :
        return {
                TAG: "TimeSet",
                _0: packet._0
              };
    case "DoorUse" :
        return {
                TAG: "DoorUse",
                _0: packet._0
              };
    case "TileSquareSend" :
        var tileSquareSend = packet._0;
        return {
                TAG: "TileSquareSend",
                _0: {
                  LAZY_DONE: false,
                  VAL: (function () {
                      return Core__Option.map(CamlinternalLazy.force(tileSquareSend), (function (tileSquareSend) {
                                    return Packetv1405_TileSquareSend$TerrariaPacket.toLatest(tileSquareSend);
                                  }));
                    })
                }
              };
    case "ItemDropUpdate" :
        return {
                TAG: "ItemDropUpdate",
                _0: packet._0
              };
    case "ItemOwner" :
        return {
                TAG: "ItemOwner",
                _0: packet._0
              };
    case "NpcUpdate" :
        return {
                TAG: "NpcUpdate",
                _0: packet._0
              };
    case "NpcItemStrike" :
        return {
                TAG: "NpcItemStrike",
                _0: packet._0
              };
    case "ProjectileSync" :
        return {
                TAG: "ProjectileSync",
                _0: packet._0
              };
    case "NpcStrike" :
        return {
                TAG: "NpcStrike",
                _0: packet._0
              };
    case "ProjectileDestroy" :
        return {
                TAG: "ProjectileDestroy",
                _0: packet._0
              };
    case "PvpToggle" :
        return {
                TAG: "PvpToggle",
                _0: packet._0
              };
    case "ChestOpen" :
        return {
                TAG: "ChestOpen",
                _0: packet._0
              };
    case "ChestItem" :
        return {
                TAG: "ChestItem",
                _0: packet._0
              };
    case "ActiveContainerSync" :
        return {
                TAG: "ActiveContainerSync",
                _0: packet._0
              };
    case "ChestPlace" :
        return {
                TAG: "ChestPlace",
                _0: packet._0
              };
    case "HealEffect" :
        return {
                TAG: "HealEffect",
                _0: packet._0
              };
    case "Zones" :
        return {
                TAG: "Zones",
                _0: packet._0
              };
    case "PasswordRequired" :
        return {
                TAG: "PasswordRequired",
                _0: packet._0
              };
    case "PasswordSend" :
        return {
                TAG: "PasswordSend",
                _0: packet._0
              };
    case "ItemOwnerRemove" :
        return {
                TAG: "ItemOwnerRemove",
                _0: packet._0
              };
    case "NpcTalk" :
        return {
                TAG: "NpcTalk",
                _0: packet._0
              };
    case "PlayerAnimation" :
        return {
                TAG: "PlayerAnimation",
                _0: packet._0
              };
    case "PlayerMana" :
        return {
                TAG: "PlayerMana",
                _0: packet._0
              };
    case "ManaEffect" :
        return {
                TAG: "ManaEffect",
                _0: packet._0
              };
    case "PlayerTeam" :
        return {
                TAG: "PlayerTeam",
                _0: packet._0
              };
    case "SignRead" :
        return {
                TAG: "SignRead",
                _0: packet._0
              };
    case "SignNew" :
        return {
                TAG: "SignNew",
                _0: packet._0
              };
    case "LiquidSet" :
        return {
                TAG: "LiquidSet",
                _0: packet._0
              };
    case "PlayerSpawnSelf" :
        return {
                TAG: "PlayerSpawnSelf",
                _0: packet._0
              };
    case "PlayerBuffsSet" :
        return {
                TAG: "PlayerBuffsSet",
                _0: packet._0
              };
    case "NpcSpecialEffect" :
        return {
                TAG: "NpcSpecialEffect",
                _0: packet._0
              };
    case "ChestOrTempleUnlock" :
        return {
                TAG: "ChestOrTempleUnlock",
                _0: packet._0
              };
    case "NpcBuffAdd" :
        return {
                TAG: "NpcBuffAdd",
                _0: packet._0
              };
    case "NpcBuffUpdate" :
        return {
                TAG: "NpcBuffUpdate",
                _0: packet._0
              };
    case "PlayerBuffAdd" :
        return {
                TAG: "PlayerBuffAdd",
                _0: packet._0
              };
    case "NpcNameUpdate" :
        return {
                TAG: "NpcNameUpdate",
                _0: packet._0
              };
    case "GoodEvilUpdate" :
        return {
                TAG: "GoodEvilUpdate",
                _0: packet._0
              };
    case "HarpPlay" :
        return {
                TAG: "HarpPlay",
                _0: packet._0
              };
    case "SwitchHit" :
        return {
                TAG: "SwitchHit",
                _0: packet._0
              };
    case "NpcHomeUpdate" :
        return {
                TAG: "NpcHomeUpdate",
                _0: packet._0
              };
    case "BossOrInvasionSpawn" :
        return {
                TAG: "BossOrInvasionSpawn",
                _0: packet._0
              };
    case "PlayerDodge" :
        return {
                TAG: "PlayerDodge",
                _0: packet._0
              };
    case "TilePaint" :
        return {
                TAG: "TilePaint",
                _0: packet._0
              };
    case "WallPaint" :
        return {
                TAG: "WallPaint",
                _0: packet._0
              };
    case "Teleport" :
        return {
                TAG: "Teleport",
                _0: packet._0
              };
    case "PlayerHealOther" :
        return {
                TAG: "PlayerHealOther",
                _0: packet._0
              };
    case "DimensionsUpdate" :
        return {
                TAG: "DimensionsUpdate",
                _0: packet._0
              };
    case "ClientUuid" :
        return {
                TAG: "ClientUuid",
                _0: packet._0
              };
    case "ChestName" :
        return {
                TAG: "ChestName",
                _0: packet._0
              };
    case "CatchNpc" :
        return {
                TAG: "CatchNpc",
                _0: packet._0
              };
    case "ReleaseNpc" :
        return {
                TAG: "ReleaseNpc",
                _0: packet._0
              };
    case "TravellingMerchantInventory" :
        return {
                TAG: "TravellingMerchantInventory",
                _0: packet._0
              };
    case "TeleportationPotion" :
        return {
                TAG: "TeleportationPotion",
                _0: packet._0
              };
    case "AnglerQuest" :
        return {
                TAG: "AnglerQuest",
                _0: packet._0
              };
    case "AnglerQuestComplete" :
        return {
                TAG: "AnglerQuestComplete",
                _0: packet._0
              };
    case "AnglerQuestsCompletedAmount" :
        return {
                TAG: "AnglerQuestsCompletedAmount",
                _0: packet._0
              };
    case "TemporaryAnimationCreate" :
        return {
                TAG: "TemporaryAnimationCreate",
                _0: packet._0
              };
    case "InvasionProgressReport" :
        return {
                TAG: "InvasionProgressReport",
                _0: packet._0
              };
    case "ObjectPlace" :
        return {
                TAG: "ObjectPlace",
                _0: packet._0
              };
    case "PlayerChestIndexSync" :
        return {
                TAG: "PlayerChestIndexSync",
                _0: packet._0
              };
    case "CombatNumberCreate" :
        return {
                TAG: "CombatNumberCreate",
                _0: packet._0
              };
    case "NetModuleLoad" :
        return {
                TAG: "NetModuleLoad",
                _0: packet._0
              };
    case "NpcKillCount" :
        return {
                TAG: "NpcKillCount",
                _0: packet._0
              };
    case "PlayerStealth" :
        return {
                TAG: "PlayerStealth",
                _0: packet._0
              };
    case "ItemForceIntoNearestChest" :
        return {
                TAG: "ItemForceIntoNearestChest",
                _0: packet._0
              };
    case "TileEntityUpdate" :
        return {
                TAG: "TileEntityUpdate",
                _0: packet._0
              };
    case "TileEntityPlace" :
        return {
                TAG: "TileEntityPlace",
                _0: packet._0
              };
    case "ItemDropModify" :
        return {
                TAG: "ItemDropModify",
                _0: packet._0
              };
    case "ItemFramePlace" :
        return {
                TAG: "ItemFramePlace",
                _0: packet._0
              };
    case "ItemDropInstancedUpdate" :
        return {
                TAG: "ItemDropInstancedUpdate",
                _0: packet._0
              };
    case "EmoteBubble" :
        return {
                TAG: "EmoteBubble",
                _0: packet._0
              };
    case "ExtraValueSync" :
        return {
                TAG: "ExtraValueSync",
                _0: packet._0
              };
    case "SocialHandshake" :
        return {
                TAG: "SocialHandshake",
                _0: packet._0
              };
    case "Unused" :
        return {
                TAG: "Unused",
                _0: packet._0
              };
    case "PortalKill" :
        return {
                TAG: "PortalKill",
                _0: packet._0
              };
    case "PlayerTeleportPortal" :
        return {
                TAG: "PlayerTeleportPortal",
                _0: packet._0
              };
    case "NpcKilledNotification" :
        return {
                TAG: "NpcKilledNotification",
                _0: packet._0
              };
    case "EventNotification" :
        return {
                TAG: "EventNotification",
                _0: packet._0
              };
    case "MinionTargetUpdate" :
        return {
                TAG: "MinionTargetUpdate",
                _0: packet._0
              };
    case "NpcTeleportPortal" :
        return {
                TAG: "NpcTeleportPortal",
                _0: packet._0
              };
    case "ShieldStrengthsUpdate" :
        return {
                TAG: "ShieldStrengthsUpdate",
                _0: packet._0
              };
    case "NebulaLevelUp" :
        return {
                TAG: "NebulaLevelUp",
                _0: packet._0
              };
    case "MoonLordCountdown" :
        return {
                TAG: "MoonLordCountdown",
                _0: packet._0
              };
    case "NpcShopItem" :
        return {
                TAG: "NpcShopItem",
                _0: packet._0
              };
    case "GemLockToggle" :
        return {
                TAG: "GemLockToggle",
                _0: packet._0
              };
    case "SmokePoof" :
        return {
                TAG: "SmokePoof",
                _0: packet._0
              };
    case "ChatMessageSmart" :
        return {
                TAG: "ChatMessageSmart",
                _0: packet._0
              };
    case "WiredCannonShot" :
        return {
                TAG: "WiredCannonShot",
                _0: packet._0
              };
    case "MassWireOperation" :
        return {
                TAG: "MassWireOperation",
                _0: packet._0
              };
    case "MassWireOperationPay" :
        return {
                TAG: "MassWireOperationPay",
                _0: packet._0
              };
    case "PartyToggle" :
        return {
                TAG: "PartyToggle",
                _0: packet._0
              };
    case "TreeGrowFx" :
        return {
                TAG: "TreeGrowFx",
                _0: packet._0
              };
    case "CrystalInvasionStart" :
        return {
                TAG: "CrystalInvasionStart",
                _0: packet._0
              };
    case "CrystalInvasionWipeAll" :
        return {
                TAG: "CrystalInvasionWipeAll",
                _0: packet._0
              };
    case "MinionAttackTargetUpdate" :
        return {
                TAG: "MinionAttackTargetUpdate",
                _0: packet._0
              };
    case "CrystalInvasionSendWaitTime" :
        return {
                TAG: "CrystalInvasionSendWaitTime",
                _0: packet._0
              };
    case "PlayerDamage" :
        return {
                TAG: "PlayerDamage",
                _0: packet._0
              };
    case "PlayerDeath" :
        return {
                TAG: "PlayerDeath",
                _0: packet._0
              };
    case "CombatTextCreate" :
        return {
                TAG: "CombatTextCreate",
                _0: packet._0
              };
    case "Emoji" :
        return {
                TAG: "Emoji",
                _0: packet._0
              };
    case "TileEntityDisplayDollItemSync" :
        return {
                TAG: "TileEntityDisplayDollItemSync",
                _0: packet._0
              };
    case "TileEntityInteractionRequest" :
        return {
                TAG: "TileEntityInteractionRequest",
                _0: packet._0
              };
    case "WeaponsRackTryPlacing" :
        return {
                TAG: "WeaponsRackTryPlacing",
                _0: packet._0
              };
    case "TileEntityHatRackItemSync" :
        return {
                TAG: "TileEntityHatRackItemSync",
                _0: packet._0
              };
    case "TilePickingSync" :
        return {
                TAG: "TilePickingSync",
                _0: packet._0
              };
    case "RevengeMarkerSync" :
        return {
                TAG: "RevengeMarkerSync",
                _0: packet._0
              };
    case "RevengeMarkerRemove" :
        return {
                TAG: "RevengeMarkerRemove",
                _0: packet._0
              };
    case "GolfBallLandInCup" :
        return {
                TAG: "GolfBallLandInCup",
                _0: packet._0
              };
    case "ClientFinishConnectingToServer" :
        return {
                TAG: "ClientFinishConnectingToServer",
                _0: packet._0
              };
    case "NpcFishOut" :
        return {
                TAG: "NpcFishOut",
                _0: packet._0
              };
    case "NpcTamper" :
        return {
                TAG: "NpcTamper",
                _0: packet._0
              };
    case "LegacySoundPlay" :
        return {
                TAG: "LegacySoundPlay",
                _0: packet._0
              };
    case "FoodPlatterTryPlacing" :
        return {
                TAG: "FoodPlatterTryPlacing",
                _0: packet._0
              };
    case "PlayerLuckFactorsUpdate" :
        return {
                TAG: "PlayerLuckFactorsUpdate",
                _0: packet._0
              };
    case "PlayerDead" :
        return {
                TAG: "PlayerDead",
                _0: packet._0
              };
    case "CavernMonsterTypeSync" :
        return {
                TAG: "CavernMonsterTypeSync",
                _0: packet._0
              };
    case "NpcBuffRemovalRequest" :
        return {
                TAG: "NpcBuffRemovalRequest",
                _0: packet._0
              };
    case "ClientSyncedInventory" :
        return {
                TAG: "ClientSyncedInventory",
                _0: packet._0
              };
    case "CountsAsHostForGameplaySet" :
        return {
                TAG: "CountsAsHostForGameplaySet",
                _0: packet._0
              };
    
  }
}

var Lazy = {
  toLatest: toLatest$1
};

function toBuffer(packet, _fromServer) {
  switch (packet.TAG) {
    case "ConnectRequest" :
        return Packetv1405_ConnectRequest$TerrariaPacket.toBuffer(packet._0);
    case "Disconnect" :
        return Packet_Disconnect$TerrariaPacket.toBuffer(packet._0);
    case "PlayerSlotSet" :
        return Packet_PlayerSlotSet$TerrariaPacket.toBuffer(packet._0);
    case "PlayerInfo" :
        return Packet_PlayerInfo$TerrariaPacket.toBuffer(packet._0);
    case "PlayerInventorySlot" :
        return Packet_PlayerInventorySlot$TerrariaPacket.toBuffer(packet._0);
    case "WorldDataRequest" :
        return Packet_WorldDataRequest$TerrariaPacket.toBuffer(packet._0);
    case "WorldInfo" :
        return Packetv1405_WorldInfo$TerrariaPacket.toBuffer(packet._0);
    case "InitialTileSectionsRequest" :
        return Packet_InitialTileSectionsRequest$TerrariaPacket.toBuffer(packet._0);
    case "Status" :
        return Packet_Status$TerrariaPacket.toBuffer(packet._0);
    case "PlayerSpawn" :
        return Packet_PlayerSpawn$TerrariaPacket.toBuffer(packet._0);
    case "PlayerActive" :
        return Packet_PlayerActive$TerrariaPacket.toBuffer(packet._0);
    case "PlayerHealth" :
        return Packet_PlayerHealth$TerrariaPacket.toBuffer(packet._0);
    case "TileSquareSend" :
        return Packetv1405_TileSquareSend$TerrariaPacket.toBuffer(packet._0);
    case "ItemDropUpdate" :
        return Packet_ItemDropUpdate$TerrariaPacket.toBuffer(packet._0);
    case "NpcUpdate" :
        return Packet_NpcUpdate$TerrariaPacket.toBuffer(packet._0);
    case "ProjectileSync" :
        return Packetv1405_ProjectileSync$TerrariaPacket.toBuffer(packet._0);
    case "ProjectileDestroy" :
        return Packet_ProjectileDestroy$TerrariaPacket.toBuffer(packet._0);
    case "PlayerMana" :
        return Packet_PlayerMana$TerrariaPacket.toBuffer(packet._0);
    case "DimensionsUpdate" :
        return Packet_DimensionsUpdate$TerrariaPacket.toBuffer(packet._0);
    case "NetModuleLoad" :
        return Packet_NetModuleLoad$TerrariaPacket.toBuffer(packet._0);
    default:
      return ;
  }
}

function serialize(parsed, fromServer) {
  if (parsed.TAG === "ShouldSerialize") {
    return toBuffer(parsed._0, fromServer);
  } else {
    return parsed._1;
  }
}

function serializeFromLatest(parsed, fromServer) {
  if (parsed.TAG === "ShouldSerialize") {
    var match = fromLatest(parsed._0, fromServer);
    if (match !== undefined) {
      return toBuffer(match._0, fromServer);
    } else {
      return ;
    }
  }
  var match$1 = fromLatest(parsed._0, fromServer);
  if (match$1 !== undefined) {
    if (match$1.TAG === "Same") {
      return parsed._1;
    } else {
      return toBuffer(match$1._0, fromServer);
    }
  }
  
}

var ConnectRequest;

var Disconnect;

var PlayerSlotSet;

var PlayerInfo;

var PlayerInventorySlot;

var WorldDataRequest;

var WorldInfo;

var InitialTileSectionsRequest;

var Status;

var TileSectionSend;

var TileSectionFrame;

var PlayerSpawn;

var PlayerUpdate;

var PlayerActive;

var PlayerHealth;

var TileModify;

var TimeSet;

var DoorUse;

var TileSquareSend;

var ItemDropUpdate;

var ItemOwner;

var NpcUpdate;

var NpcItemStrike;

var ProjectileSync;

var NpcStrike;

var ProjectileDestroy;

var PvpToggle;

var ChestOpen;

var ChestItem;

var ActiveContainerSync;

var ChestPlace;

var HealEffect;

var Zones;

var PasswordRequired;

var PasswordSend;

var ItemOwnerRemove;

var NpcTalk;

var PlayerAnimation;

var PlayerMana;

var ManaEffect;

var PlayerTeam;

var SignRead;

var SignNew;

var LiquidSet;

var PlayerSpawnSelf;

var PlayerBuffsSet;

var NpcSpecialEffect;

var ChestOrTempleUnlock;

var NpcBuffAdd;

var NpcBuffUpdate;

var PlayerBuffAdd;

var NpcNameUpdate;

var GoodEvilUpdate;

var HarpPlay;

var SwitchHit;

var NpcHomeUpdate;

var BossOrInvasionSpawn;

var PlayerDodge;

var TilePaint;

var WallPaint;

var Teleport;

var PlayerHealOther;

var DimensionsUpdate;

var ClientUuid;

var ChestName;

var CatchNpc;

var ReleaseNpc;

var TravellingMerchantInventory;

var TeleportationPotion;

var AnglerQuest;

var AnglerQuestComplete;

var AnglerQuestsCompletedAmount;

var TemporaryAnimationCreate;

var InvasionProgressReport;

var ObjectPlace;

var PlayerChestIndexSync;

var CombatNumberCreate;

var NetModuleLoad;

var NpcKillCount;

var PlayerStealth;

var ItemForceIntoNearestChest;

var TileEntityUpdate;

var TileEntityPlace;

var ItemDropModify;

var ItemFramePlace;

var ItemDropInstancedUpdate;

var EmoteBubble;

var ExtraValueSync;

var SocialHandshake;

var Unused;

var PortalKill;

var PlayerTeleportPortal;

var NpcKilledNotification;

var EventNotification;

var MinionTargetUpdate;

var NpcTeleportPortal;

var ShieldStrengthsUpdate;

var NebulaLevelUp;

var MoonLordCountdown;

var NpcShopItem;

var GemLockToggle;

var SmokePoof;

var ChatMessageSmart;

var WiredCannonShot;

var MassWireOperation;

var MassWireOperationPay;

var PartyToggle;

var TreeGrowFx;

var CrystalInvasionStart;

var CrystalInvasionWipeAll;

var MinionAttackTargetUpdate;

var CrystalInvasionSendWaitTime;

var PlayerDamage;

var PlayerDeath;

var CombatTextCreate;

var Emoji;

var TileEntityDisplayDollItemSync;

var TileEntityInteractionRequest;

var WeaponsRackTryPlacing;

var TileEntityHatRackItemSync;

var TilePickingSync;

var RevengeMarkerSync;

var RevengeMarkerRemove;

var GolfBallLandInCup;

var ClientFinishConnectingToServer;

var NpcFishOut;

var NpcTamper;

var LegacySoundPlay;

var FoodPlatterTryPlacing;

var PlayerLuckFactorsUpdate;

var PlayerDead;

var CavernMonsterTypeSync;

var NpcBuffRemovalRequest;

var ClientSyncedInventory;

var CountsAsHostForGameplaySet;

exports.ConnectRequest = ConnectRequest;
exports.Disconnect = Disconnect;
exports.PlayerSlotSet = PlayerSlotSet;
exports.PlayerInfo = PlayerInfo;
exports.PlayerInventorySlot = PlayerInventorySlot;
exports.WorldDataRequest = WorldDataRequest;
exports.WorldInfo = WorldInfo;
exports.InitialTileSectionsRequest = InitialTileSectionsRequest;
exports.Status = Status;
exports.TileSectionSend = TileSectionSend;
exports.TileSectionFrame = TileSectionFrame;
exports.PlayerSpawn = PlayerSpawn;
exports.PlayerUpdate = PlayerUpdate;
exports.PlayerActive = PlayerActive;
exports.PlayerHealth = PlayerHealth;
exports.TileModify = TileModify;
exports.TimeSet = TimeSet;
exports.DoorUse = DoorUse;
exports.TileSquareSend = TileSquareSend;
exports.ItemDropUpdate = ItemDropUpdate;
exports.ItemOwner = ItemOwner;
exports.NpcUpdate = NpcUpdate;
exports.NpcItemStrike = NpcItemStrike;
exports.ProjectileSync = ProjectileSync;
exports.NpcStrike = NpcStrike;
exports.ProjectileDestroy = ProjectileDestroy;
exports.PvpToggle = PvpToggle;
exports.ChestOpen = ChestOpen;
exports.ChestItem = ChestItem;
exports.ActiveContainerSync = ActiveContainerSync;
exports.ChestPlace = ChestPlace;
exports.HealEffect = HealEffect;
exports.Zones = Zones;
exports.PasswordRequired = PasswordRequired;
exports.PasswordSend = PasswordSend;
exports.ItemOwnerRemove = ItemOwnerRemove;
exports.NpcTalk = NpcTalk;
exports.PlayerAnimation = PlayerAnimation;
exports.PlayerMana = PlayerMana;
exports.ManaEffect = ManaEffect;
exports.PlayerTeam = PlayerTeam;
exports.SignRead = SignRead;
exports.SignNew = SignNew;
exports.LiquidSet = LiquidSet;
exports.PlayerSpawnSelf = PlayerSpawnSelf;
exports.PlayerBuffsSet = PlayerBuffsSet;
exports.NpcSpecialEffect = NpcSpecialEffect;
exports.ChestOrTempleUnlock = ChestOrTempleUnlock;
exports.NpcBuffAdd = NpcBuffAdd;
exports.NpcBuffUpdate = NpcBuffUpdate;
exports.PlayerBuffAdd = PlayerBuffAdd;
exports.NpcNameUpdate = NpcNameUpdate;
exports.GoodEvilUpdate = GoodEvilUpdate;
exports.HarpPlay = HarpPlay;
exports.SwitchHit = SwitchHit;
exports.NpcHomeUpdate = NpcHomeUpdate;
exports.BossOrInvasionSpawn = BossOrInvasionSpawn;
exports.PlayerDodge = PlayerDodge;
exports.TilePaint = TilePaint;
exports.WallPaint = WallPaint;
exports.Teleport = Teleport;
exports.PlayerHealOther = PlayerHealOther;
exports.DimensionsUpdate = DimensionsUpdate;
exports.ClientUuid = ClientUuid;
exports.ChestName = ChestName;
exports.CatchNpc = CatchNpc;
exports.ReleaseNpc = ReleaseNpc;
exports.TravellingMerchantInventory = TravellingMerchantInventory;
exports.TeleportationPotion = TeleportationPotion;
exports.AnglerQuest = AnglerQuest;
exports.AnglerQuestComplete = AnglerQuestComplete;
exports.AnglerQuestsCompletedAmount = AnglerQuestsCompletedAmount;
exports.TemporaryAnimationCreate = TemporaryAnimationCreate;
exports.InvasionProgressReport = InvasionProgressReport;
exports.ObjectPlace = ObjectPlace;
exports.PlayerChestIndexSync = PlayerChestIndexSync;
exports.CombatNumberCreate = CombatNumberCreate;
exports.NetModuleLoad = NetModuleLoad;
exports.NpcKillCount = NpcKillCount;
exports.PlayerStealth = PlayerStealth;
exports.ItemForceIntoNearestChest = ItemForceIntoNearestChest;
exports.TileEntityUpdate = TileEntityUpdate;
exports.TileEntityPlace = TileEntityPlace;
exports.ItemDropModify = ItemDropModify;
exports.ItemFramePlace = ItemFramePlace;
exports.ItemDropInstancedUpdate = ItemDropInstancedUpdate;
exports.EmoteBubble = EmoteBubble;
exports.ExtraValueSync = ExtraValueSync;
exports.SocialHandshake = SocialHandshake;
exports.Unused = Unused;
exports.PortalKill = PortalKill;
exports.PlayerTeleportPortal = PlayerTeleportPortal;
exports.NpcKilledNotification = NpcKilledNotification;
exports.EventNotification = EventNotification;
exports.MinionTargetUpdate = MinionTargetUpdate;
exports.NpcTeleportPortal = NpcTeleportPortal;
exports.ShieldStrengthsUpdate = ShieldStrengthsUpdate;
exports.NebulaLevelUp = NebulaLevelUp;
exports.MoonLordCountdown = MoonLordCountdown;
exports.NpcShopItem = NpcShopItem;
exports.GemLockToggle = GemLockToggle;
exports.SmokePoof = SmokePoof;
exports.ChatMessageSmart = ChatMessageSmart;
exports.WiredCannonShot = WiredCannonShot;
exports.MassWireOperation = MassWireOperation;
exports.MassWireOperationPay = MassWireOperationPay;
exports.PartyToggle = PartyToggle;
exports.TreeGrowFx = TreeGrowFx;
exports.CrystalInvasionStart = CrystalInvasionStart;
exports.CrystalInvasionWipeAll = CrystalInvasionWipeAll;
exports.MinionAttackTargetUpdate = MinionAttackTargetUpdate;
exports.CrystalInvasionSendWaitTime = CrystalInvasionSendWaitTime;
exports.PlayerDamage = PlayerDamage;
exports.PlayerDeath = PlayerDeath;
exports.CombatTextCreate = CombatTextCreate;
exports.Emoji = Emoji;
exports.TileEntityDisplayDollItemSync = TileEntityDisplayDollItemSync;
exports.TileEntityInteractionRequest = TileEntityInteractionRequest;
exports.WeaponsRackTryPlacing = WeaponsRackTryPlacing;
exports.TileEntityHatRackItemSync = TileEntityHatRackItemSync;
exports.TilePickingSync = TilePickingSync;
exports.RevengeMarkerSync = RevengeMarkerSync;
exports.RevengeMarkerRemove = RevengeMarkerRemove;
exports.GolfBallLandInCup = GolfBallLandInCup;
exports.ClientFinishConnectingToServer = ClientFinishConnectingToServer;
exports.NpcFishOut = NpcFishOut;
exports.NpcTamper = NpcTamper;
exports.LegacySoundPlay = LegacySoundPlay;
exports.FoodPlatterTryPlacing = FoodPlatterTryPlacing;
exports.PlayerLuckFactorsUpdate = PlayerLuckFactorsUpdate;
exports.PlayerDead = PlayerDead;
exports.CavernMonsterTypeSync = CavernMonsterTypeSync;
exports.NpcBuffRemovalRequest = NpcBuffRemovalRequest;
exports.ClientSyncedInventory = ClientSyncedInventory;
exports.CountsAsHostForGameplaySet = CountsAsHostForGameplaySet;
exports.connectRequest = connectRequest;
exports.disconnect = disconnect;
exports.playerSlotSet = playerSlotSet;
exports.playerInfo = playerInfo;
exports.playerInventorySlot = playerInventorySlot;
exports.worldDataRequest = worldDataRequest;
exports.worldInfo = worldInfo;
exports.initialTileSectionsRequest = initialTileSectionsRequest;
exports.status = status;
exports.tileSectionSend = tileSectionSend;
exports.tileSectionFrame = tileSectionFrame;
exports.playerSpawn = playerSpawn;
exports.playerUpdate = playerUpdate;
exports.playerActive = playerActive;
exports.playerHealth = playerHealth;
exports.tileModify = tileModify;
exports.timeSet = timeSet;
exports.doorUse = doorUse;
exports.tileSquareSend = tileSquareSend;
exports.itemDropUpdate = itemDropUpdate;
exports.itemOwner = itemOwner;
exports.npcUpdate = npcUpdate;
exports.npcItemStrike = npcItemStrike;
exports.projectileSync = projectileSync;
exports.npcStrike = npcStrike;
exports.projectileDestroy = projectileDestroy;
exports.pvpToggle = pvpToggle;
exports.chestOpen = chestOpen;
exports.chestItem = chestItem;
exports.activeContainerSync = activeContainerSync;
exports.chestPlace = chestPlace;
exports.healEffect = healEffect;
exports.zones = zones;
exports.passwordRequired = passwordRequired;
exports.passwordSend = passwordSend;
exports.itemOwnerRemove = itemOwnerRemove;
exports.npcTalk = npcTalk;
exports.playerAnimation = playerAnimation;
exports.playerMana = playerMana;
exports.manaEffect = manaEffect;
exports.playerTeam = playerTeam;
exports.signRead = signRead;
exports.signNew = signNew;
exports.liquidSet = liquidSet;
exports.playerSpawnSelf = playerSpawnSelf;
exports.playerBuffsSet = playerBuffsSet;
exports.npcSpecialEffect = npcSpecialEffect;
exports.chestOrTempleUnlock = chestOrTempleUnlock;
exports.npcBuffAdd = npcBuffAdd;
exports.npcBuffUpdate = npcBuffUpdate;
exports.playerBuffAdd = playerBuffAdd;
exports.npcNameUpdate = npcNameUpdate;
exports.goodEvilUpdate = goodEvilUpdate;
exports.harpPlay = harpPlay;
exports.switchHit = switchHit;
exports.npcHomeUpdate = npcHomeUpdate;
exports.bossOrInvasionSpawn = bossOrInvasionSpawn;
exports.playerDodge = playerDodge;
exports.tilePaint = tilePaint;
exports.wallPaint = wallPaint;
exports.teleport = teleport;
exports.playerHealOther = playerHealOther;
exports.dimensionsUpdate = dimensionsUpdate;
exports.clientUuid = clientUuid;
exports.chestName = chestName;
exports.catchNpc = catchNpc;
exports.releaseNpc = releaseNpc;
exports.travellingMerchantInventory = travellingMerchantInventory;
exports.teleportationPotion = teleportationPotion;
exports.anglerQuest = anglerQuest;
exports.anglerQuestComplete = anglerQuestComplete;
exports.anglerQuestsCompletedAmount = anglerQuestsCompletedAmount;
exports.temporaryAnimationCreate = temporaryAnimationCreate;
exports.invasionProgressReport = invasionProgressReport;
exports.objectPlace = objectPlace;
exports.playerChestIndexSync = playerChestIndexSync;
exports.combatNumberCreate = combatNumberCreate;
exports.netModuleLoad = netModuleLoad;
exports.npcKillCount = npcKillCount;
exports.playerStealth = playerStealth;
exports.itemForceIntoNearestChest = itemForceIntoNearestChest;
exports.tileEntityUpdate = tileEntityUpdate;
exports.tileEntityPlace = tileEntityPlace;
exports.itemDropModify = itemDropModify;
exports.itemFramePlace = itemFramePlace;
exports.itemDropInstancedUpdate = itemDropInstancedUpdate;
exports.emoteBubble = emoteBubble;
exports.extraValueSync = extraValueSync;
exports.socialHandshake = socialHandshake;
exports.unused = unused;
exports.portalKill = portalKill;
exports.playerTeleportPortal = playerTeleportPortal;
exports.npcKilledNotification = npcKilledNotification;
exports.eventNotification = eventNotification;
exports.minionTargetUpdate = minionTargetUpdate;
exports.npcTeleportPortal = npcTeleportPortal;
exports.shieldStrengthsUpdate = shieldStrengthsUpdate;
exports.nebulaLevelUp = nebulaLevelUp;
exports.moonLordCountdown = moonLordCountdown;
exports.npcShopItem = npcShopItem;
exports.gemLockToggle = gemLockToggle;
exports.smokePoof = smokePoof;
exports.chatMessageSmart = chatMessageSmart;
exports.wiredCannonShot = wiredCannonShot;
exports.massWireOperation = massWireOperation;
exports.massWireOperationPay = massWireOperationPay;
exports.partyToggle = partyToggle;
exports.treeGrowFx = treeGrowFx;
exports.crystalInvasionStart = crystalInvasionStart;
exports.crystalInvasionWipeAll = crystalInvasionWipeAll;
exports.minionAttackTargetUpdate = minionAttackTargetUpdate;
exports.crystalInvasionSendWaitTime = crystalInvasionSendWaitTime;
exports.playerDamage = playerDamage;
exports.playerDeath = playerDeath;
exports.combatTextCreate = combatTextCreate;
exports.emoji = emoji;
exports.tileEntityDisplayDollItemSync = tileEntityDisplayDollItemSync;
exports.tileEntityInteractionRequest = tileEntityInteractionRequest;
exports.weaponsRackTryPlacing = weaponsRackTryPlacing;
exports.tileEntityHatRackItemSync = tileEntityHatRackItemSync;
exports.tilePickingSync = tilePickingSync;
exports.revengeMarkerSync = revengeMarkerSync;
exports.revengeMarkerRemove = revengeMarkerRemove;
exports.golfBallLandInCup = golfBallLandInCup;
exports.clientFinishConnectingToServer = clientFinishConnectingToServer;
exports.npcFishOut = npcFishOut;
exports.npcTamper = npcTamper;
exports.legacySoundPlay = legacySoundPlay;
exports.foodPlatterTryPlacing = foodPlatterTryPlacing;
exports.playerLuckFactorsUpdate = playerLuckFactorsUpdate;
exports.playerDead = playerDead;
exports.cavernMonsterTypeSync = cavernMonsterTypeSync;
exports.npcBuffRemovalRequest = npcBuffRemovalRequest;
exports.clientSyncedInventory = clientSyncedInventory;
exports.countsAsHostForGameplaySet = countsAsHostForGameplaySet;
exports.toLatest = toLatest;
exports.fromLatest = fromLatest;
exports.serialize = serialize;
exports.serializeFromLatest = serializeFromLatest;
exports.Lazy = Lazy;
/* Packet_Status-TerrariaPacket Not a pure module */
