// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function fromByte($$byte) {
  return $$byte;
}

function fromFlags(flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8) {
  var $$byte = 0;
  $$byte = $$byte | (
    flag1 ? 1 : 0
  );
  $$byte = $$byte | (
    flag2 ? 2 : 0
  );
  $$byte = $$byte | (
    flag3 ? 4 : 0
  );
  $$byte = $$byte | (
    flag4 ? 8 : 0
  );
  $$byte = $$byte | (
    flag5 ? 16 : 0
  );
  $$byte = $$byte | (
    flag6 ? 32 : 0
  );
  $$byte = $$byte | (
    flag7 ? 64 : 0
  );
  $$byte = $$byte | (
    flag8 ? 128 : 0
  );
  return $$byte;
}

function flag1(__x) {
  return (__x & 1) === 1;
}

function flag2(__x) {
  return (__x & 2) === 2;
}

function flag3(__x) {
  return (__x & 4) === 4;
}

function flag4(__x) {
  return (__x & 8) === 8;
}

function flag5(__x) {
  return (__x & 16) === 16;
}

function flag6(__x) {
  return (__x & 32) === 32;
}

function flag7(__x) {
  return (__x & 64) === 64;
}

function flag8(__x) {
  return (__x & 128) === 128;
}

function toByte(self) {
  return self;
}

exports.fromByte = fromByte;
exports.fromFlags = fromFlags;
exports.flag1 = flag1;
exports.flag2 = flag2;
exports.flag3 = flag3;
exports.flag4 = flag4;
exports.flag5 = flag5;
exports.flag6 = flag6;
exports.flag7 = flag7;
exports.flag8 = flag8;
exports.toByte = toByte;
/* No side effect */
