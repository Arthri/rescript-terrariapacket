// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var PacketType$TerrariaPacket = require("../PacketType.mjs");
var PlayerDeathReason$TerrariaPacket = require("../PlayerDeathReason.mjs");
var ManagedPacketWriter$PacketFactory = require("@popstarfreas/packetfactory/src/ManagedPacketWriter.mjs");
var Packetreader = require("@popstarfreas/packetfactory/packetreader").default;
var Packetwriter = require("@popstarfreas/packetfactory/packetwriter").default;

function parse(payload) {
  var reader = new Packetreader(payload);
  var target = reader.readByte();
  var deathReason = PlayerDeathReason$TerrariaPacket.readDeathReason(reader);
  var damage = reader.readInt16();
  var hitDirection = reader.readByte();
  var critical = reader.readByte() === 1;
  var pvp = reader.readByte() === 1;
  var cooldownCounter = reader.readByte();
  return {
          target: target,
          deathReason: deathReason,
          damage: damage,
          hitDirection: hitDirection,
          critical: critical,
          pvp: pvp,
          cooldownCounter: cooldownCounter
        };
}

function toBuffer(self) {
  return PlayerDeathReason$TerrariaPacket.packDeathReason(ManagedPacketWriter$PacketFactory.setType(new Packetwriter(), PacketType$TerrariaPacket.toInt("PlayerDamage")).packByte(self.target), self.deathReason).packInt16(self.damage).packByte(self.hitDirection).packByte(self.critical ? 1 : 0).packByte(self.pvp ? 1 : 0).data;
}

exports.parse = parse;
exports.toBuffer = toBuffer;
/* @popstarfreas/packetfactory/packetreader Not a pure module */
