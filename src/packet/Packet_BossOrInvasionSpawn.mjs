// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var PacketType$TerrariaPacket = require("../PacketType.mjs");
var ManagedPacketWriter$PacketFactory = require("@popstarfreas/packetfactory/src/ManagedPacketWriter.mjs");
var Packetreader = require("@popstarfreas/packetfactory/packetreader").default;
var Packetwriter = require("@popstarfreas/packetfactory/packetwriter").default;

function readInt16(prim) {
  return prim.readInt16();
}

function parse(payload) {
  var reader = new Packetreader(payload);
  var playerId = reader.readInt16();
  var npcType = reader.readInt16();
  var spawnType;
  switch (npcType) {
    case -14 :
        spawnType = "BoughtBunny";
        break;
    case -13 :
        spawnType = "BoughtDog";
        break;
    case -12 :
        spawnType = "BoughtCat";
        break;
    case -11 :
        spawnType = "CombatBookUsed";
        break;
    case -10 :
        spawnType = "BloodMoon";
        break;
    case -9 :
        spawnType = {
          TAG: "Npc",
          _0: npcType
        };
        break;
    case -8 :
        spawnType = "ImpendingDoom";
        break;
    case -7 :
        spawnType = "MartianMoon";
        break;
    case -6 :
        spawnType = "Eclipse";
        break;
    case -5 :
        spawnType = "SnowMoon";
        break;
    case -4 :
        spawnType = "PumpkinMoon";
        break;
    case -3 :
        spawnType = "PirateInvasion";
        break;
    case -2 :
        spawnType = "FrostInvasion";
        break;
    case -1 :
        spawnType = "GoblinInvasion";
        break;
    default:
      spawnType = {
        TAG: "Npc",
        _0: npcType
      };
  }
  return {
          playerId: playerId,
          spawnType: spawnType
        };
}

var Decode = {
  readInt16: readInt16,
  parse: parse
};

function packInt16(prim0, prim1) {
  return prim0.packInt16(prim1);
}

function data(prim) {
  return prim.data;
}

function packSpawnType(writer, spawnType) {
  if (typeof spawnType === "object") {
    return writer.packInt16(spawnType._0);
  }
  switch (spawnType) {
    case "GoblinInvasion" :
        return writer.packInt16(-1);
    case "FrostInvasion" :
        return writer.packInt16(-2);
    case "PirateInvasion" :
        return writer.packInt16(-3);
    case "PumpkinMoon" :
        return writer.packInt16(-4);
    case "SnowMoon" :
        return writer.packInt16(-5);
    case "Eclipse" :
        return writer.packInt16(-6);
    case "MartianMoon" :
        return writer.packInt16(-7);
    case "ImpendingDoom" :
        return writer.packInt16(-8);
    case "BloodMoon" :
        return writer.packInt16(-10);
    case "CombatBookUsed" :
        return writer.packInt16(-11);
    case "BoughtCat" :
        return writer.packInt16(-12);
    case "BoughtDog" :
        return writer.packInt16(-13);
    case "BoughtBunny" :
        return writer.packInt16(-14);
    
  }
}

function toBuffer(self) {
  return packSpawnType(ManagedPacketWriter$PacketFactory.setType(new Packetwriter(), PacketType$TerrariaPacket.toInt("BossOrInvasionSpawn")).packInt16(self.playerId), self.spawnType).data;
}

var Encode = {
  Writer: undefined,
  packInt16: packInt16,
  setType: ManagedPacketWriter$PacketFactory.setType,
  data: data,
  packSpawnType: packSpawnType,
  toBuffer: toBuffer
};

exports.Decode = Decode;
exports.Encode = Encode;
exports.parse = parse;
exports.toBuffer = toBuffer;
/* @popstarfreas/packetfactory/packetreader Not a pure module */
