// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ManagedPacketWriter$PacketFactory = require("@popstarfreas/packetfactory/src/ManagedPacketWriter.bs.js");
var Packetreader = require("@popstarfreas/packetfactory/packetreader").default;
var Packetwriter = require("@popstarfreas/packetfactory/packetwriter").default;
var PacketType$DarkgamingRescriptTerrariapacket = require("../PacketType.bs.js");

function parse(payload) {
  var reader = new Packetreader(payload);
  var playerId = reader.readByte();
  var buffs = [];
  for(var _i = 1; _i <= 22; ++_i){
    buffs.push(reader.readUInt16());
  }
  return {
          playerId: playerId,
          buffs: buffs
        };
}

function packBuffs(writer, buffs) {
  buffs.forEach(function (buff) {
        writer.packUInt16(buff);
      });
  return writer;
}

function toBuffer(self) {
  return packBuffs(ManagedPacketWriter$PacketFactory.setType(new Packetwriter(), PacketType$DarkgamingRescriptTerrariapacket.toInt("PlayerBuffsSet")).packByte(self.playerId), self.buffs).data;
}

exports.parse = parse;
exports.toBuffer = toBuffer;
/* @popstarfreas/packetfactory/packetreader Not a pure module */
