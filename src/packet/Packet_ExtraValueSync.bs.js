// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ManagedPacketWriter$PacketFactory = require("@popstarfreas/packetfactory/src/ManagedPacketWriter.bs.js");
var Packetreader = require("@popstarfreas/packetfactory/packetreader").default;
var Packetwriter = require("@popstarfreas/packetfactory/packetwriter").default;
var PacketType$DarkgamingRescriptTerrariapacket = require("../PacketType.bs.js");

function readInt16(prim) {
  return prim.readInt16();
}

function readInt32(prim) {
  return prim.readInt32();
}

function readSingle(prim) {
  return prim.readSingle();
}

function parse(payload) {
  var reader = new Packetreader(payload);
  var npcSlotId = reader.readInt16();
  var extraValue = reader.readInt32();
  var x = reader.readSingle();
  var y = reader.readSingle();
  return {
          npcSlotId: npcSlotId,
          extraValue: extraValue,
          x: x,
          y: y
        };
}

var Decode = {
  readInt16: readInt16,
  readInt32: readInt32,
  readSingle: readSingle,
  parse: parse
};

function packInt16(prim0, prim1) {
  return prim0.packInt16(prim1);
}

function packInt32(prim0, prim1) {
  return prim0.packInt32(prim1);
}

function packSingle(prim0, prim1) {
  return prim0.packSingle(prim1);
}

function data(prim) {
  return prim.data;
}

function toBuffer(self) {
  return ManagedPacketWriter$PacketFactory.setType(new Packetwriter(), PacketType$DarkgamingRescriptTerrariapacket.toInt("ExtraValueSync")).packInt16(self.npcSlotId).packInt32(self.extraValue).packSingle(self.x).packSingle(self.y).data;
}

var Encode = {
  packInt16: packInt16,
  packInt32: packInt32,
  packSingle: packSingle,
  setType: ManagedPacketWriter$PacketFactory.setType,
  data: data,
  toBuffer: toBuffer
};

exports.Decode = Decode;
exports.Encode = Encode;
exports.parse = parse;
exports.toBuffer = toBuffer;
/* @popstarfreas/packetfactory/packetreader Not a pure module */
