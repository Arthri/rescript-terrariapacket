// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var PacketType$TerrariaPacket = require("../PacketType.bs.js");
var ManagedPacketWriter$PacketFactory = require("@popstarfreas/packetfactory/src/ManagedPacketWriter.bs.js");
var Packetreader = require("@popstarfreas/packetfactory/packetreader").default;
var Packetwriter = require("@popstarfreas/packetfactory/packetwriter").default;

function parse(payload) {
  var reader = new Packetreader(payload);
  var x = reader.readInt16();
  var y = reader.readInt16();
  var objectType = reader.readInt16();
  var style = reader.readInt16();
  var alternate = reader.readByte();
  var random = reader.readSByte();
  var match = reader.readByte();
  var direction = match !== 0 ? "Right" : "Left";
  return {
          x: x,
          y: y,
          objectType: objectType,
          style: style,
          alternate: alternate,
          random: random,
          direction: direction
        };
}

function toBuffer(self) {
  var match = self.direction;
  var tmp;
  tmp = match === "Left" ? 0 : 1;
  return ManagedPacketWriter$PacketFactory.setType(new Packetwriter(), PacketType$TerrariaPacket.toInt("ObjectPlace")).packInt16(self.x).packInt16(self.y).packInt16(self.objectType).packInt16(self.style).packByte(self.alternate).packSByte(self.random).packByte(tmp).data;
}

exports.parse = parse;
exports.toBuffer = toBuffer;
/* @popstarfreas/packetfactory/packetreader Not a pure module */
