// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");
var PacketType$negTerrariaPacket = require("./PacketType.js");
var Packet_Emoji$negTerrariaPacket = require("./packet/Packet_Emoji.js");
var Packet_Zones$negTerrariaPacket = require("./packet/Packet_Zones.js");
var Packet_Status$negTerrariaPacket = require("./packet/Packet_Status.js");
var Packet_Unused$negTerrariaPacket = require("./packet/Packet_Unused.js");
var Packet_DoorUse$negTerrariaPacket = require("./packet/Packet_DoorUse.js");
var Packet_NpcTalk$negTerrariaPacket = require("./packet/Packet_NpcTalk.js");
var Packet_SignNew$negTerrariaPacket = require("./packet/Packet_SignNew.js");
var Packet_TimeSet$negTerrariaPacket = require("./packet/Packet_TimeSet.js");
var Packet_CatchNpc$negTerrariaPacket = require("./packet/Packet_CatchNpc.js");
var Packet_HarpPlay$negTerrariaPacket = require("./packet/Packet_HarpPlay.js");
var Packet_SignRead$negTerrariaPacket = require("./packet/Packet_SignRead.js");
var Packet_Teleport$negTerrariaPacket = require("./packet/Packet_Teleport.js");
var Packet_ChestItem$negTerrariaPacket = require("./packet/Packet_ChestItem.js");
var Packet_ChestName$negTerrariaPacket = require("./packet/Packet_ChestName.js");
var Packet_ChestOpen$negTerrariaPacket = require("./packet/Packet_ChestOpen.js");
var Packet_ItemOwner$negTerrariaPacket = require("./packet/Packet_ItemOwner.js");
var Packet_LiquidSet$negTerrariaPacket = require("./packet/Packet_LiquidSet.js");
var Packet_NpcStrike$negTerrariaPacket = require("./packet/Packet_NpcStrike.js");
var Packet_NpcTamper$negTerrariaPacket = require("./packet/Packet_NpcTamper.js");
var Packet_NpcUpdate$negTerrariaPacket = require("./packet/Packet_NpcUpdate.js");
var Packet_PaintTile$negTerrariaPacket = require("./packet/Packet_PaintTile.js");
var Packet_PaintWall$negTerrariaPacket = require("./packet/Packet_PaintWall.js");
var Packet_PvpToggle$negTerrariaPacket = require("./packet/Packet_PvpToggle.js");
var Packet_SmokePoof$negTerrariaPacket = require("./packet/Packet_SmokePoof.js");
var Packet_SwitchHit$negTerrariaPacket = require("./packet/Packet_SwitchHit.js");
var Packet_WorldInfo$negTerrariaPacket = require("./packet/Packet_WorldInfo.js");
var Packet_ChestPlace$negTerrariaPacket = require("./packet/Packet_ChestPlace.js");
var Packet_ClientUuid$negTerrariaPacket = require("./packet/Packet_ClientUuid.js");
var Packet_Disconnect$negTerrariaPacket = require("./packet/Packet_Disconnect.js");
var Packet_HealEffect$negTerrariaPacket = require("./packet/Packet_HealEffect.js");
var Packet_ManaEffect$negTerrariaPacket = require("./packet/Packet_ManaEffect.js");
var Packet_NpcBuffAdd$negTerrariaPacket = require("./packet/Packet_NpcBuffAdd.js");
var Packet_NpcFishOut$negTerrariaPacket = require("./packet/Packet_NpcFishOut.js");
var Packet_PlayerDead$negTerrariaPacket = require("./packet/Packet_PlayerDead.js");
var Packet_PlayerInfo$negTerrariaPacket = require("./packet/Packet_PlayerInfo.js");
var Packet_PlayerMana$negTerrariaPacket = require("./packet/Packet_PlayerMana.js");
var Packet_PlayerTeam$negTerrariaPacket = require("./packet/Packet_PlayerTeam.js");
var Packet_PortalKill$negTerrariaPacket = require("./packet/Packet_PortalKill.js");
var Packet_ReleaseNpc$negTerrariaPacket = require("./packet/Packet_ReleaseNpc.js");
var Packet_TileModify$negTerrariaPacket = require("./packet/Packet_TileModify.js");
var Packet_TreeGrowFx$negTerrariaPacket = require("./packet/Packet_TreeGrowFx.js");
var Packet_AnglerQuest$negTerrariaPacket = require("./packet/Packet_AnglerQuest.js");
var Packet_ChestUnlock$negTerrariaPacket = require("./packet/Packet_ChestUnlock.js");
var Packet_EmoteBubble$negTerrariaPacket = require("./packet/Packet_EmoteBubble.js");
var Packet_NpcShopItem$negTerrariaPacket = require("./packet/Packet_NpcShopItem.js");
var Packet_ObjectPlace$negTerrariaPacket = require("./packet/Packet_ObjectPlace.js");
var Packet_PartyToggle$negTerrariaPacket = require("./packet/Packet_PartyToggle.js");
var Packet_PlayerDeath$negTerrariaPacket = require("./packet/Packet_PlayerDeath.js");
var Packet_PlayerDodge$negTerrariaPacket = require("./packet/Packet_PlayerDodge.js");
var Packet_PlayerSpawn$negTerrariaPacket = require("./packet/Packet_PlayerSpawn.js");
var Packet_NpcKillCount$negTerrariaPacket = require("./packet/Packet_NpcKillCount.js");
var Packet_PasswordSend$negTerrariaPacket = require("./packet/Packet_PasswordSend.js");
var Packet_PlayerActive$negTerrariaPacket = require("./packet/Packet_PlayerActive.js");
var Packet_PlayerDamage$negTerrariaPacket = require("./packet/Packet_PlayerDamage.js");
var Packet_PlayerHealth$negTerrariaPacket = require("./packet/Packet_PlayerHealth.js");
var Packet_PlayerUpdate$negTerrariaPacket = require("./packet/Packet_PlayerUpdate.js");
var Packet_GemLockToggle$negTerrariaPacket = require("./packet/Packet_GemLockToggle.js");
var Packet_NebulaLevelUp$negTerrariaPacket = require("./packet/Packet_NebulaLevelUp.js");
var Packet_NetModuleLoad$negTerrariaPacket = require("./packet/Packet_NetModuleLoad.js");
var Packet_NpcBuffUpdate$negTerrariaPacket = require("./packet/Packet_NpcBuffUpdate.js");
var Packet_NpcHomeUpdate$negTerrariaPacket = require("./packet/Packet_NpcHomeUpdate.js");
var Packet_NpcItemStrike$negTerrariaPacket = require("./packet/Packet_NpcItemStrike.js");
var Packet_NpcNameUpdate$negTerrariaPacket = require("./packet/Packet_NpcNameUpdate.js");
var Packet_PlayerBuffAdd$negTerrariaPacket = require("./packet/Packet_PlayerBuffAdd.js");
var Packet_PlayerSlotSet$negTerrariaPacket = require("./packet/Packet_PlayerSlotSet.js");
var Packet_PlayerStealth$negTerrariaPacket = require("./packet/Packet_PlayerStealth.js");
var Packet_ConnectRequest$negTerrariaPacket = require("./packet/Packet_ConnectRequest.js");
var Packet_ExtraValueSync$negTerrariaPacket = require("./packet/Packet_ExtraValueSync.js");
var Packet_GoodEvilUpdate$negTerrariaPacket = require("./packet/Packet_GoodEvilUpdate.js");
var Packet_ItemDropModify$negTerrariaPacket = require("./packet/Packet_ItemDropModify.js");
var Packet_ItemDropUpdate$negTerrariaPacket = require("./packet/Packet_ItemDropUpdate.js");
var Packet_ItemFramePlace$negTerrariaPacket = require("./packet/Packet_ItemFramePlace.js");
var Packet_PlayerBuffsSet$negTerrariaPacket = require("./packet/Packet_PlayerBuffsSet.js");
var Packet_ProjectileSync$negTerrariaPacket = require("./packet/Packet_ProjectileSync.js");
var Packet_TileSquareSend$negTerrariaPacket = require("./packet/Packet_TileSquareSend.js");
var Packet_ItemOwnerRemove$negTerrariaPacket = require("./packet/Packet_ItemOwnerRemove.js");
var Packet_LegacySoundPlay$negTerrariaPacket = require("./packet/Packet_LegacySoundPlay.js");
var Packet_PlayerAnimation$negTerrariaPacket = require("./packet/Packet_PlayerAnimation.js");
var Packet_PlayerHealOther$negTerrariaPacket = require("./packet/Packet_PlayerHealOther.js");
var Packet_PlayerSpawnSelf$negTerrariaPacket = require("./packet/Packet_PlayerSpawnSelf.js");
var Packet_SocialHandshake$negTerrariaPacket = require("./packet/Packet_SocialHandshake.js");
var Packet_TileEntityPlace$negTerrariaPacket = require("./packet/Packet_TileEntityPlace.js");
var Packet_TilePickingSync$negTerrariaPacket = require("./packet/Packet_TilePickingSync.js");
var Packet_TileSectionSend$negTerrariaPacket = require("./packet/Packet_TileSectionSend.js");
var Packet_WiredCannonShot$negTerrariaPacket = require("./packet/Packet_WiredCannonShot.js");
var Packet_ChatMessageSmart$negTerrariaPacket = require("./packet/Packet_ChatMessageSmart.js");
var Packet_CombatTextCreate$negTerrariaPacket = require("./packet/Packet_CombatTextCreate.js");
var Packet_DimensionsUpdate$negTerrariaPacket = require("./packet/Packet_DimensionsUpdate.js");
var Packet_NpcSpecialEffect$negTerrariaPacket = require("./packet/Packet_NpcSpecialEffect.js");
var Packet_PasswordRequired$negTerrariaPacket = require("./packet/Packet_PasswordRequired.js");
var Packet_TileEntityUpdate$negTerrariaPacket = require("./packet/Packet_TileEntityUpdate.js");
var Packet_TileSectionFrame$negTerrariaPacket = require("./packet/Packet_TileSectionFrame.js");
var Packet_WorldDataRequest$negTerrariaPacket = require("./packet/Packet_WorldDataRequest.js");
var Packet_EventNotification$negTerrariaPacket = require("./packet/Packet_EventNotification.js");
var Packet_GolfBallLandInCup$negTerrariaPacket = require("./packet/Packet_GolfBallLandInCup.js");
var Packet_MassWireOperation$negTerrariaPacket = require("./packet/Packet_MassWireOperation.js");
var Packet_MoonLordCountdown$negTerrariaPacket = require("./packet/Packet_MoonLordCountdown.js");
var Packet_NpcTeleportPortal$negTerrariaPacket = require("./packet/Packet_NpcTeleportPortal.js");
var Packet_ProjectileDestroy$negTerrariaPacket = require("./packet/Packet_ProjectileDestroy.js");
var Packet_RevengeMarkerSync$negTerrariaPacket = require("./packet/Packet_RevengeMarkerSync.js");
var Packet_CombatNumberCreate$negTerrariaPacket = require("./packet/Packet_CombatNumberCreate.js");
var Packet_MinionTargetUpdate$negTerrariaPacket = require("./packet/Packet_MinionTargetUpdate.js");
var Packet_ActiveContainerSync$negTerrariaPacket = require("./packet/Packet_ActiveContainerSync.js");
var Packet_AnglerQuestComplete$negTerrariaPacket = require("./packet/Packet_AnglerQuestComplete.js");
var Packet_BossOrInvasionSpawn$negTerrariaPacket = require("./packet/Packet_BossOrInvasionSpawn.js");
var Packet_PlayerInventorySlot$negTerrariaPacket = require("./packet/Packet_PlayerInventorySlot.js");
var Packet_RevengeMarkerRemove$negTerrariaPacket = require("./packet/Packet_RevengeMarkerRemove.js");
var Packet_TeleportationPotion$negTerrariaPacket = require("./packet/Packet_TeleportationPotion.js");
var Packet_CrystalInvasionStart$negTerrariaPacket = require("./packet/Packet_CrystalInvasionStart.js");
var Packet_MassWireOperationPay$negTerrariaPacket = require("./packet/Packet_MassWireOperationPay.js");
var Packet_PlayerChestIndexSync$negTerrariaPacket = require("./packet/Packet_PlayerChestIndexSync.js");
var Packet_PlayerTeleportPortal$negTerrariaPacket = require("./packet/Packet_PlayerTeleportPortal.js");
var Packet_CavernMonsterTypeSync$negTerrariaPacket = require("./packet/Packet_CavernMonsterTypeSync.js");
var Packet_ClientSyncedInventory$negTerrariaPacket = require("./packet/Packet_ClientSyncedInventory.js");
var Packet_FoodPlatterTryPlacing$negTerrariaPacket = require("./packet/Packet_FoodPlatterTryPlacing.js");
var Packet_NpcBuffRemovalRequest$negTerrariaPacket = require("./packet/Packet_NpcBuffRemovalRequest.js");
var Packet_NpcKilledNotification$negTerrariaPacket = require("./packet/Packet_NpcKilledNotification.js");
var Packet_ShieldStrengthsUpdate$negTerrariaPacket = require("./packet/Packet_ShieldStrengthsUpdate.js");
var Packet_WeaponsRackTryPlacing$negTerrariaPacket = require("./packet/Packet_WeaponsRackTryPlacing.js");
var Packet_CrystalInvasionWipeAll$negTerrariaPacket = require("./packet/Packet_CrystalInvasionWipeAll.js");
var Packet_InvasionProgressReport$negTerrariaPacket = require("./packet/Packet_InvasionProgressReport.js");
var Packet_ItemDropInstancedUpdate$negTerrariaPacket = require("./packet/Packet_ItemDropInstancedUpdate.js");
var Packet_PlayerLuckFactorsUpdate$negTerrariaPacket = require("./packet/Packet_PlayerLuckFactorsUpdate.js");
var Packet_MinionAttackTargetUpdate$negTerrariaPacket = require("./packet/Packet_MinionAttackTargetUpdate.js");
var Packet_TemporaryAnimationCreate$negTerrariaPacket = require("./packet/Packet_TemporaryAnimationCreate.js");
var Packet_ItemForceIntoNearestChest$negTerrariaPacket = require("./packet/Packet_ItemForceIntoNearestChest.js");
var Packet_TileEntityHatRackItemSync$negTerrariaPacket = require("./packet/Packet_TileEntityHatRackItemSync.js");
var Packet_CountsAsHostForGameplaySet$negTerrariaPacket = require("./packet/Packet_CountsAsHostForGameplaySet.js");
var Packet_InitialTileSectionsRequest$negTerrariaPacket = require("./packet/Packet_InitialTileSectionsRequest.js");
var Packet_AnglerQuestsCompletedAmount$negTerrariaPacket = require("./packet/Packet_AnglerQuestsCompletedAmount.js");
var Packet_CrystalInvasionSendWaitTime$negTerrariaPacket = require("./packet/Packet_CrystalInvasionSendWaitTime.js");
var Packet_TravellingMerchantInventory$negTerrariaPacket = require("./packet/Packet_TravellingMerchantInventory.js");
var Packet_TileEntityInteractionRequest$negTerrariaPacket = require("./packet/Packet_TileEntityInteractionRequest.js");
var Packet_TileEntityDisplayDollItemSync$negTerrariaPacket = require("./packet/Packet_TileEntityDisplayDollItemSync.js");
var Packet_ClientFinishConnectingToServer$negTerrariaPacket = require("./packet/Packet_ClientFinishConnectingToServer.js");

function parse(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$negTerrariaPacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    switch (packetType) {
      case /* ConnectRequest */0 :
          return Belt_Option.map(Packet_ConnectRequest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ConnectRequest */0,
                                _0: a
                              };
                      }));
      case /* Disconnect */1 :
          return Belt_Option.map(Packet_Disconnect$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Disconnect */1,
                                _0: a
                              };
                      }));
      case /* PlayerSlotSet */2 :
          return Belt_Option.map(Packet_PlayerSlotSet$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerSlotSet */2,
                                _0: a
                              };
                      }));
      case /* PlayerInfo */3 :
          return Belt_Option.map(Packet_PlayerInfo$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerInfo */3,
                                _0: a
                              };
                      }));
      case /* PlayerInventorySlot */4 :
          return Belt_Option.map(Packet_PlayerInventorySlot$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerInventorySlot */4,
                                _0: a
                              };
                      }));
      case /* WorldDataRequest */5 :
          return Belt_Option.map(Packet_WorldDataRequest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* WorldDataRequest */5,
                                _0: a
                              };
                      }));
      case /* WorldInfo */6 :
          return Belt_Option.map(Packet_WorldInfo$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* WorldInfo */6,
                                _0: a
                              };
                      }));
      case /* InitialTileSectionsRequest */7 :
          return Belt_Option.map(Packet_InitialTileSectionsRequest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* InitialTileSectionsRequest */7,
                                _0: a
                              };
                      }));
      case /* Status */8 :
          return Belt_Option.map(Packet_Status$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Status */8,
                                _0: a
                              };
                      }));
      case /* TileSectionSend */9 :
          return Belt_Option.map(Packet_TileSectionSend$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileSectionSend */9,
                                _0: a
                              };
                      }));
      case /* TileSectionFrame */10 :
          return Belt_Option.map(Packet_TileSectionFrame$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileSectionFrame */10,
                                _0: a
                              };
                      }));
      case /* PlayerSpawn */11 :
          return Belt_Option.map(Packet_PlayerSpawn$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerSpawn */11,
                                _0: a
                              };
                      }));
      case /* PlayerUpdate */12 :
          return Belt_Option.map(Packet_PlayerUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerUpdate */12,
                                _0: a
                              };
                      }));
      case /* PlayerActive */13 :
          return Belt_Option.map(Packet_PlayerActive$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerActive */13,
                                _0: a
                              };
                      }));
      case /* PlayerHealth */14 :
          return Belt_Option.map(Packet_PlayerHealth$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerHealth */14,
                                _0: a
                              };
                      }));
      case /* TileModify */15 :
          return Belt_Option.map(Packet_TileModify$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileModify */15,
                                _0: a
                              };
                      }));
      case /* TimeSet */16 :
          return Belt_Option.map(Packet_TimeSet$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TimeSet */16,
                                _0: a
                              };
                      }));
      case /* DoorUse */17 :
          return Belt_Option.map(Packet_DoorUse$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* DoorUse */17,
                                _0: a
                              };
                      }));
      case /* TileSquareSend */18 :
          return Belt_Option.map(Packet_TileSquareSend$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileSquareSend */18,
                                _0: a
                              };
                      }));
      case /* ItemDropUpdate */19 :
          return Belt_Option.map(Packet_ItemDropUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemDropUpdate */19,
                                _0: a
                              };
                      }));
      case /* ItemOwner */20 :
          return Belt_Option.map(Packet_ItemOwner$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemOwner */20,
                                _0: a
                              };
                      }));
      case /* NpcUpdate */21 :
          return Belt_Option.map(Packet_NpcUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcUpdate */21,
                                _0: a
                              };
                      }));
      case /* NpcItemStrike */22 :
          return Belt_Option.map(Packet_NpcItemStrike$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcItemStrike */22,
                                _0: a
                              };
                      }));
      case /* ProjectileSync */23 :
          return Belt_Option.map(Packet_ProjectileSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ProjectileSync */23,
                                _0: a
                              };
                      }));
      case /* NpcStrike */24 :
          return Belt_Option.map(Packet_NpcStrike$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcStrike */24,
                                _0: a
                              };
                      }));
      case /* ProjectileDestroy */25 :
          return Belt_Option.map(Packet_ProjectileDestroy$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ProjectileDestroy */25,
                                _0: a
                              };
                      }));
      case /* PvpToggle */26 :
          return Belt_Option.map(Packet_PvpToggle$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PvpToggle */26,
                                _0: a
                              };
                      }));
      case /* ChestOpen */27 :
          return Belt_Option.map(Packet_ChestOpen$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestOpen */27,
                                _0: a
                              };
                      }));
      case /* ChestItem */28 :
          return Belt_Option.map(Packet_ChestItem$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestItem */28,
                                _0: a
                              };
                      }));
      case /* ActiveContainerSync */29 :
          return Belt_Option.map(Packet_ActiveContainerSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ActiveContainerSync */29,
                                _0: a
                              };
                      }));
      case /* ChestPlace */30 :
          return Belt_Option.map(Packet_ChestPlace$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestPlace */30,
                                _0: a
                              };
                      }));
      case /* HealEffect */31 :
          return Belt_Option.map(Packet_HealEffect$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* HealEffect */31,
                                _0: a
                              };
                      }));
      case /* Zones */32 :
          return Belt_Option.map(Packet_Zones$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Zones */32,
                                _0: a
                              };
                      }));
      case /* PasswordRequired */33 :
          return Belt_Option.map(Packet_PasswordRequired$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PasswordRequired */33,
                                _0: a
                              };
                      }));
      case /* PasswordSend */34 :
          return Belt_Option.map(Packet_PasswordSend$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PasswordSend */34,
                                _0: a
                              };
                      }));
      case /* ItemOwnerRemove */35 :
          return Belt_Option.map(Packet_ItemOwnerRemove$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemOwnerRemove */35,
                                _0: a
                              };
                      }));
      case /* NpcTalk */36 :
          return Belt_Option.map(Packet_NpcTalk$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcTalk */36,
                                _0: a
                              };
                      }));
      case /* PlayerAnimation */37 :
          return Belt_Option.map(Packet_PlayerAnimation$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerAnimation */37,
                                _0: a
                              };
                      }));
      case /* PlayerMana */38 :
          return Belt_Option.map(Packet_PlayerMana$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerMana */38,
                                _0: a
                              };
                      }));
      case /* ManaEffect */39 :
          return Belt_Option.map(Packet_ManaEffect$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ManaEffect */39,
                                _0: a
                              };
                      }));
      case /* PlayerTeam */40 :
          return Belt_Option.map(Packet_PlayerTeam$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerTeam */40,
                                _0: a
                              };
                      }));
      case /* SignRead */41 :
          return Belt_Option.map(Packet_SignRead$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SignRead */41,
                                _0: a
                              };
                      }));
      case /* SignNew */42 :
          return Belt_Option.map(Packet_SignNew$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SignNew */42,
                                _0: a
                              };
                      }));
      case /* LiquidSet */43 :
          return Belt_Option.map(Packet_LiquidSet$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* LiquidSet */43,
                                _0: a
                              };
                      }));
      case /* PlayerSpawnSelf */44 :
          return Belt_Option.map(Packet_PlayerSpawnSelf$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerSpawnSelf */44,
                                _0: a
                              };
                      }));
      case /* PlayerBuffsSet */45 :
          return Belt_Option.map(Packet_PlayerBuffsSet$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerBuffsSet */45,
                                _0: a
                              };
                      }));
      case /* NpcSpecialEffect */46 :
          return Belt_Option.map(Packet_NpcSpecialEffect$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcSpecialEffect */46,
                                _0: a
                              };
                      }));
      case /* ChestUnlock */47 :
          return Belt_Option.map(Packet_ChestUnlock$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestUnlock */47,
                                _0: a
                              };
                      }));
      case /* NpcBuffAdd */48 :
          return Belt_Option.map(Packet_NpcBuffAdd$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcBuffAdd */48,
                                _0: a
                              };
                      }));
      case /* NpcBuffUpdate */49 :
          return Belt_Option.map(Packet_NpcBuffUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcBuffUpdate */49,
                                _0: a
                              };
                      }));
      case /* PlayerBuffAdd */50 :
          return Belt_Option.map(Packet_PlayerBuffAdd$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerBuffAdd */50,
                                _0: a
                              };
                      }));
      case /* NpcNameUpdate */51 :
          return Belt_Option.map(Packet_NpcNameUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcNameUpdate */51,
                                _0: a
                              };
                      }));
      case /* GoodEvilUpdate */52 :
          return Belt_Option.map(Packet_GoodEvilUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* GoodEvilUpdate */52,
                                _0: a
                              };
                      }));
      case /* HarpPlay */53 :
          return Belt_Option.map(Packet_HarpPlay$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* HarpPlay */53,
                                _0: a
                              };
                      }));
      case /* SwitchHit */54 :
          return Belt_Option.map(Packet_SwitchHit$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SwitchHit */54,
                                _0: a
                              };
                      }));
      case /* NpcHomeUpdate */55 :
          return Belt_Option.map(Packet_NpcHomeUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcHomeUpdate */55,
                                _0: a
                              };
                      }));
      case /* BossOrInvasionSpawn */56 :
          return Belt_Option.map(Packet_BossOrInvasionSpawn$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* BossOrInvasionSpawn */56,
                                _0: a
                              };
                      }));
      case /* PlayerDodge */57 :
          return Belt_Option.map(Packet_PlayerDodge$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDodge */57,
                                _0: a
                              };
                      }));
      case /* PaintTile */58 :
          return Belt_Option.map(Packet_PaintTile$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PaintTile */58,
                                _0: a
                              };
                      }));
      case /* PaintWall */59 :
          return Belt_Option.map(Packet_PaintWall$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PaintWall */59,
                                _0: a
                              };
                      }));
      case /* Teleport */60 :
          return Belt_Option.map(Packet_Teleport$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Teleport */60,
                                _0: a
                              };
                      }));
      case /* PlayerHealOther */61 :
          return Belt_Option.map(Packet_PlayerHealOther$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerHealOther */61,
                                _0: a
                              };
                      }));
      case /* DimensionsUpdate */62 :
          return Belt_Option.map(Packet_DimensionsUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* DimensionsUpdate */62,
                                _0: a
                              };
                      }));
      case /* ClientUuid */63 :
          return Belt_Option.map(Packet_ClientUuid$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ClientUuid */63,
                                _0: a
                              };
                      }));
      case /* ChestName */64 :
          return Belt_Option.map(Packet_ChestName$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestName */64,
                                _0: a
                              };
                      }));
      case /* CatchNpc */65 :
          return Belt_Option.map(Packet_CatchNpc$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CatchNpc */65,
                                _0: a
                              };
                      }));
      case /* ReleaseNpc */66 :
          return Belt_Option.map(Packet_ReleaseNpc$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ReleaseNpc */66,
                                _0: a
                              };
                      }));
      case /* TravellingMerchantInventory */67 :
          return Belt_Option.map(Packet_TravellingMerchantInventory$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TravellingMerchantInventory */67,
                                _0: a
                              };
                      }));
      case /* TeleportationPotion */68 :
          return Belt_Option.map(Packet_TeleportationPotion$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TeleportationPotion */68,
                                _0: a
                              };
                      }));
      case /* AnglerQuest */69 :
          return Belt_Option.map(Packet_AnglerQuest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* AnglerQuest */69,
                                _0: a
                              };
                      }));
      case /* AnglerQuestComplete */70 :
          return Belt_Option.map(Packet_AnglerQuestComplete$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* AnglerQuestComplete */70,
                                _0: a
                              };
                      }));
      case /* AnglerQuestsCompletedAmount */71 :
          return Belt_Option.map(Packet_AnglerQuestsCompletedAmount$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* AnglerQuestsCompletedAmount */71,
                                _0: a
                              };
                      }));
      case /* TemporaryAnimationCreate */72 :
          return Belt_Option.map(Packet_TemporaryAnimationCreate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TemporaryAnimationCreate */72,
                                _0: a
                              };
                      }));
      case /* InvasionProgressReport */73 :
          return Belt_Option.map(Packet_InvasionProgressReport$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* InvasionProgressReport */73,
                                _0: a
                              };
                      }));
      case /* ObjectPlace */74 :
          return Belt_Option.map(Packet_ObjectPlace$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ObjectPlace */74,
                                _0: a
                              };
                      }));
      case /* PlayerChestIndexSync */75 :
          return Belt_Option.map(Packet_PlayerChestIndexSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerChestIndexSync */75,
                                _0: a
                              };
                      }));
      case /* CombatNumberCreate */76 :
          return Belt_Option.map(Packet_CombatNumberCreate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CombatNumberCreate */76,
                                _0: a
                              };
                      }));
      case /* NetModuleLoad */77 :
          return Belt_Option.map(Packet_NetModuleLoad$negTerrariaPacket.parse(buffer, fromServer), (function (a) {
                        return {
                                TAG: /* NetModuleLoad */77,
                                _0: a
                              };
                      }));
      case /* NpcKillCount */78 :
          return Belt_Option.map(Packet_NpcKillCount$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcKillCount */78,
                                _0: a
                              };
                      }));
      case /* PlayerStealth */79 :
          return Belt_Option.map(Packet_PlayerStealth$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerStealth */79,
                                _0: a
                              };
                      }));
      case /* ItemForceIntoNearestChest */80 :
          return Belt_Option.map(Packet_ItemForceIntoNearestChest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemForceIntoNearestChest */80,
                                _0: a
                              };
                      }));
      case /* TileEntityUpdate */81 :
          return Belt_Option.map(Packet_TileEntityUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityUpdate */81,
                                _0: a
                              };
                      }));
      case /* TileEntityPlace */82 :
          return Belt_Option.map(Packet_TileEntityPlace$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityPlace */82,
                                _0: a
                              };
                      }));
      case /* ItemDropModify */83 :
          return Belt_Option.map(Packet_ItemDropModify$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemDropModify */83,
                                _0: a
                              };
                      }));
      case /* ItemFramePlace */84 :
          return Belt_Option.map(Packet_ItemFramePlace$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemFramePlace */84,
                                _0: a
                              };
                      }));
      case /* ItemDropInstancedUpdate */85 :
          return Belt_Option.map(Packet_ItemDropInstancedUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemDropInstancedUpdate */85,
                                _0: a
                              };
                      }));
      case /* EmoteBubble */86 :
          return Belt_Option.map(Packet_EmoteBubble$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* EmoteBubble */86,
                                _0: a
                              };
                      }));
      case /* ExtraValueSync */87 :
          return Belt_Option.map(Packet_ExtraValueSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ExtraValueSync */87,
                                _0: a
                              };
                      }));
      case /* SocialHandshake */88 :
          return Belt_Option.map(Packet_SocialHandshake$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SocialHandshake */88,
                                _0: a
                              };
                      }));
      case /* Unused */89 :
          return Belt_Option.map(Packet_Unused$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Unused */89,
                                _0: a
                              };
                      }));
      case /* PortalKill */90 :
          return Belt_Option.map(Packet_PortalKill$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PortalKill */90,
                                _0: a
                              };
                      }));
      case /* PlayerTeleportPortal */91 :
          return Belt_Option.map(Packet_PlayerTeleportPortal$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerTeleportPortal */91,
                                _0: a
                              };
                      }));
      case /* NpcKilledNotification */92 :
          return Belt_Option.map(Packet_NpcKilledNotification$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcKilledNotification */92,
                                _0: a
                              };
                      }));
      case /* EventNotification */93 :
          return Belt_Option.map(Packet_EventNotification$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* EventNotification */93,
                                _0: a
                              };
                      }));
      case /* MinionTargetUpdate */94 :
          return Belt_Option.map(Packet_MinionTargetUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MinionTargetUpdate */94,
                                _0: a
                              };
                      }));
      case /* NpcTeleportPortal */95 :
          return Belt_Option.map(Packet_NpcTeleportPortal$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcTeleportPortal */95,
                                _0: a
                              };
                      }));
      case /* ShieldStrengthsUpdate */96 :
          return Belt_Option.map(Packet_ShieldStrengthsUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ShieldStrengthsUpdate */96,
                                _0: a
                              };
                      }));
      case /* NebulaLevelUp */97 :
          return Belt_Option.map(Packet_NebulaLevelUp$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NebulaLevelUp */97,
                                _0: a
                              };
                      }));
      case /* MoonLordCountdown */98 :
          return Belt_Option.map(Packet_MoonLordCountdown$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MoonLordCountdown */98,
                                _0: a
                              };
                      }));
      case /* NpcShopItem */99 :
          return Belt_Option.map(Packet_NpcShopItem$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcShopItem */99,
                                _0: a
                              };
                      }));
      case /* GemLockToggle */100 :
          return Belt_Option.map(Packet_GemLockToggle$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* GemLockToggle */100,
                                _0: a
                              };
                      }));
      case /* SmokePoof */101 :
          return Belt_Option.map(Packet_SmokePoof$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SmokePoof */101,
                                _0: a
                              };
                      }));
      case /* ChatMessageSmart */102 :
          return Belt_Option.map(Packet_ChatMessageSmart$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChatMessageSmart */102,
                                _0: a
                              };
                      }));
      case /* WiredCannonShot */103 :
          return Belt_Option.map(Packet_WiredCannonShot$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* WiredCannonShot */103,
                                _0: a
                              };
                      }));
      case /* MassWireOperation */104 :
          return Belt_Option.map(Packet_MassWireOperation$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MassWireOperation */104,
                                _0: a
                              };
                      }));
      case /* MassWireOperationPay */105 :
          return Belt_Option.map(Packet_MassWireOperationPay$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MassWireOperationPay */105,
                                _0: a
                              };
                      }));
      case /* PartyToggle */106 :
          return Belt_Option.map(Packet_PartyToggle$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PartyToggle */106,
                                _0: a
                              };
                      }));
      case /* TreeGrowFx */107 :
          return Belt_Option.map(Packet_TreeGrowFx$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TreeGrowFx */107,
                                _0: a
                              };
                      }));
      case /* CrystalInvasionStart */108 :
          return Belt_Option.map(Packet_CrystalInvasionStart$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CrystalInvasionStart */108,
                                _0: a
                              };
                      }));
      case /* CrystalInvasionWipeAll */109 :
          return Belt_Option.map(Packet_CrystalInvasionWipeAll$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CrystalInvasionWipeAll */109,
                                _0: a
                              };
                      }));
      case /* MinionAttackTargetUpdate */110 :
          return Belt_Option.map(Packet_MinionAttackTargetUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MinionAttackTargetUpdate */110,
                                _0: a
                              };
                      }));
      case /* CrystalInvasionSendWaitTime */111 :
          return Belt_Option.map(Packet_CrystalInvasionSendWaitTime$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CrystalInvasionSendWaitTime */111,
                                _0: a
                              };
                      }));
      case /* PlayerDamage */112 :
          return Belt_Option.map(Packet_PlayerDamage$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDamage */112,
                                _0: a
                              };
                      }));
      case /* PlayerDeath */113 :
          return Belt_Option.map(Packet_PlayerDeath$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDeath */113,
                                _0: a
                              };
                      }));
      case /* CombatTextCreate */114 :
          return Belt_Option.map(Packet_CombatTextCreate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CombatTextCreate */114,
                                _0: a
                              };
                      }));
      case /* Emoji */115 :
          return Belt_Option.map(Packet_Emoji$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Emoji */115,
                                _0: a
                              };
                      }));
      case /* TileEntityDisplayDollItemSync */116 :
          return Belt_Option.map(Packet_TileEntityDisplayDollItemSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityDisplayDollItemSync */116,
                                _0: a
                              };
                      }));
      case /* TileEntityInteractionRequest */117 :
          return Belt_Option.map(Packet_TileEntityInteractionRequest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityInteractionRequest */117,
                                _0: a
                              };
                      }));
      case /* WeaponsRackTryPlacing */118 :
          return Belt_Option.map(Packet_WeaponsRackTryPlacing$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* WeaponsRackTryPlacing */118,
                                _0: a
                              };
                      }));
      case /* TileEntityHatRackItemSync */119 :
          return Belt_Option.map(Packet_TileEntityHatRackItemSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityHatRackItemSync */119,
                                _0: a
                              };
                      }));
      case /* TilePickingSync */120 :
          return Belt_Option.map(Packet_TilePickingSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TilePickingSync */120,
                                _0: a
                              };
                      }));
      case /* RevengeMarkerSync */121 :
          return Belt_Option.map(Packet_RevengeMarkerSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* RevengeMarkerSync */121,
                                _0: a
                              };
                      }));
      case /* RevengeMarkerRemove */122 :
          return Belt_Option.map(Packet_RevengeMarkerRemove$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* RevengeMarkerRemove */122,
                                _0: a
                              };
                      }));
      case /* GolfBallLandInCup */123 :
          return Belt_Option.map(Packet_GolfBallLandInCup$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* GolfBallLandInCup */123,
                                _0: a
                              };
                      }));
      case /* ClientFinishConnectingToServer */124 :
          return Belt_Option.map(Packet_ClientFinishConnectingToServer$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ClientFinishConnectingToServer */124,
                                _0: a
                              };
                      }));
      case /* NpcFishOut */125 :
          return Belt_Option.map(Packet_NpcFishOut$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcFishOut */125,
                                _0: a
                              };
                      }));
      case /* NpcTamper */126 :
          return Belt_Option.map(Packet_NpcTamper$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcTamper */126,
                                _0: a
                              };
                      }));
      case /* LegacySoundPlay */127 :
          return Belt_Option.map(Packet_LegacySoundPlay$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* LegacySoundPlay */127,
                                _0: a
                              };
                      }));
      case /* FoodPlatterTryPlacing */128 :
          return Belt_Option.map(Packet_FoodPlatterTryPlacing$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* FoodPlatterTryPlacing */128,
                                _0: a
                              };
                      }));
      case /* PlayerLuckFactorsUpdate */129 :
          return Belt_Option.map(Packet_PlayerLuckFactorsUpdate$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerLuckFactorsUpdate */129,
                                _0: a
                              };
                      }));
      case /* PlayerDead */130 :
          return Belt_Option.map(Packet_PlayerDead$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDead */130,
                                _0: a
                              };
                      }));
      case /* CavernMonsterTypeSync */131 :
          return Belt_Option.map(Packet_CavernMonsterTypeSync$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CavernMonsterTypeSync */131,
                                _0: a
                              };
                      }));
      case /* NpcBuffRemovalRequest */132 :
          return Belt_Option.map(Packet_NpcBuffRemovalRequest$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcBuffRemovalRequest */132,
                                _0: a
                              };
                      }));
      case /* ClientSyncedInventory */133 :
          return Belt_Option.map(Packet_ClientSyncedInventory$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ClientSyncedInventory */133,
                                _0: a
                              };
                      }));
      case /* CountsAsHostForGameplaySet */134 :
          return Belt_Option.map(Packet_CountsAsHostForGameplaySet$negTerrariaPacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CountsAsHostForGameplaySet */134,
                                _0: a
                              };
                      }));
      
    }
  }
  catch (raw_e){
    var e = Caml_js_exceptions.internalToOCamlException(raw_e);
    console.log(e);
    return ;
  }
}

exports.parse = parse;
/* Packet_Status-TerrariaPacket Not a pure module */
