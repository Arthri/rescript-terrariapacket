// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var PacketType$DarkgamingRescriptTerrariapacket = require("./PacketType.bs.js");
var Packetv1405$DarkgamingRescriptTerrariapacket = require("./Packetv1405.bs.js");
var Packet_Emoji$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Emoji.bs.js");
var Packet_Zones$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Zones.bs.js");
var Packet_Status$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Status.bs.js");
var Packet_Unused$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Unused.bs.js");
var Packet_DoorUse$DarkgamingRescriptTerrariapacket = require("./packet/Packet_DoorUse.bs.js");
var Packet_NpcTalk$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTalk.bs.js");
var Packet_SignNew$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SignNew.bs.js");
var Packet_TimeSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TimeSet.bs.js");
var Packet_CatchNpc$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CatchNpc.bs.js");
var Packet_HarpPlay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_HarpPlay.bs.js");
var Packet_SignRead$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SignRead.bs.js");
var Packet_Teleport$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Teleport.bs.js");
var Packet_ChestItem$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestItem.bs.js");
var Packet_ChestName$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestName.bs.js");
var Packet_ChestOpen$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestOpen.bs.js");
var Packet_ItemOwner$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemOwner.bs.js");
var Packet_LiquidSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_LiquidSet.bs.js");
var Packet_NpcStrike$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcStrike.bs.js");
var Packet_NpcTamper$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTamper.bs.js");
var Packet_NpcUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcUpdate.bs.js");
var Packet_PvpToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PvpToggle.bs.js");
var Packet_SmokePoof$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SmokePoof.bs.js");
var Packet_SwitchHit$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SwitchHit.bs.js");
var Packet_TilePaint$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TilePaint.bs.js");
var Packet_WallPaint$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WallPaint.bs.js");
var Packet_ChestPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestPlace.bs.js");
var Packet_ClientUuid$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientUuid.bs.js");
var Packet_Disconnect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Disconnect.bs.js");
var Packet_HealEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_HealEffect.bs.js");
var Packet_ManaEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ManaEffect.bs.js");
var Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffAdd.bs.js");
var Packet_NpcFishOut$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcFishOut.bs.js");
var Packet_PlayerDead$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDead.bs.js");
var Packet_PlayerInfo$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerInfo.bs.js");
var Packet_PlayerMana$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerMana.bs.js");
var Packet_PlayerTeam$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerTeam.bs.js");
var Packet_PortalKill$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PortalKill.bs.js");
var Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ReleaseNpc.bs.js");
var Packet_TileModify$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileModify.bs.js");
var Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TreeGrowFx.bs.js");
var Packet_AnglerQuest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuest.bs.js");
var Packet_EmoteBubble$DarkgamingRescriptTerrariapacket = require("./packet/Packet_EmoteBubble.bs.js");
var Packet_NpcShopItem$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcShopItem.bs.js");
var Packet_ObjectPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ObjectPlace.bs.js");
var Packet_PartyToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PartyToggle.bs.js");
var Packet_PlayerDeath$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDeath.bs.js");
var Packet_PlayerDodge$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDodge.bs.js");
var Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSpawn.bs.js");
var Packet_NpcKillCount$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcKillCount.bs.js");
var Packet_PasswordSend$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PasswordSend.bs.js");
var Packet_PlayerActive$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerActive.bs.js");
var Packet_PlayerDamage$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDamage.bs.js");
var Packet_PlayerHealth$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerHealth.bs.js");
var Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerUpdate.bs.js");
var Packet_GemLockToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GemLockToggle.bs.js");
var Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NebulaLevelUp.bs.js");
var Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NetModuleLoad.bs.js");
var Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffUpdate.bs.js");
var Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcHomeUpdate.bs.js");
var Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcItemStrike.bs.js");
var Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcNameUpdate.bs.js");
var Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerBuffAdd.bs.js");
var Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSlotSet.bs.js");
var Packet_PlayerStealth$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerStealth.bs.js");
var Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ExtraValueSync.bs.js");
var Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GoodEvilUpdate.bs.js");
var Packet_ItemDropModify$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropModify.bs.js");
var Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropUpdate.bs.js");
var Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemFramePlace.bs.js");
var Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerBuffsSet.bs.js");
var Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_WorldInfo.bs.js");
var Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemOwnerRemove.bs.js");
var Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_LegacySoundPlay.bs.js");
var Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerAnimation.bs.js");
var Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerHealOther.bs.js");
var Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSpawnSelf.bs.js");
var Packet_SocialHandshake$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SocialHandshake.bs.js");
var Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityPlace.bs.js");
var Packet_TilePickingSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TilePickingSync.bs.js");
var Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WiredCannonShot.bs.js");
var Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChatMessageSmart.bs.js");
var Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CombatTextCreate.bs.js");
var Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_DimensionsUpdate.bs.js");
var Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcSpecialEffect.bs.js");
var Packet_PasswordRequired$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PasswordRequired.bs.js");
var Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityUpdate.bs.js");
var Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileSectionFrame.bs.js");
var Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WorldDataRequest.bs.js");
var Packet_EventNotification$DarkgamingRescriptTerrariapacket = require("./packet/Packet_EventNotification.bs.js");
var Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GolfBallLandInCup.bs.js");
var Packet_MassWireOperation$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MassWireOperation.bs.js");
var Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MoonLordCountdown.bs.js");
var Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTeleportPortal.bs.js");
var Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ProjectileDestroy.bs.js");
var Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_RevengeMarkerSync.bs.js");
var Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CombatNumberCreate.bs.js");
var Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MinionTargetUpdate.bs.js");
var Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ActiveContainerSync.bs.js");
var Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuestComplete.bs.js");
var Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket = require("./packet/Packet_BossOrInvasionSpawn.bs.js");
var Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestOrTempleUnlock.bs.js");
var Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerInventorySlot.bs.js");
var Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket = require("./packet/Packet_RevengeMarkerRemove.bs.js");
var Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TeleportationPotion.bs.js");
var Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_ConnectRequest.bs.js");
var Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_ProjectileSync.bs.js");
var Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_TileSquareSend.bs.js");
var Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionStart.bs.js");
var Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MassWireOperationPay.bs.js");
var Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerChestIndexSync.bs.js");
var Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerTeleportPortal.bs.js");
var Packetv1405_TileSectionSend$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_TileSectionSend.bs.js");
var Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CavernMonsterTypeSync.bs.js");
var Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientSyncedInventory.bs.js");
var Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket = require("./packet/Packet_FoodPlatterTryPlacing.bs.js");
var Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffRemovalRequest.bs.js");
var Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcKilledNotification.bs.js");
var Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ShieldStrengthsUpdate.bs.js");
var Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WeaponsRackTryPlacing.bs.js");
var Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionWipeAll.bs.js");
var Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket = require("./packet/Packet_InvasionProgressReport.bs.js");
var Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropInstancedUpdate.bs.js");
var Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerLuckFactorsUpdate.bs.js");
var Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MinionAttackTargetUpdate.bs.js");
var Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TemporaryAnimationCreate.bs.js");
var Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemForceIntoNearestChest.bs.js");
var Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityHatRackItemSync.bs.js");
var Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CountsAsHostForGameplaySet.bs.js");
var Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_InitialTileSectionsRequest.bs.js");
var Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuestsCompletedAmount.bs.js");
var Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionSendWaitTime.bs.js");
var Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TravellingMerchantInventory.bs.js");
var Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityInteractionRequest.bs.js");
var Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityDisplayDollItemSync.bs.js");
var Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientFinishConnectingToServer.bs.js");

function simpleParse(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$DarkgamingRescriptTerrariapacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    switch (packetType) {
      case "ConnectRequest" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ConnectRequest",
                                  _0: a
                                };
                        }));
          }
      case "Disconnect" :
          if (fromServer) {
            return Belt_Option.map(Packet_Disconnect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "Disconnect",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerSlotSet" :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PlayerSlotSet",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerInfo" :
          return Belt_Option.map(Packet_PlayerInfo$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerInfo",
                                _0: a
                              };
                      }));
      case "PlayerInventorySlot" :
          return Belt_Option.map(Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerInventorySlot",
                                _0: a
                              };
                      }));
      case "WorldDataRequest" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "WorldDataRequest",
                                  _0: a
                                };
                        }));
          }
      case "WorldInfo" :
          if (fromServer) {
            return Belt_Option.map(Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "WorldInfo",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "InitialTileSectionsRequest" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "InitialTileSectionsRequest",
                                  _0: a
                                };
                        }));
          }
      case "Status" :
          if (fromServer) {
            return Belt_Option.map(Packet_Status$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "Status",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "TileSectionSend" :
          if (fromServer) {
            return Belt_Option.map(Packetv1405_TileSectionSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TileSectionSend",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "TileSectionFrame" :
          if (fromServer) {
            return Belt_Option.map(Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TileSectionFrame",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerSpawn" :
          return Belt_Option.map(Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerSpawn",
                                _0: a
                              };
                      }));
      case "PlayerUpdate" :
          return Belt_Option.map(Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerUpdate",
                                _0: a
                              };
                      }));
      case "PlayerActive" :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerActive$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PlayerActive",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerHealth" :
          return Belt_Option.map(Packet_PlayerHealth$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerHealth",
                                _0: a
                              };
                      }));
      case "TileModify" :
          return Belt_Option.map(Packet_TileModify$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TileModify",
                                _0: a
                              };
                      }));
      case "TimeSet" :
          if (fromServer) {
            return Belt_Option.map(Packet_TimeSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TimeSet",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "DoorUse" :
          return Belt_Option.map(Packet_DoorUse$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "DoorUse",
                                _0: a
                              };
                      }));
      case "TileSquareSend" :
          return Belt_Option.map(Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TileSquareSend",
                                _0: a
                              };
                      }));
      case "ItemDropUpdate" :
          return Belt_Option.map(Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ItemDropUpdate",
                                _0: a
                              };
                      }));
      case "ItemOwner" :
          return Belt_Option.map(Packet_ItemOwner$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ItemOwner",
                                _0: a
                              };
                      }));
      case "NpcUpdate" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcUpdate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NpcItemStrike" :
          return Belt_Option.map(Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcItemStrike",
                                _0: a
                              };
                      }));
      case "ProjectileSync" :
          return Belt_Option.map(Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ProjectileSync",
                                _0: a
                              };
                      }));
      case "NpcStrike" :
          return Belt_Option.map(Packet_NpcStrike$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcStrike",
                                _0: a
                              };
                      }));
      case "ProjectileDestroy" :
          return Belt_Option.map(Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ProjectileDestroy",
                                _0: a
                              };
                      }));
      case "PvpToggle" :
          return Belt_Option.map(Packet_PvpToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PvpToggle",
                                _0: a
                              };
                      }));
      case "ChestOpen" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ChestOpen$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ChestOpen",
                                  _0: a
                                };
                        }));
          }
      case "ChestItem" :
          return Belt_Option.map(Packet_ChestItem$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ChestItem",
                                _0: a
                              };
                      }));
      case "ActiveContainerSync" :
          return Belt_Option.map(Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ActiveContainerSync",
                                _0: a
                              };
                      }));
      case "ChestPlace" :
          return Belt_Option.map(Packet_ChestPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ChestPlace",
                                _0: a
                              };
                      }));
      case "HealEffect" :
          return Belt_Option.map(Packet_HealEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "HealEffect",
                                _0: a
                              };
                      }));
      case "Zones" :
          return Belt_Option.map(Packet_Zones$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "Zones",
                                _0: a
                              };
                      }));
      case "PasswordRequired" :
          if (fromServer) {
            return Belt_Option.map(Packet_PasswordRequired$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PasswordRequired",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PasswordSend" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PasswordSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PasswordSend",
                                  _0: a
                                };
                        }));
          }
      case "ItemOwnerRemove" :
          if (fromServer) {
            return Belt_Option.map(Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ItemOwnerRemove",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NpcTalk" :
          return Belt_Option.map(Packet_NpcTalk$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcTalk",
                                _0: a
                              };
                      }));
      case "PlayerAnimation" :
          return Belt_Option.map(Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerAnimation",
                                _0: a
                              };
                      }));
      case "PlayerMana" :
          return Belt_Option.map(Packet_PlayerMana$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerMana",
                                _0: a
                              };
                      }));
      case "ManaEffect" :
          return Belt_Option.map(Packet_ManaEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ManaEffect",
                                _0: a
                              };
                      }));
      case "PlayerTeam" :
          return Belt_Option.map(Packet_PlayerTeam$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerTeam",
                                _0: a
                              };
                      }));
      case "SignRead" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_SignRead$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "SignRead",
                                  _0: a
                                };
                        }));
          }
      case "SignNew" :
          return Belt_Option.map(Packet_SignNew$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "SignNew",
                                _0: a
                              };
                      }));
      case "LiquidSet" :
          return Belt_Option.map(Packet_LiquidSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "LiquidSet",
                                _0: a
                              };
                      }));
      case "PlayerSpawnSelf" :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PlayerSpawnSelf",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerBuffsSet" :
          return Belt_Option.map(Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerBuffsSet",
                                _0: a
                              };
                      }));
      case "NpcSpecialEffect" :
          return Belt_Option.map(Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcSpecialEffect",
                                _0: a
                              };
                      }));
      case "ChestOrTempleUnlock" :
          return Belt_Option.map(Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ChestOrTempleUnlock",
                                _0: a
                              };
                      }));
      case "NpcBuffAdd" :
          return Belt_Option.map(Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcBuffAdd",
                                _0: a
                              };
                      }));
      case "NpcBuffUpdate" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcBuffUpdate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerBuffAdd" :
          return Belt_Option.map(Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerBuffAdd",
                                _0: a
                              };
                      }));
      case "NpcNameUpdate" :
          return Belt_Option.map(Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcNameUpdate",
                                _0: a
                              };
                      }));
      case "GoodEvilUpdate" :
          if (fromServer) {
            return Belt_Option.map(Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "GoodEvilUpdate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "HarpPlay" :
          return Belt_Option.map(Packet_HarpPlay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "HarpPlay",
                                _0: a
                              };
                      }));
      case "SwitchHit" :
          return Belt_Option.map(Packet_SwitchHit$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "SwitchHit",
                                _0: a
                              };
                      }));
      case "NpcHomeUpdate" :
          return Belt_Option.map(Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcHomeUpdate",
                                _0: a
                              };
                      }));
      case "BossOrInvasionSpawn" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "BossOrInvasionSpawn",
                                  _0: a
                                };
                        }));
          }
      case "PlayerDodge" :
          return Belt_Option.map(Packet_PlayerDodge$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerDodge",
                                _0: a
                              };
                      }));
      case "TilePaint" :
          return Belt_Option.map(Packet_TilePaint$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TilePaint",
                                _0: a
                              };
                      }));
      case "WallPaint" :
          return Belt_Option.map(Packet_WallPaint$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "WallPaint",
                                _0: a
                              };
                      }));
      case "Teleport" :
          return Belt_Option.map(Packet_Teleport$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "Teleport",
                                _0: a
                              };
                      }));
      case "PlayerHealOther" :
          return Belt_Option.map(Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerHealOther",
                                _0: a
                              };
                      }));
      case "DimensionsUpdate" :
          return Belt_Option.map(Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "DimensionsUpdate",
                                _0: a
                              };
                      }));
      case "ClientUuid" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ClientUuid$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ClientUuid",
                                  _0: a
                                };
                        }));
          }
      case "ChestName" :
          return Belt_Option.map(Packet_ChestName$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ChestName",
                                _0: a
                              };
                      }));
      case "CatchNpc" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_CatchNpc$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CatchNpc",
                                  _0: a
                                };
                        }));
          }
      case "ReleaseNpc" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ReleaseNpc",
                                  _0: a
                                };
                        }));
          }
      case "TravellingMerchantInventory" :
          if (fromServer) {
            return Belt_Option.map(Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TravellingMerchantInventory",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "TeleportationPotion" :
          return Belt_Option.map(Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TeleportationPotion",
                                _0: a
                              };
                      }));
      case "AnglerQuest" :
          if (fromServer) {
            return Belt_Option.map(Packet_AnglerQuest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "AnglerQuest",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "AnglerQuestComplete" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "AnglerQuestComplete",
                                  _0: a
                                };
                        }));
          }
      case "AnglerQuestsCompletedAmount" :
          return Belt_Option.map(Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "AnglerQuestsCompletedAmount",
                                _0: a
                              };
                      }));
      case "TemporaryAnimationCreate" :
          if (fromServer) {
            return Belt_Option.map(Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TemporaryAnimationCreate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "InvasionProgressReport" :
          if (fromServer) {
            return Belt_Option.map(Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "InvasionProgressReport",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "ObjectPlace" :
          return Belt_Option.map(Packet_ObjectPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ObjectPlace",
                                _0: a
                              };
                      }));
      case "PlayerChestIndexSync" :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PlayerChestIndexSync",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "CombatNumberCreate" :
          if (fromServer) {
            return Belt_Option.map(Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CombatNumberCreate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NetModuleLoad" :
          return Belt_Option.map(Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket.parse(buffer, fromServer), (function (a) {
                        return {
                                TAG: "NetModuleLoad",
                                _0: a
                              };
                      }));
      case "NpcKillCount" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcKillCount$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcKillCount",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerStealth" :
          return Belt_Option.map(Packet_PlayerStealth$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerStealth",
                                _0: a
                              };
                      }));
      case "ItemForceIntoNearestChest" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ItemForceIntoNearestChest",
                                  _0: a
                                };
                        }));
          }
      case "TileEntityUpdate" :
          if (fromServer) {
            return Belt_Option.map(Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TileEntityUpdate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "TileEntityPlace" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "TileEntityPlace",
                                  _0: a
                                };
                        }));
          }
      case "ItemDropModify" :
          if (fromServer) {
            return Belt_Option.map(Packet_ItemDropModify$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ItemDropModify",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "ItemFramePlace" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ItemFramePlace",
                                  _0: a
                                };
                        }));
          }
      case "ItemDropInstancedUpdate" :
          return Belt_Option.map(Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ItemDropInstancedUpdate",
                                _0: a
                              };
                      }));
      case "EmoteBubble" :
          if (fromServer) {
            return Belt_Option.map(Packet_EmoteBubble$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "EmoteBubble",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "ExtraValueSync" :
          return Belt_Option.map(Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "ExtraValueSync",
                                _0: a
                              };
                      }));
      case "SocialHandshake" :
          return Belt_Option.map(Packet_SocialHandshake$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "SocialHandshake",
                                _0: a
                              };
                      }));
      case "Unused" :
          return Belt_Option.map(Packet_Unused$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "Unused",
                                _0: a
                              };
                      }));
      case "PortalKill" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PortalKill$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PortalKill",
                                  _0: a
                                };
                        }));
          }
      case "PlayerTeleportPortal" :
          return Belt_Option.map(Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerTeleportPortal",
                                _0: a
                              };
                      }));
      case "NpcKilledNotification" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcKilledNotification",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "EventNotification" :
          if (fromServer) {
            return Belt_Option.map(Packet_EventNotification$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "EventNotification",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "MinionTargetUpdate" :
          return Belt_Option.map(Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "MinionTargetUpdate",
                                _0: a
                              };
                      }));
      case "NpcTeleportPortal" :
          return Belt_Option.map(Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NpcTeleportPortal",
                                _0: a
                              };
                      }));
      case "ShieldStrengthsUpdate" :
          if (fromServer) {
            return Belt_Option.map(Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ShieldStrengthsUpdate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NebulaLevelUp" :
          return Belt_Option.map(Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "NebulaLevelUp",
                                _0: a
                              };
                      }));
      case "MoonLordCountdown" :
          if (fromServer) {
            return Belt_Option.map(Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "MoonLordCountdown",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NpcShopItem" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcShopItem$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcShopItem",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "GemLockToggle" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_GemLockToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "GemLockToggle",
                                  _0: a
                                };
                        }));
          }
      case "SmokePoof" :
          if (fromServer) {
            return Belt_Option.map(Packet_SmokePoof$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "SmokePoof",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "ChatMessageSmart" :
          if (fromServer) {
            return Belt_Option.map(Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ChatMessageSmart",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "WiredCannonShot" :
          if (fromServer) {
            return Belt_Option.map(Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "WiredCannonShot",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "MassWireOperation" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_MassWireOperation$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "MassWireOperation",
                                  _0: a
                                };
                        }));
          }
      case "MassWireOperationPay" :
          if (fromServer) {
            return Belt_Option.map(Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "MassWireOperationPay",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PartyToggle" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PartyToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PartyToggle",
                                  _0: a
                                };
                        }));
          }
      case "TreeGrowFx" :
          return Belt_Option.map(Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TreeGrowFx",
                                _0: a
                              };
                      }));
      case "CrystalInvasionStart" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CrystalInvasionStart",
                                  _0: a
                                };
                        }));
          }
      case "CrystalInvasionWipeAll" :
          if (fromServer) {
            return Belt_Option.map(Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CrystalInvasionWipeAll",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "MinionAttackTargetUpdate" :
          return Belt_Option.map(Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "MinionAttackTargetUpdate",
                                _0: a
                              };
                      }));
      case "CrystalInvasionSendWaitTime" :
          if (fromServer) {
            return Belt_Option.map(Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CrystalInvasionSendWaitTime",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "PlayerDamage" :
          return Belt_Option.map(Packet_PlayerDamage$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerDamage",
                                _0: a
                              };
                      }));
      case "PlayerDeath" :
          return Belt_Option.map(Packet_PlayerDeath$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerDeath",
                                _0: a
                              };
                      }));
      case "CombatTextCreate" :
          if (fromServer) {
            return Belt_Option.map(Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CombatTextCreate",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "Emoji" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_Emoji$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "Emoji",
                                  _0: a
                                };
                        }));
          }
      case "TileEntityDisplayDollItemSync" :
          return Belt_Option.map(Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TileEntityDisplayDollItemSync",
                                _0: a
                              };
                      }));
      case "TileEntityInteractionRequest" :
          return Belt_Option.map(Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TileEntityInteractionRequest",
                                _0: a
                              };
                      }));
      case "WeaponsRackTryPlacing" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "WeaponsRackTryPlacing",
                                  _0: a
                                };
                        }));
          }
      case "TileEntityHatRackItemSync" :
          return Belt_Option.map(Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TileEntityHatRackItemSync",
                                _0: a
                              };
                      }));
      case "TilePickingSync" :
          return Belt_Option.map(Packet_TilePickingSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "TilePickingSync",
                                _0: a
                              };
                      }));
      case "RevengeMarkerSync" :
          if (fromServer) {
            return Belt_Option.map(Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "RevengeMarkerSync",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "RevengeMarkerRemove" :
          if (fromServer) {
            return Belt_Option.map(Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "RevengeMarkerRemove",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "GolfBallLandInCup" :
          return Belt_Option.map(Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "GolfBallLandInCup",
                                _0: a
                              };
                      }));
      case "ClientFinishConnectingToServer" :
          if (fromServer) {
            return Belt_Option.map(Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ClientFinishConnectingToServer",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "NpcFishOut" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_NpcFishOut$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcFishOut",
                                  _0: a
                                };
                        }));
          }
      case "NpcTamper" :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcTamper$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcTamper",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "LegacySoundPlay" :
          if (fromServer) {
            return Belt_Option.map(Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "LegacySoundPlay",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "FoodPlatterTryPlacing" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "FoodPlatterTryPlacing",
                                  _0: a
                                };
                        }));
          }
      case "PlayerLuckFactorsUpdate" :
          return Belt_Option.map(Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "PlayerLuckFactorsUpdate",
                                _0: a
                              };
                      }));
      case "PlayerDead" :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerDead$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "PlayerDead",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case "CavernMonsterTypeSync" :
          return Belt_Option.map(Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: "CavernMonsterTypeSync",
                                _0: a
                              };
                      }));
      case "NpcBuffRemovalRequest" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "NpcBuffRemovalRequest",
                                  _0: a
                                };
                        }));
          }
      case "ClientSyncedInventory" :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "ClientSyncedInventory",
                                  _0: a
                                };
                        }));
          }
      case "CountsAsHostForGameplaySet" :
          if (fromServer) {
            return Belt_Option.map(Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: "CountsAsHostForGameplaySet",
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      default:
        return ;
    }
  }
  catch (_e){
    return ;
  }
}

function simpleParseLazy(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$DarkgamingRescriptTerrariapacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    switch (packetType) {
      case "ConnectRequest" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ConnectRequest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "Disconnect" :
          if (fromServer) {
            return {
                    TAG: "Disconnect",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Disconnect$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerSlotSet" :
          if (fromServer) {
            return {
                    TAG: "PlayerSlotSet",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerInfo" :
          return {
                  TAG: "PlayerInfo",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerInfo$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerInventorySlot" :
          return {
                  TAG: "PlayerInventorySlot",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "WorldDataRequest" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "WorldDataRequest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "WorldInfo" :
          if (fromServer) {
            return {
                    TAG: "WorldInfo",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "InitialTileSectionsRequest" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "InitialTileSectionsRequest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "Status" :
          if (fromServer) {
            return {
                    TAG: "Status",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Status$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "TileSectionSend" :
          if (fromServer) {
            return {
                    TAG: "TileSectionSend",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packetv1405_TileSectionSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "TileSectionFrame" :
          if (fromServer) {
            return {
                    TAG: "TileSectionFrame",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerSpawn" :
          return {
                  TAG: "PlayerSpawn",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerUpdate" :
          return {
                  TAG: "PlayerUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerActive" :
          if (fromServer) {
            return {
                    TAG: "PlayerActive",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerActive$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerHealth" :
          return {
                  TAG: "PlayerHealth",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerHealth$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TileModify" :
          return {
                  TAG: "TileModify",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileModify$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TimeSet" :
          if (fromServer) {
            return {
                    TAG: "TimeSet",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TimeSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "DoorUse" :
          return {
                  TAG: "DoorUse",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_DoorUse$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TileSquareSend" :
          return {
                  TAG: "TileSquareSend",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ItemDropUpdate" :
          return {
                  TAG: "ItemDropUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ItemOwner" :
          return {
                  TAG: "ItemOwner",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemOwner$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcUpdate" :
          if (fromServer) {
            return {
                    TAG: "NpcUpdate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NpcItemStrike" :
          return {
                  TAG: "NpcItemStrike",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ProjectileSync" :
          return {
                  TAG: "ProjectileSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcStrike" :
          return {
                  TAG: "NpcStrike",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcStrike$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ProjectileDestroy" :
          return {
                  TAG: "ProjectileDestroy",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PvpToggle" :
          return {
                  TAG: "PvpToggle",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PvpToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ChestOpen" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ChestOpen",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ChestOpen$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ChestItem" :
          return {
                  TAG: "ChestItem",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestItem$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ActiveContainerSync" :
          return {
                  TAG: "ActiveContainerSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ChestPlace" :
          return {
                  TAG: "ChestPlace",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "HealEffect" :
          return {
                  TAG: "HealEffect",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_HealEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "Zones" :
          return {
                  TAG: "Zones",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Zones$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PasswordRequired" :
          if (fromServer) {
            return {
                    TAG: "PasswordRequired",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PasswordRequired$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PasswordSend" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "PasswordSend",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PasswordSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ItemOwnerRemove" :
          if (fromServer) {
            return {
                    TAG: "ItemOwnerRemove",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NpcTalk" :
          return {
                  TAG: "NpcTalk",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcTalk$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerAnimation" :
          return {
                  TAG: "PlayerAnimation",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerMana" :
          return {
                  TAG: "PlayerMana",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerMana$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ManaEffect" :
          return {
                  TAG: "ManaEffect",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ManaEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerTeam" :
          return {
                  TAG: "PlayerTeam",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerTeam$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "SignRead" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "SignRead",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_SignRead$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "SignNew" :
          return {
                  TAG: "SignNew",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SignNew$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "LiquidSet" :
          return {
                  TAG: "LiquidSet",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_LiquidSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerSpawnSelf" :
          if (fromServer) {
            return {
                    TAG: "PlayerSpawnSelf",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerBuffsSet" :
          return {
                  TAG: "PlayerBuffsSet",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcSpecialEffect" :
          return {
                  TAG: "NpcSpecialEffect",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ChestOrTempleUnlock" :
          return {
                  TAG: "ChestOrTempleUnlock",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcBuffAdd" :
          return {
                  TAG: "NpcBuffAdd",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcBuffUpdate" :
          if (fromServer) {
            return {
                    TAG: "NpcBuffUpdate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerBuffAdd" :
          return {
                  TAG: "PlayerBuffAdd",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcNameUpdate" :
          return {
                  TAG: "NpcNameUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "GoodEvilUpdate" :
          if (fromServer) {
            return {
                    TAG: "GoodEvilUpdate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "HarpPlay" :
          return {
                  TAG: "HarpPlay",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_HarpPlay$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "SwitchHit" :
          return {
                  TAG: "SwitchHit",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SwitchHit$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcHomeUpdate" :
          return {
                  TAG: "NpcHomeUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "BossOrInvasionSpawn" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "BossOrInvasionSpawn",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "PlayerDodge" :
          return {
                  TAG: "PlayerDodge",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDodge$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TilePaint" :
          return {
                  TAG: "TilePaint",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TilePaint$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "WallPaint" :
          return {
                  TAG: "WallPaint",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_WallPaint$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "Teleport" :
          return {
                  TAG: "Teleport",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Teleport$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerHealOther" :
          return {
                  TAG: "PlayerHealOther",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "DimensionsUpdate" :
          return {
                  TAG: "DimensionsUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ClientUuid" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ClientUuid",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientUuid$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ChestName" :
          return {
                  TAG: "ChestName",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestName$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "CatchNpc" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "CatchNpc",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CatchNpc$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ReleaseNpc" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ReleaseNpc",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "TravellingMerchantInventory" :
          if (fromServer) {
            return {
                    TAG: "TravellingMerchantInventory",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "TeleportationPotion" :
          return {
                  TAG: "TeleportationPotion",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "AnglerQuest" :
          if (fromServer) {
            return {
                    TAG: "AnglerQuest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_AnglerQuest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "AnglerQuestComplete" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "AnglerQuestComplete",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "AnglerQuestsCompletedAmount" :
          return {
                  TAG: "AnglerQuestsCompletedAmount",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TemporaryAnimationCreate" :
          if (fromServer) {
            return {
                    TAG: "TemporaryAnimationCreate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "InvasionProgressReport" :
          if (fromServer) {
            return {
                    TAG: "InvasionProgressReport",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "ObjectPlace" :
          return {
                  TAG: "ObjectPlace",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ObjectPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerChestIndexSync" :
          if (fromServer) {
            return {
                    TAG: "PlayerChestIndexSync",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "CombatNumberCreate" :
          if (fromServer) {
            return {
                    TAG: "CombatNumberCreate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NetModuleLoad" :
          return {
                  TAG: "NetModuleLoad",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket.parse(buffer, fromServer);
                      })
                  }
                };
      case "NpcKillCount" :
          if (fromServer) {
            return {
                    TAG: "NpcKillCount",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcKillCount$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerStealth" :
          return {
                  TAG: "PlayerStealth",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerStealth$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ItemForceIntoNearestChest" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ItemForceIntoNearestChest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "TileEntityUpdate" :
          if (fromServer) {
            return {
                    TAG: "TileEntityUpdate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "TileEntityPlace" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "TileEntityPlace",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ItemDropModify" :
          if (fromServer) {
            return {
                    TAG: "ItemDropModify",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemDropModify$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "ItemFramePlace" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ItemFramePlace",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ItemDropInstancedUpdate" :
          return {
                  TAG: "ItemDropInstancedUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "EmoteBubble" :
          if (fromServer) {
            return {
                    TAG: "EmoteBubble",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_EmoteBubble$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "ExtraValueSync" :
          return {
                  TAG: "ExtraValueSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "SocialHandshake" :
          return {
                  TAG: "SocialHandshake",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SocialHandshake$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "Unused" :
          return {
                  TAG: "Unused",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Unused$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PortalKill" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "PortalKill",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PortalKill$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "PlayerTeleportPortal" :
          return {
                  TAG: "PlayerTeleportPortal",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcKilledNotification" :
          if (fromServer) {
            return {
                    TAG: "NpcKilledNotification",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "EventNotification" :
          if (fromServer) {
            return {
                    TAG: "EventNotification",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_EventNotification$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "MinionTargetUpdate" :
          return {
                  TAG: "MinionTargetUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcTeleportPortal" :
          return {
                  TAG: "NpcTeleportPortal",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ShieldStrengthsUpdate" :
          if (fromServer) {
            return {
                    TAG: "ShieldStrengthsUpdate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NebulaLevelUp" :
          return {
                  TAG: "NebulaLevelUp",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "MoonLordCountdown" :
          if (fromServer) {
            return {
                    TAG: "MoonLordCountdown",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NpcShopItem" :
          if (fromServer) {
            return {
                    TAG: "NpcShopItem",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcShopItem$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "GemLockToggle" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "GemLockToggle",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_GemLockToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "SmokePoof" :
          if (fromServer) {
            return {
                    TAG: "SmokePoof",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_SmokePoof$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "ChatMessageSmart" :
          if (fromServer) {
            return {
                    TAG: "ChatMessageSmart",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "WiredCannonShot" :
          if (fromServer) {
            return {
                    TAG: "WiredCannonShot",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "MassWireOperation" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "MassWireOperation",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MassWireOperation$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "MassWireOperationPay" :
          if (fromServer) {
            return {
                    TAG: "MassWireOperationPay",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PartyToggle" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "PartyToggle",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PartyToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "TreeGrowFx" :
          return {
                  TAG: "TreeGrowFx",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "CrystalInvasionStart" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "CrystalInvasionStart",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "CrystalInvasionWipeAll" :
          if (fromServer) {
            return {
                    TAG: "CrystalInvasionWipeAll",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "MinionAttackTargetUpdate" :
          return {
                  TAG: "MinionAttackTargetUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "CrystalInvasionSendWaitTime" :
          if (fromServer) {
            return {
                    TAG: "CrystalInvasionSendWaitTime",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "PlayerDamage" :
          return {
                  TAG: "PlayerDamage",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDamage$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerDeath" :
          return {
                  TAG: "PlayerDeath",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDeath$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "CombatTextCreate" :
          if (fromServer) {
            return {
                    TAG: "CombatTextCreate",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "Emoji" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "Emoji",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Emoji$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "TileEntityDisplayDollItemSync" :
          return {
                  TAG: "TileEntityDisplayDollItemSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TileEntityInteractionRequest" :
          return {
                  TAG: "TileEntityInteractionRequest",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "WeaponsRackTryPlacing" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "WeaponsRackTryPlacing",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "TileEntityHatRackItemSync" :
          return {
                  TAG: "TileEntityHatRackItemSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "TilePickingSync" :
          return {
                  TAG: "TilePickingSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TilePickingSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "RevengeMarkerSync" :
          if (fromServer) {
            return {
                    TAG: "RevengeMarkerSync",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "RevengeMarkerRemove" :
          if (fromServer) {
            return {
                    TAG: "RevengeMarkerRemove",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "GolfBallLandInCup" :
          return {
                  TAG: "GolfBallLandInCup",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "ClientFinishConnectingToServer" :
          if (fromServer) {
            return {
                    TAG: "ClientFinishConnectingToServer",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "NpcFishOut" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "NpcFishOut",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcFishOut$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "NpcTamper" :
          if (fromServer) {
            return {
                    TAG: "NpcTamper",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcTamper$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "LegacySoundPlay" :
          if (fromServer) {
            return {
                    TAG: "LegacySoundPlay",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "FoodPlatterTryPlacing" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "FoodPlatterTryPlacing",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "PlayerLuckFactorsUpdate" :
          return {
                  TAG: "PlayerLuckFactorsUpdate",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "PlayerDead" :
          if (fromServer) {
            return {
                    TAG: "PlayerDead",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerDead$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case "CavernMonsterTypeSync" :
          return {
                  TAG: "CavernMonsterTypeSync",
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case "NpcBuffRemovalRequest" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "NpcBuffRemovalRequest",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "ClientSyncedInventory" :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: "ClientSyncedInventory",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case "CountsAsHostForGameplaySet" :
          if (fromServer) {
            return {
                    TAG: "CountsAsHostForGameplaySet",
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      default:
        return ;
    }
  }
  catch (_e){
    return ;
  }
}

function parse(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                return {
                        TAG: "SerializeNotNecessary",
                        _0: packet,
                        _1: buffer
                      };
              }));
}

function parseAsLatest(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                var packet$1 = Packetv1405$DarkgamingRescriptTerrariapacket.toLatest(packet, fromServer);
                if (packet$1.TAG === "Same") {
                  return {
                          TAG: "SerializeNotNecessary",
                          _0: packet$1._0,
                          _1: buffer
                        };
                } else {
                  return {
                          TAG: "ShouldSerialize",
                          _0: packet$1._0
                        };
                }
              }));
}

function parseAsLatestLazy(buffer, fromServer) {
  return Belt_Option.map(simpleParseLazy(buffer, fromServer), (function (packet) {
                return Packetv1405$DarkgamingRescriptTerrariapacket.Lazy.toLatest(packet, fromServer);
              }));
}

exports.parse = parse;
exports.parseAsLatest = parseAsLatest;
exports.parseAsLatestLazy = parseAsLatestLazy;
/* Packetv1405-DarkgamingRescriptTerrariapacket Not a pure module */
