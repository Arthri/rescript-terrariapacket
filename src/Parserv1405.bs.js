// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var PacketType$DarkgamingRescriptTerrariapacket = require("./PacketType.bs.js");
var Packetv1405$DarkgamingRescriptTerrariapacket = require("./Packetv1405.bs.js");
var Packet_Emoji$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Emoji.bs.js");
var Packet_Zones$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Zones.bs.js");
var Packet_Status$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Status.bs.js");
var Packet_Unused$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Unused.bs.js");
var Packet_DoorUse$DarkgamingRescriptTerrariapacket = require("./packet/Packet_DoorUse.bs.js");
var Packet_NpcTalk$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTalk.bs.js");
var Packet_SignNew$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SignNew.bs.js");
var Packet_TimeSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TimeSet.bs.js");
var Packet_CatchNpc$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CatchNpc.bs.js");
var Packet_HarpPlay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_HarpPlay.bs.js");
var Packet_SignRead$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SignRead.bs.js");
var Packet_Teleport$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Teleport.bs.js");
var Packet_ChestItem$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestItem.bs.js");
var Packet_ChestName$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestName.bs.js");
var Packet_ChestOpen$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestOpen.bs.js");
var Packet_ItemOwner$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemOwner.bs.js");
var Packet_LiquidSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_LiquidSet.bs.js");
var Packet_NpcStrike$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcStrike.bs.js");
var Packet_NpcTamper$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTamper.bs.js");
var Packet_NpcUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcUpdate.bs.js");
var Packet_PvpToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PvpToggle.bs.js");
var Packet_SmokePoof$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SmokePoof.bs.js");
var Packet_SwitchHit$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SwitchHit.bs.js");
var Packet_TilePaint$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TilePaint.bs.js");
var Packet_WallPaint$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WallPaint.bs.js");
var Packet_ChestPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestPlace.bs.js");
var Packet_ClientUuid$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientUuid.bs.js");
var Packet_Disconnect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_Disconnect.bs.js");
var Packet_HealEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_HealEffect.bs.js");
var Packet_ManaEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ManaEffect.bs.js");
var Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffAdd.bs.js");
var Packet_NpcFishOut$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcFishOut.bs.js");
var Packet_PlayerDead$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDead.bs.js");
var Packet_PlayerInfo$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerInfo.bs.js");
var Packet_PlayerMana$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerMana.bs.js");
var Packet_PlayerTeam$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerTeam.bs.js");
var Packet_PortalKill$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PortalKill.bs.js");
var Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ReleaseNpc.bs.js");
var Packet_TileModify$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileModify.bs.js");
var Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TreeGrowFx.bs.js");
var Packet_AnglerQuest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuest.bs.js");
var Packet_EmoteBubble$DarkgamingRescriptTerrariapacket = require("./packet/Packet_EmoteBubble.bs.js");
var Packet_NpcShopItem$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcShopItem.bs.js");
var Packet_ObjectPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ObjectPlace.bs.js");
var Packet_PartyToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PartyToggle.bs.js");
var Packet_PlayerDeath$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDeath.bs.js");
var Packet_PlayerDodge$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDodge.bs.js");
var Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSpawn.bs.js");
var Packet_NpcKillCount$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcKillCount.bs.js");
var Packet_PasswordSend$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PasswordSend.bs.js");
var Packet_PlayerActive$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerActive.bs.js");
var Packet_PlayerDamage$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerDamage.bs.js");
var Packet_PlayerHealth$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerHealth.bs.js");
var Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerUpdate.bs.js");
var Packet_GemLockToggle$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GemLockToggle.bs.js");
var Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NebulaLevelUp.bs.js");
var Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NetModuleLoad.bs.js");
var Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffUpdate.bs.js");
var Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcHomeUpdate.bs.js");
var Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcItemStrike.bs.js");
var Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcNameUpdate.bs.js");
var Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerBuffAdd.bs.js");
var Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSlotSet.bs.js");
var Packet_PlayerStealth$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerStealth.bs.js");
var Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ExtraValueSync.bs.js");
var Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GoodEvilUpdate.bs.js");
var Packet_ItemDropModify$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropModify.bs.js");
var Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropUpdate.bs.js");
var Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemFramePlace.bs.js");
var Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerBuffsSet.bs.js");
var Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_WorldInfo.bs.js");
var Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemOwnerRemove.bs.js");
var Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_LegacySoundPlay.bs.js");
var Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerAnimation.bs.js");
var Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerHealOther.bs.js");
var Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerSpawnSelf.bs.js");
var Packet_SocialHandshake$DarkgamingRescriptTerrariapacket = require("./packet/Packet_SocialHandshake.bs.js");
var Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityPlace.bs.js");
var Packet_TilePickingSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TilePickingSync.bs.js");
var Packet_TileSectionSend$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileSectionSend.bs.js");
var Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WiredCannonShot.bs.js");
var Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChatMessageSmart.bs.js");
var Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CombatTextCreate.bs.js");
var Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_DimensionsUpdate.bs.js");
var Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcSpecialEffect.bs.js");
var Packet_PasswordRequired$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PasswordRequired.bs.js");
var Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityUpdate.bs.js");
var Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileSectionFrame.bs.js");
var Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WorldDataRequest.bs.js");
var Packet_EventNotification$DarkgamingRescriptTerrariapacket = require("./packet/Packet_EventNotification.bs.js");
var Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket = require("./packet/Packet_GolfBallLandInCup.bs.js");
var Packet_MassWireOperation$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MassWireOperation.bs.js");
var Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MoonLordCountdown.bs.js");
var Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcTeleportPortal.bs.js");
var Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ProjectileDestroy.bs.js");
var Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_RevengeMarkerSync.bs.js");
var Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CombatNumberCreate.bs.js");
var Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MinionTargetUpdate.bs.js");
var Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ActiveContainerSync.bs.js");
var Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuestComplete.bs.js");
var Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket = require("./packet/Packet_BossOrInvasionSpawn.bs.js");
var Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ChestOrTempleUnlock.bs.js");
var Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerInventorySlot.bs.js");
var Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket = require("./packet/Packet_RevengeMarkerRemove.bs.js");
var Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TeleportationPotion.bs.js");
var Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_ConnectRequest.bs.js");
var Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_ProjectileSync.bs.js");
var Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket = require("./packet/v1405/Packetv1405_TileSquareSend.bs.js");
var Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionStart.bs.js");
var Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MassWireOperationPay.bs.js");
var Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerChestIndexSync.bs.js");
var Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerTeleportPortal.bs.js");
var Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CavernMonsterTypeSync.bs.js");
var Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientSyncedInventory.bs.js");
var Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket = require("./packet/Packet_FoodPlatterTryPlacing.bs.js");
var Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcBuffRemovalRequest.bs.js");
var Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket = require("./packet/Packet_NpcKilledNotification.bs.js");
var Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ShieldStrengthsUpdate.bs.js");
var Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket = require("./packet/Packet_WeaponsRackTryPlacing.bs.js");
var Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionWipeAll.bs.js");
var Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket = require("./packet/Packet_InvasionProgressReport.bs.js");
var Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemDropInstancedUpdate.bs.js");
var Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_PlayerLuckFactorsUpdate.bs.js");
var Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_MinionAttackTargetUpdate.bs.js");
var Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TemporaryAnimationCreate.bs.js");
var Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ItemForceIntoNearestChest.bs.js");
var Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityHatRackItemSync.bs.js");
var Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CountsAsHostForGameplaySet.bs.js");
var Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_InitialTileSectionsRequest.bs.js");
var Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket = require("./packet/Packet_AnglerQuestsCompletedAmount.bs.js");
var Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket = require("./packet/Packet_CrystalInvasionSendWaitTime.bs.js");
var Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TravellingMerchantInventory.bs.js");
var Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityInteractionRequest.bs.js");
var Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket = require("./packet/Packet_TileEntityDisplayDollItemSync.bs.js");
var Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket = require("./packet/Packet_ClientFinishConnectingToServer.bs.js");

function simpleParse(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$DarkgamingRescriptTerrariapacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    switch (packetType) {
      case /* ConnectRequest */0 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ConnectRequest */0,
                                  _0: a
                                };
                        }));
          }
      case /* Disconnect */1 :
          if (fromServer) {
            return Belt_Option.map(Packet_Disconnect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* Disconnect */1,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerSlotSet */2 :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PlayerSlotSet */2,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerInfo */3 :
          return Belt_Option.map(Packet_PlayerInfo$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerInfo */3,
                                _0: a
                              };
                      }));
      case /* PlayerInventorySlot */4 :
          return Belt_Option.map(Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerInventorySlot */4,
                                _0: a
                              };
                      }));
      case /* WorldDataRequest */5 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* WorldDataRequest */5,
                                  _0: a
                                };
                        }));
          }
      case /* WorldInfo */6 :
          if (fromServer) {
            return Belt_Option.map(Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* WorldInfo */6,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* InitialTileSectionsRequest */7 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* InitialTileSectionsRequest */7,
                                  _0: a
                                };
                        }));
          }
      case /* Status */8 :
          if (fromServer) {
            return Belt_Option.map(Packet_Status$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* Status */8,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* TileSectionSend */9 :
          if (fromServer) {
            return Belt_Option.map(Packet_TileSectionSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TileSectionSend */9,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* TileSectionFrame */10 :
          if (fromServer) {
            return Belt_Option.map(Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TileSectionFrame */10,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerSpawn */11 :
          return Belt_Option.map(Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerSpawn */11,
                                _0: a
                              };
                      }));
      case /* PlayerUpdate */12 :
          return Belt_Option.map(Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerUpdate */12,
                                _0: a
                              };
                      }));
      case /* PlayerActive */13 :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerActive$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PlayerActive */13,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerHealth */14 :
          return Belt_Option.map(Packet_PlayerHealth$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerHealth */14,
                                _0: a
                              };
                      }));
      case /* TileModify */15 :
          return Belt_Option.map(Packet_TileModify$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileModify */15,
                                _0: a
                              };
                      }));
      case /* TimeSet */16 :
          if (fromServer) {
            return Belt_Option.map(Packet_TimeSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TimeSet */16,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* DoorUse */17 :
          return Belt_Option.map(Packet_DoorUse$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* DoorUse */17,
                                _0: a
                              };
                      }));
      case /* TileSquareSend */18 :
          return Belt_Option.map(Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileSquareSend */18,
                                _0: a
                              };
                      }));
      case /* ItemDropUpdate */19 :
          return Belt_Option.map(Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemDropUpdate */19,
                                _0: a
                              };
                      }));
      case /* ItemOwner */20 :
          return Belt_Option.map(Packet_ItemOwner$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemOwner */20,
                                _0: a
                              };
                      }));
      case /* NpcUpdate */21 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcUpdate */21,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NpcItemStrike */22 :
          return Belt_Option.map(Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcItemStrike */22,
                                _0: a
                              };
                      }));
      case /* ProjectileSync */23 :
          return Belt_Option.map(Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ProjectileSync */23,
                                _0: a
                              };
                      }));
      case /* NpcStrike */24 :
          return Belt_Option.map(Packet_NpcStrike$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcStrike */24,
                                _0: a
                              };
                      }));
      case /* ProjectileDestroy */25 :
          return Belt_Option.map(Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ProjectileDestroy */25,
                                _0: a
                              };
                      }));
      case /* PvpToggle */26 :
          return Belt_Option.map(Packet_PvpToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PvpToggle */26,
                                _0: a
                              };
                      }));
      case /* ChestOpen */27 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ChestOpen$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ChestOpen */27,
                                  _0: a
                                };
                        }));
          }
      case /* ChestItem */28 :
          return Belt_Option.map(Packet_ChestItem$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestItem */28,
                                _0: a
                              };
                      }));
      case /* ActiveContainerSync */29 :
          return Belt_Option.map(Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ActiveContainerSync */29,
                                _0: a
                              };
                      }));
      case /* ChestPlace */30 :
          return Belt_Option.map(Packet_ChestPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestPlace */30,
                                _0: a
                              };
                      }));
      case /* HealEffect */31 :
          return Belt_Option.map(Packet_HealEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* HealEffect */31,
                                _0: a
                              };
                      }));
      case /* Zones */32 :
          return Belt_Option.map(Packet_Zones$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Zones */32,
                                _0: a
                              };
                      }));
      case /* PasswordRequired */33 :
          if (fromServer) {
            return Belt_Option.map(Packet_PasswordRequired$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PasswordRequired */33,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PasswordSend */34 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PasswordSend$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PasswordSend */34,
                                  _0: a
                                };
                        }));
          }
      case /* ItemOwnerRemove */35 :
          if (fromServer) {
            return Belt_Option.map(Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ItemOwnerRemove */35,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NpcTalk */36 :
          return Belt_Option.map(Packet_NpcTalk$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcTalk */36,
                                _0: a
                              };
                      }));
      case /* PlayerAnimation */37 :
          return Belt_Option.map(Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerAnimation */37,
                                _0: a
                              };
                      }));
      case /* PlayerMana */38 :
          return Belt_Option.map(Packet_PlayerMana$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerMana */38,
                                _0: a
                              };
                      }));
      case /* ManaEffect */39 :
          return Belt_Option.map(Packet_ManaEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ManaEffect */39,
                                _0: a
                              };
                      }));
      case /* PlayerTeam */40 :
          return Belt_Option.map(Packet_PlayerTeam$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerTeam */40,
                                _0: a
                              };
                      }));
      case /* SignRead */41 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_SignRead$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* SignRead */41,
                                  _0: a
                                };
                        }));
          }
      case /* SignNew */42 :
          return Belt_Option.map(Packet_SignNew$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SignNew */42,
                                _0: a
                              };
                      }));
      case /* LiquidSet */43 :
          return Belt_Option.map(Packet_LiquidSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* LiquidSet */43,
                                _0: a
                              };
                      }));
      case /* PlayerSpawnSelf */44 :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PlayerSpawnSelf */44,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerBuffsSet */45 :
          return Belt_Option.map(Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerBuffsSet */45,
                                _0: a
                              };
                      }));
      case /* NpcSpecialEffect */46 :
          return Belt_Option.map(Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcSpecialEffect */46,
                                _0: a
                              };
                      }));
      case /* ChestOrTempleUnlock */47 :
          return Belt_Option.map(Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestOrTempleUnlock */47,
                                _0: a
                              };
                      }));
      case /* NpcBuffAdd */48 :
          return Belt_Option.map(Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcBuffAdd */48,
                                _0: a
                              };
                      }));
      case /* NpcBuffUpdate */49 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcBuffUpdate */49,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerBuffAdd */50 :
          return Belt_Option.map(Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerBuffAdd */50,
                                _0: a
                              };
                      }));
      case /* NpcNameUpdate */51 :
          return Belt_Option.map(Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcNameUpdate */51,
                                _0: a
                              };
                      }));
      case /* GoodEvilUpdate */52 :
          if (fromServer) {
            return Belt_Option.map(Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* GoodEvilUpdate */52,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* HarpPlay */53 :
          return Belt_Option.map(Packet_HarpPlay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* HarpPlay */53,
                                _0: a
                              };
                      }));
      case /* SwitchHit */54 :
          return Belt_Option.map(Packet_SwitchHit$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SwitchHit */54,
                                _0: a
                              };
                      }));
      case /* NpcHomeUpdate */55 :
          return Belt_Option.map(Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcHomeUpdate */55,
                                _0: a
                              };
                      }));
      case /* BossOrInvasionSpawn */56 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* BossOrInvasionSpawn */56,
                                  _0: a
                                };
                        }));
          }
      case /* PlayerDodge */57 :
          return Belt_Option.map(Packet_PlayerDodge$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDodge */57,
                                _0: a
                              };
                      }));
      case /* TilePaint */58 :
          return Belt_Option.map(Packet_TilePaint$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TilePaint */58,
                                _0: a
                              };
                      }));
      case /* WallPaint */59 :
          return Belt_Option.map(Packet_WallPaint$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* WallPaint */59,
                                _0: a
                              };
                      }));
      case /* Teleport */60 :
          return Belt_Option.map(Packet_Teleport$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Teleport */60,
                                _0: a
                              };
                      }));
      case /* PlayerHealOther */61 :
          return Belt_Option.map(Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerHealOther */61,
                                _0: a
                              };
                      }));
      case /* DimensionsUpdate */62 :
          return Belt_Option.map(Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* DimensionsUpdate */62,
                                _0: a
                              };
                      }));
      case /* ClientUuid */63 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ClientUuid$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ClientUuid */63,
                                  _0: a
                                };
                        }));
          }
      case /* ChestName */64 :
          return Belt_Option.map(Packet_ChestName$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ChestName */64,
                                _0: a
                              };
                      }));
      case /* CatchNpc */65 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_CatchNpc$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CatchNpc */65,
                                  _0: a
                                };
                        }));
          }
      case /* ReleaseNpc */66 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ReleaseNpc */66,
                                  _0: a
                                };
                        }));
          }
      case /* TravellingMerchantInventory */67 :
          if (fromServer) {
            return Belt_Option.map(Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TravellingMerchantInventory */67,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* TeleportationPotion */68 :
          return Belt_Option.map(Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TeleportationPotion */68,
                                _0: a
                              };
                      }));
      case /* AnglerQuest */69 :
          if (fromServer) {
            return Belt_Option.map(Packet_AnglerQuest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* AnglerQuest */69,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* AnglerQuestComplete */70 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* AnglerQuestComplete */70,
                                  _0: a
                                };
                        }));
          }
      case /* AnglerQuestsCompletedAmount */71 :
          return Belt_Option.map(Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* AnglerQuestsCompletedAmount */71,
                                _0: a
                              };
                      }));
      case /* TemporaryAnimationCreate */72 :
          if (fromServer) {
            return Belt_Option.map(Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TemporaryAnimationCreate */72,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* InvasionProgressReport */73 :
          if (fromServer) {
            return Belt_Option.map(Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* InvasionProgressReport */73,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* ObjectPlace */74 :
          return Belt_Option.map(Packet_ObjectPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ObjectPlace */74,
                                _0: a
                              };
                      }));
      case /* PlayerChestIndexSync */75 :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PlayerChestIndexSync */75,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* CombatNumberCreate */76 :
          if (fromServer) {
            return Belt_Option.map(Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CombatNumberCreate */76,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NetModuleLoad */77 :
          return Belt_Option.map(Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket.parse(buffer, fromServer), (function (a) {
                        return {
                                TAG: /* NetModuleLoad */77,
                                _0: a
                              };
                      }));
      case /* NpcKillCount */78 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcKillCount$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcKillCount */78,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerStealth */79 :
          return Belt_Option.map(Packet_PlayerStealth$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerStealth */79,
                                _0: a
                              };
                      }));
      case /* ItemForceIntoNearestChest */80 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ItemForceIntoNearestChest */80,
                                  _0: a
                                };
                        }));
          }
      case /* TileEntityUpdate */81 :
          if (fromServer) {
            return Belt_Option.map(Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TileEntityUpdate */81,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* TileEntityPlace */82 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* TileEntityPlace */82,
                                  _0: a
                                };
                        }));
          }
      case /* ItemDropModify */83 :
          if (fromServer) {
            return Belt_Option.map(Packet_ItemDropModify$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ItemDropModify */83,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* ItemFramePlace */84 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ItemFramePlace */84,
                                  _0: a
                                };
                        }));
          }
      case /* ItemDropInstancedUpdate */85 :
          return Belt_Option.map(Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ItemDropInstancedUpdate */85,
                                _0: a
                              };
                      }));
      case /* EmoteBubble */86 :
          if (fromServer) {
            return Belt_Option.map(Packet_EmoteBubble$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* EmoteBubble */86,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* ExtraValueSync */87 :
          return Belt_Option.map(Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* ExtraValueSync */87,
                                _0: a
                              };
                      }));
      case /* SocialHandshake */88 :
          return Belt_Option.map(Packet_SocialHandshake$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* SocialHandshake */88,
                                _0: a
                              };
                      }));
      case /* Unused */89 :
          return Belt_Option.map(Packet_Unused$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* Unused */89,
                                _0: a
                              };
                      }));
      case /* PortalKill */90 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PortalKill$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PortalKill */90,
                                  _0: a
                                };
                        }));
          }
      case /* PlayerTeleportPortal */91 :
          return Belt_Option.map(Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerTeleportPortal */91,
                                _0: a
                              };
                      }));
      case /* NpcKilledNotification */92 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcKilledNotification */92,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* EventNotification */93 :
          if (fromServer) {
            return Belt_Option.map(Packet_EventNotification$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* EventNotification */93,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* MinionTargetUpdate */94 :
          return Belt_Option.map(Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MinionTargetUpdate */94,
                                _0: a
                              };
                      }));
      case /* NpcTeleportPortal */95 :
          return Belt_Option.map(Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NpcTeleportPortal */95,
                                _0: a
                              };
                      }));
      case /* ShieldStrengthsUpdate */96 :
          if (fromServer) {
            return Belt_Option.map(Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ShieldStrengthsUpdate */96,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NebulaLevelUp */97 :
          return Belt_Option.map(Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* NebulaLevelUp */97,
                                _0: a
                              };
                      }));
      case /* MoonLordCountdown */98 :
          if (fromServer) {
            return Belt_Option.map(Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* MoonLordCountdown */98,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NpcShopItem */99 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcShopItem$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcShopItem */99,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* GemLockToggle */100 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_GemLockToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* GemLockToggle */100,
                                  _0: a
                                };
                        }));
          }
      case /* SmokePoof */101 :
          if (fromServer) {
            return Belt_Option.map(Packet_SmokePoof$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* SmokePoof */101,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* ChatMessageSmart */102 :
          if (fromServer) {
            return Belt_Option.map(Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ChatMessageSmart */102,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* WiredCannonShot */103 :
          if (fromServer) {
            return Belt_Option.map(Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* WiredCannonShot */103,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* MassWireOperation */104 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_MassWireOperation$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* MassWireOperation */104,
                                  _0: a
                                };
                        }));
          }
      case /* MassWireOperationPay */105 :
          if (fromServer) {
            return Belt_Option.map(Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* MassWireOperationPay */105,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PartyToggle */106 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_PartyToggle$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PartyToggle */106,
                                  _0: a
                                };
                        }));
          }
      case /* TreeGrowFx */107 :
          return Belt_Option.map(Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TreeGrowFx */107,
                                _0: a
                              };
                      }));
      case /* CrystalInvasionStart */108 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CrystalInvasionStart */108,
                                  _0: a
                                };
                        }));
          }
      case /* CrystalInvasionWipeAll */109 :
          if (fromServer) {
            return Belt_Option.map(Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CrystalInvasionWipeAll */109,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* MinionAttackTargetUpdate */110 :
          return Belt_Option.map(Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* MinionAttackTargetUpdate */110,
                                _0: a
                              };
                      }));
      case /* CrystalInvasionSendWaitTime */111 :
          if (fromServer) {
            return Belt_Option.map(Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CrystalInvasionSendWaitTime */111,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* PlayerDamage */112 :
          return Belt_Option.map(Packet_PlayerDamage$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDamage */112,
                                _0: a
                              };
                      }));
      case /* PlayerDeath */113 :
          return Belt_Option.map(Packet_PlayerDeath$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerDeath */113,
                                _0: a
                              };
                      }));
      case /* CombatTextCreate */114 :
          if (fromServer) {
            return Belt_Option.map(Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CombatTextCreate */114,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* Emoji */115 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_Emoji$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* Emoji */115,
                                  _0: a
                                };
                        }));
          }
      case /* TileEntityDisplayDollItemSync */116 :
          return Belt_Option.map(Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityDisplayDollItemSync */116,
                                _0: a
                              };
                      }));
      case /* TileEntityInteractionRequest */117 :
          return Belt_Option.map(Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityInteractionRequest */117,
                                _0: a
                              };
                      }));
      case /* WeaponsRackTryPlacing */118 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* WeaponsRackTryPlacing */118,
                                  _0: a
                                };
                        }));
          }
      case /* TileEntityHatRackItemSync */119 :
          return Belt_Option.map(Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TileEntityHatRackItemSync */119,
                                _0: a
                              };
                      }));
      case /* TilePickingSync */120 :
          return Belt_Option.map(Packet_TilePickingSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* TilePickingSync */120,
                                _0: a
                              };
                      }));
      case /* RevengeMarkerSync */121 :
          if (fromServer) {
            return Belt_Option.map(Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* RevengeMarkerSync */121,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* RevengeMarkerRemove */122 :
          if (fromServer) {
            return Belt_Option.map(Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* RevengeMarkerRemove */122,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* GolfBallLandInCup */123 :
          return Belt_Option.map(Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* GolfBallLandInCup */123,
                                _0: a
                              };
                      }));
      case /* ClientFinishConnectingToServer */124 :
          if (fromServer) {
            return Belt_Option.map(Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ClientFinishConnectingToServer */124,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* NpcFishOut */125 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_NpcFishOut$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcFishOut */125,
                                  _0: a
                                };
                        }));
          }
      case /* NpcTamper */126 :
          if (fromServer) {
            return Belt_Option.map(Packet_NpcTamper$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcTamper */126,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* LegacySoundPlay */127 :
          if (fromServer) {
            return Belt_Option.map(Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* LegacySoundPlay */127,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* FoodPlatterTryPlacing */128 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* FoodPlatterTryPlacing */128,
                                  _0: a
                                };
                        }));
          }
      case /* PlayerLuckFactorsUpdate */129 :
          return Belt_Option.map(Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* PlayerLuckFactorsUpdate */129,
                                _0: a
                              };
                      }));
      case /* PlayerDead */130 :
          if (fromServer) {
            return Belt_Option.map(Packet_PlayerDead$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* PlayerDead */130,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      case /* CavernMonsterTypeSync */131 :
          return Belt_Option.map(Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                        return {
                                TAG: /* CavernMonsterTypeSync */131,
                                _0: a
                              };
                      }));
      case /* NpcBuffRemovalRequest */132 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* NpcBuffRemovalRequest */132,
                                  _0: a
                                };
                        }));
          }
      case /* ClientSyncedInventory */133 :
          if (fromServer) {
            return ;
          } else {
            return Belt_Option.map(Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* ClientSyncedInventory */133,
                                  _0: a
                                };
                        }));
          }
      case /* CountsAsHostForGameplaySet */134 :
          if (fromServer) {
            return Belt_Option.map(Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket.parse(buffer), (function (a) {
                          return {
                                  TAG: /* CountsAsHostForGameplaySet */134,
                                  _0: a
                                };
                        }));
          } else {
            return ;
          }
      
    }
  }
  catch (_e){
    return ;
  }
}

function simpleParseLazy(buffer, fromServer) {
  var match = buffer.length;
  if (!(match > 2 || match < 0)) {
    return ;
  }
  var packetType = PacketType$DarkgamingRescriptTerrariapacket.fromInt(buffer[2]);
  if (packetType === undefined) {
    return ;
  }
  try {
    switch (packetType) {
      case /* ConnectRequest */0 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ConnectRequest */0,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packetv1405_ConnectRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* Disconnect */1 :
          if (fromServer) {
            return {
                    TAG: /* Disconnect */1,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Disconnect$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerSlotSet */2 :
          if (fromServer) {
            return {
                    TAG: /* PlayerSlotSet */2,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerSlotSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerInfo */3 :
          return {
                  TAG: /* PlayerInfo */3,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerInfo$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerInventorySlot */4 :
          return {
                  TAG: /* PlayerInventorySlot */4,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerInventorySlot$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* WorldDataRequest */5 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* WorldDataRequest */5,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WorldDataRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* WorldInfo */6 :
          if (fromServer) {
            return {
                    TAG: /* WorldInfo */6,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packetv1405_WorldInfo$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* InitialTileSectionsRequest */7 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* InitialTileSectionsRequest */7,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_InitialTileSectionsRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* Status */8 :
          if (fromServer) {
            return {
                    TAG: /* Status */8,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Status$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* TileSectionSend */9 :
          if (fromServer) {
            return {
                    TAG: /* TileSectionSend */9,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileSectionSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* TileSectionFrame */10 :
          if (fromServer) {
            return {
                    TAG: /* TileSectionFrame */10,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileSectionFrame$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerSpawn */11 :
          return {
                  TAG: /* PlayerSpawn */11,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerSpawn$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerUpdate */12 :
          return {
                  TAG: /* PlayerUpdate */12,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerActive */13 :
          if (fromServer) {
            return {
                    TAG: /* PlayerActive */13,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerActive$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerHealth */14 :
          return {
                  TAG: /* PlayerHealth */14,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerHealth$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TileModify */15 :
          return {
                  TAG: /* TileModify */15,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileModify$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TimeSet */16 :
          if (fromServer) {
            return {
                    TAG: /* TimeSet */16,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TimeSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* DoorUse */17 :
          return {
                  TAG: /* DoorUse */17,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_DoorUse$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TileSquareSend */18 :
          return {
                  TAG: /* TileSquareSend */18,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packetv1405_TileSquareSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ItemDropUpdate */19 :
          return {
                  TAG: /* ItemDropUpdate */19,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemDropUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ItemOwner */20 :
          return {
                  TAG: /* ItemOwner */20,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemOwner$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcUpdate */21 :
          if (fromServer) {
            return {
                    TAG: /* NpcUpdate */21,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NpcItemStrike */22 :
          return {
                  TAG: /* NpcItemStrike */22,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcItemStrike$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ProjectileSync */23 :
          return {
                  TAG: /* ProjectileSync */23,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packetv1405_ProjectileSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcStrike */24 :
          return {
                  TAG: /* NpcStrike */24,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcStrike$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ProjectileDestroy */25 :
          return {
                  TAG: /* ProjectileDestroy */25,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ProjectileDestroy$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PvpToggle */26 :
          return {
                  TAG: /* PvpToggle */26,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PvpToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ChestOpen */27 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ChestOpen */27,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ChestOpen$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ChestItem */28 :
          return {
                  TAG: /* ChestItem */28,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestItem$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ActiveContainerSync */29 :
          return {
                  TAG: /* ActiveContainerSync */29,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ActiveContainerSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ChestPlace */30 :
          return {
                  TAG: /* ChestPlace */30,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* HealEffect */31 :
          return {
                  TAG: /* HealEffect */31,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_HealEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* Zones */32 :
          return {
                  TAG: /* Zones */32,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Zones$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PasswordRequired */33 :
          if (fromServer) {
            return {
                    TAG: /* PasswordRequired */33,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PasswordRequired$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PasswordSend */34 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* PasswordSend */34,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PasswordSend$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ItemOwnerRemove */35 :
          if (fromServer) {
            return {
                    TAG: /* ItemOwnerRemove */35,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemOwnerRemove$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NpcTalk */36 :
          return {
                  TAG: /* NpcTalk */36,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcTalk$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerAnimation */37 :
          return {
                  TAG: /* PlayerAnimation */37,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerAnimation$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerMana */38 :
          return {
                  TAG: /* PlayerMana */38,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerMana$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ManaEffect */39 :
          return {
                  TAG: /* ManaEffect */39,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ManaEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerTeam */40 :
          return {
                  TAG: /* PlayerTeam */40,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerTeam$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* SignRead */41 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* SignRead */41,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_SignRead$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* SignNew */42 :
          return {
                  TAG: /* SignNew */42,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SignNew$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* LiquidSet */43 :
          return {
                  TAG: /* LiquidSet */43,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_LiquidSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerSpawnSelf */44 :
          if (fromServer) {
            return {
                    TAG: /* PlayerSpawnSelf */44,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerSpawnSelf$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerBuffsSet */45 :
          return {
                  TAG: /* PlayerBuffsSet */45,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerBuffsSet$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcSpecialEffect */46 :
          return {
                  TAG: /* NpcSpecialEffect */46,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcSpecialEffect$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ChestOrTempleUnlock */47 :
          return {
                  TAG: /* ChestOrTempleUnlock */47,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestOrTempleUnlock$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcBuffAdd */48 :
          return {
                  TAG: /* NpcBuffAdd */48,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcBuffUpdate */49 :
          if (fromServer) {
            return {
                    TAG: /* NpcBuffUpdate */49,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcBuffUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerBuffAdd */50 :
          return {
                  TAG: /* PlayerBuffAdd */50,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerBuffAdd$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcNameUpdate */51 :
          return {
                  TAG: /* NpcNameUpdate */51,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcNameUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* GoodEvilUpdate */52 :
          if (fromServer) {
            return {
                    TAG: /* GoodEvilUpdate */52,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_GoodEvilUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* HarpPlay */53 :
          return {
                  TAG: /* HarpPlay */53,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_HarpPlay$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* SwitchHit */54 :
          return {
                  TAG: /* SwitchHit */54,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SwitchHit$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcHomeUpdate */55 :
          return {
                  TAG: /* NpcHomeUpdate */55,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcHomeUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* BossOrInvasionSpawn */56 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* BossOrInvasionSpawn */56,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_BossOrInvasionSpawn$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* PlayerDodge */57 :
          return {
                  TAG: /* PlayerDodge */57,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDodge$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TilePaint */58 :
          return {
                  TAG: /* TilePaint */58,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TilePaint$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* WallPaint */59 :
          return {
                  TAG: /* WallPaint */59,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_WallPaint$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* Teleport */60 :
          return {
                  TAG: /* Teleport */60,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Teleport$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerHealOther */61 :
          return {
                  TAG: /* PlayerHealOther */61,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerHealOther$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* DimensionsUpdate */62 :
          return {
                  TAG: /* DimensionsUpdate */62,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_DimensionsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ClientUuid */63 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ClientUuid */63,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientUuid$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ChestName */64 :
          return {
                  TAG: /* ChestName */64,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ChestName$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* CatchNpc */65 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* CatchNpc */65,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CatchNpc$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ReleaseNpc */66 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ReleaseNpc */66,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ReleaseNpc$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* TravellingMerchantInventory */67 :
          if (fromServer) {
            return {
                    TAG: /* TravellingMerchantInventory */67,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TravellingMerchantInventory$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* TeleportationPotion */68 :
          return {
                  TAG: /* TeleportationPotion */68,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TeleportationPotion$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* AnglerQuest */69 :
          if (fromServer) {
            return {
                    TAG: /* AnglerQuest */69,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_AnglerQuest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* AnglerQuestComplete */70 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* AnglerQuestComplete */70,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_AnglerQuestComplete$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* AnglerQuestsCompletedAmount */71 :
          return {
                  TAG: /* AnglerQuestsCompletedAmount */71,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_AnglerQuestsCompletedAmount$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TemporaryAnimationCreate */72 :
          if (fromServer) {
            return {
                    TAG: /* TemporaryAnimationCreate */72,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TemporaryAnimationCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* InvasionProgressReport */73 :
          if (fromServer) {
            return {
                    TAG: /* InvasionProgressReport */73,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_InvasionProgressReport$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* ObjectPlace */74 :
          return {
                  TAG: /* ObjectPlace */74,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ObjectPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerChestIndexSync */75 :
          if (fromServer) {
            return {
                    TAG: /* PlayerChestIndexSync */75,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerChestIndexSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* CombatNumberCreate */76 :
          if (fromServer) {
            return {
                    TAG: /* CombatNumberCreate */76,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CombatNumberCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NetModuleLoad */77 :
          return {
                  TAG: /* NetModuleLoad */77,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NetModuleLoad$DarkgamingRescriptTerrariapacket.parse(buffer, fromServer);
                      })
                  }
                };
      case /* NpcKillCount */78 :
          if (fromServer) {
            return {
                    TAG: /* NpcKillCount */78,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcKillCount$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerStealth */79 :
          return {
                  TAG: /* PlayerStealth */79,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerStealth$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ItemForceIntoNearestChest */80 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ItemForceIntoNearestChest */80,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemForceIntoNearestChest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* TileEntityUpdate */81 :
          if (fromServer) {
            return {
                    TAG: /* TileEntityUpdate */81,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileEntityUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* TileEntityPlace */82 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* TileEntityPlace */82,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_TileEntityPlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ItemDropModify */83 :
          if (fromServer) {
            return {
                    TAG: /* ItemDropModify */83,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemDropModify$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* ItemFramePlace */84 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ItemFramePlace */84,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ItemFramePlace$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ItemDropInstancedUpdate */85 :
          return {
                  TAG: /* ItemDropInstancedUpdate */85,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ItemDropInstancedUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* EmoteBubble */86 :
          if (fromServer) {
            return {
                    TAG: /* EmoteBubble */86,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_EmoteBubble$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* ExtraValueSync */87 :
          return {
                  TAG: /* ExtraValueSync */87,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_ExtraValueSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* SocialHandshake */88 :
          return {
                  TAG: /* SocialHandshake */88,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_SocialHandshake$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* Unused */89 :
          return {
                  TAG: /* Unused */89,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_Unused$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PortalKill */90 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* PortalKill */90,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PortalKill$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* PlayerTeleportPortal */91 :
          return {
                  TAG: /* PlayerTeleportPortal */91,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcKilledNotification */92 :
          if (fromServer) {
            return {
                    TAG: /* NpcKilledNotification */92,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcKilledNotification$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* EventNotification */93 :
          if (fromServer) {
            return {
                    TAG: /* EventNotification */93,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_EventNotification$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* MinionTargetUpdate */94 :
          return {
                  TAG: /* MinionTargetUpdate */94,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_MinionTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcTeleportPortal */95 :
          return {
                  TAG: /* NpcTeleportPortal */95,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NpcTeleportPortal$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ShieldStrengthsUpdate */96 :
          if (fromServer) {
            return {
                    TAG: /* ShieldStrengthsUpdate */96,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ShieldStrengthsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NebulaLevelUp */97 :
          return {
                  TAG: /* NebulaLevelUp */97,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_NebulaLevelUp$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* MoonLordCountdown */98 :
          if (fromServer) {
            return {
                    TAG: /* MoonLordCountdown */98,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MoonLordCountdown$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NpcShopItem */99 :
          if (fromServer) {
            return {
                    TAG: /* NpcShopItem */99,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcShopItem$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* GemLockToggle */100 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* GemLockToggle */100,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_GemLockToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* SmokePoof */101 :
          if (fromServer) {
            return {
                    TAG: /* SmokePoof */101,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_SmokePoof$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* ChatMessageSmart */102 :
          if (fromServer) {
            return {
                    TAG: /* ChatMessageSmart */102,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ChatMessageSmart$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* WiredCannonShot */103 :
          if (fromServer) {
            return {
                    TAG: /* WiredCannonShot */103,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WiredCannonShot$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* MassWireOperation */104 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* MassWireOperation */104,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MassWireOperation$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* MassWireOperationPay */105 :
          if (fromServer) {
            return {
                    TAG: /* MassWireOperationPay */105,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_MassWireOperationPay$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PartyToggle */106 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* PartyToggle */106,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PartyToggle$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* TreeGrowFx */107 :
          return {
                  TAG: /* TreeGrowFx */107,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TreeGrowFx$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* CrystalInvasionStart */108 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* CrystalInvasionStart */108,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionStart$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* CrystalInvasionWipeAll */109 :
          if (fromServer) {
            return {
                    TAG: /* CrystalInvasionWipeAll */109,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionWipeAll$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* MinionAttackTargetUpdate */110 :
          return {
                  TAG: /* MinionAttackTargetUpdate */110,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_MinionAttackTargetUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* CrystalInvasionSendWaitTime */111 :
          if (fromServer) {
            return {
                    TAG: /* CrystalInvasionSendWaitTime */111,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CrystalInvasionSendWaitTime$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* PlayerDamage */112 :
          return {
                  TAG: /* PlayerDamage */112,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDamage$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerDeath */113 :
          return {
                  TAG: /* PlayerDeath */113,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerDeath$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* CombatTextCreate */114 :
          if (fromServer) {
            return {
                    TAG: /* CombatTextCreate */114,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CombatTextCreate$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* Emoji */115 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* Emoji */115,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_Emoji$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* TileEntityDisplayDollItemSync */116 :
          return {
                  TAG: /* TileEntityDisplayDollItemSync */116,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityDisplayDollItemSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TileEntityInteractionRequest */117 :
          return {
                  TAG: /* TileEntityInteractionRequest */117,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityInteractionRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* WeaponsRackTryPlacing */118 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* WeaponsRackTryPlacing */118,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_WeaponsRackTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* TileEntityHatRackItemSync */119 :
          return {
                  TAG: /* TileEntityHatRackItemSync */119,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TileEntityHatRackItemSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* TilePickingSync */120 :
          return {
                  TAG: /* TilePickingSync */120,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_TilePickingSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* RevengeMarkerSync */121 :
          if (fromServer) {
            return {
                    TAG: /* RevengeMarkerSync */121,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_RevengeMarkerSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* RevengeMarkerRemove */122 :
          if (fromServer) {
            return {
                    TAG: /* RevengeMarkerRemove */122,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_RevengeMarkerRemove$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* GolfBallLandInCup */123 :
          return {
                  TAG: /* GolfBallLandInCup */123,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_GolfBallLandInCup$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* ClientFinishConnectingToServer */124 :
          if (fromServer) {
            return {
                    TAG: /* ClientFinishConnectingToServer */124,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientFinishConnectingToServer$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* NpcFishOut */125 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* NpcFishOut */125,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcFishOut$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* NpcTamper */126 :
          if (fromServer) {
            return {
                    TAG: /* NpcTamper */126,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcTamper$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* LegacySoundPlay */127 :
          if (fromServer) {
            return {
                    TAG: /* LegacySoundPlay */127,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_LegacySoundPlay$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* FoodPlatterTryPlacing */128 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* FoodPlatterTryPlacing */128,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_FoodPlatterTryPlacing$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* PlayerLuckFactorsUpdate */129 :
          return {
                  TAG: /* PlayerLuckFactorsUpdate */129,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_PlayerLuckFactorsUpdate$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* PlayerDead */130 :
          if (fromServer) {
            return {
                    TAG: /* PlayerDead */130,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_PlayerDead$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      case /* CavernMonsterTypeSync */131 :
          return {
                  TAG: /* CavernMonsterTypeSync */131,
                  _0: {
                    LAZY_DONE: false,
                    VAL: (function () {
                        return Packet_CavernMonsterTypeSync$DarkgamingRescriptTerrariapacket.parse(buffer);
                      })
                  }
                };
      case /* NpcBuffRemovalRequest */132 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* NpcBuffRemovalRequest */132,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_NpcBuffRemovalRequest$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* ClientSyncedInventory */133 :
          if (fromServer) {
            return ;
          } else {
            return {
                    TAG: /* ClientSyncedInventory */133,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_ClientSyncedInventory$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          }
      case /* CountsAsHostForGameplaySet */134 :
          if (fromServer) {
            return {
                    TAG: /* CountsAsHostForGameplaySet */134,
                    _0: {
                      LAZY_DONE: false,
                      VAL: (function () {
                          return Packet_CountsAsHostForGameplaySet$DarkgamingRescriptTerrariapacket.parse(buffer);
                        })
                    }
                  };
          } else {
            return ;
          }
      
    }
  }
  catch (_e){
    return ;
  }
}

function parse(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                return {
                        TAG: /* SerializeNotNecessary */1,
                        _0: packet,
                        _1: buffer
                      };
              }));
}

function parseAsLatest(buffer, fromServer) {
  return Belt_Option.map(simpleParse(buffer, fromServer), (function (packet) {
                var packet$1 = Packetv1405$DarkgamingRescriptTerrariapacket.toLatest(packet, fromServer);
                if (packet$1.TAG === /* Same */0) {
                  return {
                          TAG: /* SerializeNotNecessary */1,
                          _0: packet$1._0,
                          _1: buffer
                        };
                } else {
                  return {
                          TAG: /* ShouldSerialize */0,
                          _0: packet$1._0
                        };
                }
              }));
}

function parseAsLatestLazy(buffer, fromServer) {
  return Belt_Option.map(simpleParseLazy(buffer, fromServer), (function (packet) {
                return Packetv1405$DarkgamingRescriptTerrariapacket.Lazy.toLatest(packet, fromServer);
              }));
}

exports.parse = parse;
exports.parseAsLatest = parseAsLatest;
exports.parseAsLatestLazy = parseAsLatestLazy;
/* Packetv1405-DarkgamingRescriptTerrariapacket Not a pure module */
